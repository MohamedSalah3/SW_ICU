
softwareICU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000201c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  0000201c  000020b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000029  00800168  00800168  000021b8  2**0
                  ALLOC
  3 .stab         00001bcc  00000000  00000000  000021b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000583  00000000  00000000  00003d84  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000200  00000000  00000000  00004308  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002446  00000000  00000000  00004508  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000096e  00000000  00000000  0000694e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b76  00000000  00000000  000072bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b80  00000000  00000000  00007e34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cc9  00000000  00000000  000089b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002b86  00000000  00000000  0000967d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000c203  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 59 01 	jmp	0x2b2	; 0x2b2 <__vector_1>
       8:	0c 94 80 01 	jmp	0x300	; 0x300 <__vector_2>
       c:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__vector_3>
      10:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__vector_4>
      14:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <__vector_5>
      18:	0c 94 1c 02 	jmp	0x438	; 0x438 <__vector_6>
      1c:	0c 94 43 02 	jmp	0x486	; 0x486 <__vector_7>
      20:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__vector_8>
      24:	0c 94 91 02 	jmp	0x522	; 0x522 <__vector_9>
      28:	0c 94 b8 02 	jmp	0x570	; 0x570 <__vector_10>
      2c:	0c 94 df 02 	jmp	0x5be	; 0x5be <__vector_11>
      30:	0c 94 06 03 	jmp	0x60c	; 0x60c <__vector_12>
      34:	0c 94 2d 03 	jmp	0x65a	; 0x65a <__vector_13>
      38:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__vector_14>
      3c:	0c 94 7b 03 	jmp	0x6f6	; 0x6f6 <__vector_15>
      40:	0c 94 a2 03 	jmp	0x744	; 0x744 <__vector_16>
      44:	0c 94 c9 03 	jmp	0x792	; 0x792 <__vector_17>
      48:	0c 94 f0 03 	jmp	0x7e0	; 0x7e0 <__vector_18>
      4c:	0c 94 17 04 	jmp	0x82e	; 0x82e <__vector_19>
      50:	0c 94 3e 04 	jmp	0x87c	; 0x87c <__vector_20>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e1       	ldi	r30, 0x1C	; 28
      68:	f0 e2       	ldi	r31, 0x20	; 32
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a8 e6       	ldi	r26, 0x68	; 104
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 39       	cpi	r26, 0x91	; 145
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 d0 05 	call	0xba0	; 0xba0 <main>
      8a:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <gpioPortDirection>:
 * @param value: set the port value and takes the following values
 * 				- 0x00 -> Low
 * 				- 0xff -> High
 */

switch (u8_port)	
      92:	81 30       	cpi	r24, 0x01	; 1
      94:	49 f0       	breq	.+18     	; 0xa8 <gpioPortDirection+0x16>
      96:	81 30       	cpi	r24, 0x01	; 1
      98:	28 f0       	brcs	.+10     	; 0xa4 <gpioPortDirection+0x12>
      9a:	82 30       	cpi	r24, 0x02	; 2
      9c:	39 f0       	breq	.+14     	; 0xac <gpioPortDirection+0x1a>
      9e:	83 30       	cpi	r24, 0x03	; 3
      a0:	41 f4       	brne	.+16     	; 0xb2 <gpioPortDirection+0x20>
      a2:	06 c0       	rjmp	.+12     	; 0xb0 <gpioPortDirection+0x1e>
{	case GPIOA:
	PORTA_DIR = u8_direction;
      a4:	6a bb       	out	0x1a, r22	; 26
	break;
      a6:	08 95       	ret
	case GPIOB:
	PORTB_DIR = u8_direction;
      a8:	67 bb       	out	0x17, r22	; 23
	break;
      aa:	08 95       	ret
	case GPIOC:
	PORTC_DIR = u8_direction;
      ac:	64 bb       	out	0x14, r22	; 20
	break;
      ae:	08 95       	ret
	case GPIOD:
	PORTD_DIR = u8_direction;
      b0:	61 bb       	out	0x11, r22	; 17
      b2:	08 95       	ret

000000b4 <gpioPortWrite>:
}

void gpioPortWrite(uint8_t u8_port, uint8_t u8_value)
{
	
switch (u8_port)	
      b4:	81 30       	cpi	r24, 0x01	; 1
      b6:	49 f0       	breq	.+18     	; 0xca <gpioPortWrite+0x16>
      b8:	81 30       	cpi	r24, 0x01	; 1
      ba:	28 f0       	brcs	.+10     	; 0xc6 <gpioPortWrite+0x12>
      bc:	82 30       	cpi	r24, 0x02	; 2
      be:	39 f0       	breq	.+14     	; 0xce <gpioPortWrite+0x1a>
      c0:	83 30       	cpi	r24, 0x03	; 3
      c2:	41 f4       	brne	.+16     	; 0xd4 <gpioPortWrite+0x20>
      c4:	06 c0       	rjmp	.+12     	; 0xd2 <gpioPortWrite+0x1e>
{	case GPIOA:
	PORTA_DATA = u8_value;
      c6:	6b bb       	out	0x1b, r22	; 27
	break;
      c8:	08 95       	ret
	case GPIOB:
	PORTB_DATA = u8_value;
      ca:	68 bb       	out	0x18, r22	; 24
	break;
      cc:	08 95       	ret
	case GPIOC:
	PORTC_DATA = u8_value;
      ce:	65 bb       	out	0x15, r22	; 21
	break;
      d0:	08 95       	ret
	case GPIOD:
	PORTD_DATA = u8_value;
      d2:	62 bb       	out	0x12, r22	; 18
      d4:	08 95       	ret

000000d6 <gpioPortToggle>:
	
}
void gpioPortToggle(uint8_t u8_port)
{
	
switch (u8_port)	
      d6:	81 30       	cpi	r24, 0x01	; 1
      d8:	59 f0       	breq	.+22     	; 0xf0 <gpioPortToggle+0x1a>
      da:	81 30       	cpi	r24, 0x01	; 1
      dc:	28 f0       	brcs	.+10     	; 0xe8 <gpioPortToggle+0x12>
      de:	82 30       	cpi	r24, 0x02	; 2
      e0:	59 f0       	breq	.+22     	; 0xf8 <gpioPortToggle+0x22>
      e2:	83 30       	cpi	r24, 0x03	; 3
      e4:	81 f4       	brne	.+32     	; 0x106 <gpioPortToggle+0x30>
      e6:	0c c0       	rjmp	.+24     	; 0x100 <gpioPortToggle+0x2a>
{	case GPIOA:
	PORTA_DATA ^= HIGH;
      e8:	8b b3       	in	r24, 0x1b	; 27
      ea:	80 95       	com	r24
      ec:	8b bb       	out	0x1b, r24	; 27
	break;
      ee:	08 95       	ret
	case GPIOB:
	PORTB_DATA ^= HIGH;
      f0:	88 b3       	in	r24, 0x18	; 24
      f2:	80 95       	com	r24
      f4:	88 bb       	out	0x18, r24	; 24
	break;
      f6:	08 95       	ret
	case GPIOC:
	PORTC_DATA ^= HIGH;
      f8:	85 b3       	in	r24, 0x15	; 21
      fa:	80 95       	com	r24
      fc:	85 bb       	out	0x15, r24	; 21
	break;
      fe:	08 95       	ret
	case GPIOD:
	PORTD_DATA ^= HIGH;
     100:	82 b3       	in	r24, 0x12	; 18
     102:	80 95       	com	r24
     104:	82 bb       	out	0x12, r24	; 18
     106:	08 95       	ret

00000108 <gpioPortRead>:

uint8_t gpioPortRead(uint8_t u8_port)
{
	uint8_t U8_ret_Port_data=0;
	
switch (u8_port)	
     108:	81 30       	cpi	r24, 0x01	; 1
     10a:	49 f0       	breq	.+18     	; 0x11e <gpioPortRead+0x16>
     10c:	81 30       	cpi	r24, 0x01	; 1
     10e:	28 f0       	brcs	.+10     	; 0x11a <gpioPortRead+0x12>
     110:	82 30       	cpi	r24, 0x02	; 2
     112:	39 f0       	breq	.+14     	; 0x122 <gpioPortRead+0x1a>
     114:	83 30       	cpi	r24, 0x03	; 3
     116:	49 f4       	brne	.+18     	; 0x12a <gpioPortRead+0x22>
     118:	06 c0       	rjmp	.+12     	; 0x126 <gpioPortRead+0x1e>
{	case GPIOA:
	U8_ret_Port_data=PORTA_DATA & HIGH;
     11a:	8b b3       	in	r24, 0x1b	; 27
	break;
     11c:	08 95       	ret
	case GPIOB:
	U8_ret_Port_data=PORTB_DATA & HIGH;
     11e:	88 b3       	in	r24, 0x18	; 24
	break;
     120:	08 95       	ret
	case GPIOC:
	U8_ret_Port_data=PORTC_DATA & HIGH;
     122:	85 b3       	in	r24, 0x15	; 21
	break;
     124:	08 95       	ret
	case GPIOD:
	U8_ret_Port_data=PORTD_DATA & HIGH;
     126:	82 b3       	in	r24, 0x12	; 18
	break;
     128:	08 95       	ret
	
}

uint8_t gpioPortRead(uint8_t u8_port)
{
	uint8_t U8_ret_Port_data=0;
     12a:	80 e0       	ldi	r24, 0x00	; 0
	break;
	
}

return 	U8_ret_Port_data;
}
     12c:	08 95       	ret

0000012e <gpioPinDirection>:
 * 				- 0x00 -> Input
 * 				- 0xff -> Output
 */
void gpioPinDirection(uint8_t u8_port, uint8_t u8_pins, uint8_t u8_direction)
{
switch(u8_direction){
     12e:	44 23       	and	r20, r20
     130:	19 f0       	breq	.+6      	; 0x138 <gpioPinDirection+0xa>
     132:	4f 3f       	cpi	r20, 0xFF	; 255
     134:	d1 f5       	brne	.+116    	; 0x1aa <gpioPinDirection+0x7c>
     136:	21 c0       	rjmp	.+66     	; 0x17a <gpioPinDirection+0x4c>
case INPUT:
{
switch (u8_port)	
     138:	81 30       	cpi	r24, 0x01	; 1
     13a:	69 f0       	breq	.+26     	; 0x156 <gpioPinDirection+0x28>
     13c:	81 30       	cpi	r24, 0x01	; 1
     13e:	28 f0       	brcs	.+10     	; 0x14a <gpioPinDirection+0x1c>
     140:	82 30       	cpi	r24, 0x02	; 2
     142:	79 f0       	breq	.+30     	; 0x162 <gpioPinDirection+0x34>
     144:	83 30       	cpi	r24, 0x03	; 3
     146:	c9 f4       	brne	.+50     	; 0x17a <gpioPinDirection+0x4c>
     148:	12 c0       	rjmp	.+36     	; 0x16e <gpioPinDirection+0x40>
{	case GPIOA:
	PORTA_DIR &=(~u8_pins);   // 0b01111111
     14a:	8a b3       	in	r24, 0x1a	; 26
     14c:	96 2f       	mov	r25, r22
     14e:	90 95       	com	r25
     150:	89 23       	and	r24, r25
     152:	8a bb       	out	0x1a, r24	; 26
     154:	1b c0       	rjmp	.+54     	; 0x18c <gpioPinDirection+0x5e>
	break;
	case GPIOB:
	PORTB_DIR &=(~u8_pins);
     156:	87 b3       	in	r24, 0x17	; 23
     158:	96 2f       	mov	r25, r22
     15a:	90 95       	com	r25
     15c:	89 23       	and	r24, r25
     15e:	87 bb       	out	0x17, r24	; 23
     160:	19 c0       	rjmp	.+50     	; 0x194 <gpioPinDirection+0x66>
	break;
	case GPIOC:
	PORTC_DIR &=(~u8_pins);
     162:	84 b3       	in	r24, 0x14	; 20
     164:	96 2f       	mov	r25, r22
     166:	90 95       	com	r25
     168:	89 23       	and	r24, r25
     16a:	84 bb       	out	0x14, r24	; 20
     16c:	17 c0       	rjmp	.+46     	; 0x19c <gpioPinDirection+0x6e>
	break;
	case GPIOD:
	PORTD_DIR &=(~u8_pins);
     16e:	81 b3       	in	r24, 0x11	; 17
     170:	96 2f       	mov	r25, r22
     172:	90 95       	com	r25
     174:	89 23       	and	r24, r25
     176:	81 bb       	out	0x11, r24	; 17
     178:	15 c0       	rjmp	.+42     	; 0x1a4 <gpioPinDirection+0x76>
	break;
	
}
}
case OUTPUT:{
switch (u8_port)	
     17a:	81 30       	cpi	r24, 0x01	; 1
     17c:	59 f0       	breq	.+22     	; 0x194 <gpioPinDirection+0x66>
     17e:	81 30       	cpi	r24, 0x01	; 1
     180:	28 f0       	brcs	.+10     	; 0x18c <gpioPinDirection+0x5e>
     182:	82 30       	cpi	r24, 0x02	; 2
     184:	59 f0       	breq	.+22     	; 0x19c <gpioPinDirection+0x6e>
     186:	83 30       	cpi	r24, 0x03	; 3
     188:	81 f4       	brne	.+32     	; 0x1aa <gpioPinDirection+0x7c>
     18a:	0c c0       	rjmp	.+24     	; 0x1a4 <gpioPinDirection+0x76>
{	case GPIOA:
	PORTA_DIR |=(u8_pins);
     18c:	8a b3       	in	r24, 0x1a	; 26
     18e:	68 2b       	or	r22, r24
     190:	6a bb       	out	0x1a, r22	; 26
	break;
     192:	08 95       	ret
	case GPIOB:
	PORTB_DIR |=(u8_pins);
     194:	87 b3       	in	r24, 0x17	; 23
     196:	68 2b       	or	r22, r24
     198:	67 bb       	out	0x17, r22	; 23
	break;
     19a:	08 95       	ret
	case GPIOC:
	PORTC_DIR |=(u8_pins);
     19c:	84 b3       	in	r24, 0x14	; 20
     19e:	68 2b       	or	r22, r24
     1a0:	64 bb       	out	0x14, r22	; 20
	break;
     1a2:	08 95       	ret
	case GPIOD:
	PORTD_DIR |=(u8_pins);
     1a4:	81 b3       	in	r24, 0x11	; 17
     1a6:	68 2b       	or	r22, r24
     1a8:	61 bb       	out	0x11, r22	; 17
     1aa:	08 95       	ret

000001ac <gpioPinWrite>:
	
	
}

void gpioPinWrite(uint8_t u8_port, uint8_t u8_pins, uint8_t u8_value)
{switch(u8_value){
     1ac:	44 23       	and	r20, r20
     1ae:	19 f0       	breq	.+6      	; 0x1b6 <gpioPinWrite+0xa>
     1b0:	4f 3f       	cpi	r20, 0xFF	; 255
     1b2:	b1 f5       	brne	.+108    	; 0x220 <gpioPinWrite+0x74>
     1b4:	1d c0       	rjmp	.+58     	; 0x1f0 <gpioPinWrite+0x44>
case LOW:
{
switch (u8_port)	
     1b6:	81 30       	cpi	r24, 0x01	; 1
     1b8:	61 f0       	breq	.+24     	; 0x1d2 <gpioPinWrite+0x26>
     1ba:	81 30       	cpi	r24, 0x01	; 1
     1bc:	28 f0       	brcs	.+10     	; 0x1c8 <gpioPinWrite+0x1c>
     1be:	82 30       	cpi	r24, 0x02	; 2
     1c0:	69 f0       	breq	.+26     	; 0x1dc <gpioPinWrite+0x30>
     1c2:	83 30       	cpi	r24, 0x03	; 3
     1c4:	69 f5       	brne	.+90     	; 0x220 <gpioPinWrite+0x74>
     1c6:	0f c0       	rjmp	.+30     	; 0x1e6 <gpioPinWrite+0x3a>
{	case GPIOA:
	PORTA_DATA &= ~(u8_pins);   // 0b01111111
     1c8:	8b b3       	in	r24, 0x1b	; 27
     1ca:	60 95       	com	r22
     1cc:	68 23       	and	r22, r24
     1ce:	6b bb       	out	0x1b, r22	; 27
	break;
     1d0:	08 95       	ret
	case GPIOB:
	PORTB_DATA &= ~(u8_pins);
     1d2:	88 b3       	in	r24, 0x18	; 24
     1d4:	60 95       	com	r22
     1d6:	68 23       	and	r22, r24
     1d8:	68 bb       	out	0x18, r22	; 24
	break;
     1da:	08 95       	ret
	case GPIOC:
	PORTC_DATA &= ~(u8_pins);
     1dc:	85 b3       	in	r24, 0x15	; 21
     1de:	60 95       	com	r22
     1e0:	68 23       	and	r22, r24
     1e2:	65 bb       	out	0x15, r22	; 21
	break;
     1e4:	08 95       	ret
	case GPIOD:
	PORTD_DATA &= ~(u8_pins);
     1e6:	82 b3       	in	r24, 0x12	; 18
     1e8:	60 95       	com	r22
     1ea:	68 23       	and	r22, r24
     1ec:	62 bb       	out	0x12, r22	; 18
	break;
     1ee:	08 95       	ret
	
}
break;
}
case HIGH:{
switch (u8_port)	
     1f0:	81 30       	cpi	r24, 0x01	; 1
     1f2:	59 f0       	breq	.+22     	; 0x20a <gpioPinWrite+0x5e>
     1f4:	81 30       	cpi	r24, 0x01	; 1
     1f6:	28 f0       	brcs	.+10     	; 0x202 <gpioPinWrite+0x56>
     1f8:	82 30       	cpi	r24, 0x02	; 2
     1fa:	59 f0       	breq	.+22     	; 0x212 <gpioPinWrite+0x66>
     1fc:	83 30       	cpi	r24, 0x03	; 3
     1fe:	81 f4       	brne	.+32     	; 0x220 <gpioPinWrite+0x74>
     200:	0c c0       	rjmp	.+24     	; 0x21a <gpioPinWrite+0x6e>
{	case GPIOA:
	PORTA_DATA |=(u8_pins);
     202:	8b b3       	in	r24, 0x1b	; 27
     204:	68 2b       	or	r22, r24
     206:	6b bb       	out	0x1b, r22	; 27
	break;
     208:	08 95       	ret
	case GPIOB:
	PORTB_DATA |=(u8_pins);
     20a:	88 b3       	in	r24, 0x18	; 24
     20c:	68 2b       	or	r22, r24
     20e:	68 bb       	out	0x18, r22	; 24
	break;
     210:	08 95       	ret
	case GPIOC:
	PORTC_DATA |=(u8_pins);
     212:	85 b3       	in	r24, 0x15	; 21
     214:	68 2b       	or	r22, r24
     216:	65 bb       	out	0x15, r22	; 21
	break;
     218:	08 95       	ret
	case GPIOD:
	PORTD_DATA |=(u8_pins);
     21a:	82 b3       	in	r24, 0x12	; 18
     21c:	68 2b       	or	r22, r24
     21e:	62 bb       	out	0x12, r22	; 18
     220:	08 95       	ret

00000222 <gpioPinToggle>:
}

}
void gpioPinToggle(uint8_t u8_port, uint8_t u8_pins)
{
switch (u8_port)	
     222:	81 30       	cpi	r24, 0x01	; 1
     224:	59 f0       	breq	.+22     	; 0x23c <gpioPinToggle+0x1a>
     226:	81 30       	cpi	r24, 0x01	; 1
     228:	28 f0       	brcs	.+10     	; 0x234 <gpioPinToggle+0x12>
     22a:	82 30       	cpi	r24, 0x02	; 2
     22c:	59 f0       	breq	.+22     	; 0x244 <gpioPinToggle+0x22>
     22e:	83 30       	cpi	r24, 0x03	; 3
     230:	81 f4       	brne	.+32     	; 0x252 <gpioPinToggle+0x30>
     232:	0c c0       	rjmp	.+24     	; 0x24c <gpioPinToggle+0x2a>
{	case GPIOA:
	PORTA_DATA ^=(u8_pins);
     234:	8b b3       	in	r24, 0x1b	; 27
     236:	68 27       	eor	r22, r24
     238:	6b bb       	out	0x1b, r22	; 27
	break;
     23a:	08 95       	ret
	case GPIOB:
	PORTB_DATA ^=(u8_pins);
     23c:	88 b3       	in	r24, 0x18	; 24
     23e:	68 27       	eor	r22, r24
     240:	68 bb       	out	0x18, r22	; 24
	break;
     242:	08 95       	ret
	case GPIOC:
	PORTC_DATA ^=(u8_pins);
     244:	85 b3       	in	r24, 0x15	; 21
     246:	68 27       	eor	r22, r24
     248:	65 bb       	out	0x15, r22	; 21
	break;
     24a:	08 95       	ret
	case GPIOD:
	PORTD_DATA ^=(u8_pins);
     24c:	82 b3       	in	r24, 0x12	; 18
     24e:	68 27       	eor	r22, r24
     250:	62 bb       	out	0x12, r22	; 18
     252:	08 95       	ret

00000254 <gpioPinRead>:
	
}
uint8_t gpioPinRead(uint8_t u8_port, uint8_t u8_pin)
{
	uint8_t U8_ret_BIT_data = 0;
switch (u8_port)	
     254:	81 30       	cpi	r24, 0x01	; 1
     256:	51 f0       	breq	.+20     	; 0x26c <gpioPinRead+0x18>
     258:	81 30       	cpi	r24, 0x01	; 1
     25a:	28 f0       	brcs	.+10     	; 0x266 <gpioPinRead+0x12>
     25c:	82 30       	cpi	r24, 0x02	; 2
     25e:	49 f0       	breq	.+18     	; 0x272 <gpioPinRead+0x1e>
     260:	83 30       	cpi	r24, 0x03	; 3
     262:	69 f4       	brne	.+26     	; 0x27e <gpioPinRead+0x2a>
     264:	09 c0       	rjmp	.+18     	; 0x278 <gpioPinRead+0x24>
{	case GPIOA:
	U8_ret_BIT_data=(PORTA_PIN & u8_pin);
     266:	89 b3       	in	r24, 0x19	; 25
     268:	68 23       	and	r22, r24
	break;
     26a:	0a c0       	rjmp	.+20     	; 0x280 <gpioPinRead+0x2c>
	case GPIOB:
	U8_ret_BIT_data=(PORTB_PIN & u8_pin);
     26c:	86 b3       	in	r24, 0x16	; 22
     26e:	68 23       	and	r22, r24
	break;
     270:	07 c0       	rjmp	.+14     	; 0x280 <gpioPinRead+0x2c>
	case GPIOC:
	U8_ret_BIT_data=(PORTC_PIN & u8_pin);
     272:	83 b3       	in	r24, 0x13	; 19
     274:	68 23       	and	r22, r24
	break;
     276:	04 c0       	rjmp	.+8      	; 0x280 <gpioPinRead+0x2c>
	case GPIOD:
	U8_ret_BIT_data=(PORTD_PIN & u8_pin);
     278:	80 b3       	in	r24, 0x10	; 16
     27a:	68 23       	and	r22, r24
	break;
     27c:	01 c0       	rjmp	.+2      	; 0x280 <gpioPinRead+0x2c>
	
	
}
uint8_t gpioPinRead(uint8_t u8_port, uint8_t u8_pin)
{
	uint8_t U8_ret_BIT_data = 0;
     27e:	60 e0       	ldi	r22, 0x00	; 0
}
	
	
	
}
uint8_t gpioPinRead(uint8_t u8_port, uint8_t u8_pin)
     280:	81 e0       	ldi	r24, 0x01	; 1
     282:	66 23       	and	r22, r22
     284:	09 f4       	brne	.+2      	; 0x288 <gpioPinRead+0x34>
     286:	80 e0       	ldi	r24, 0x00	; 0
if(U8_ret_BIT_data > 0)
{
	U8_ret_BIT_data = 1;
}
return U8_ret_BIT_data;
     288:	08 95       	ret

0000028a <G_interrupt_Enable>:
ptr_to_Fun SPM_RDY;

void G_interrupt_Enable(void)
{
//	sei();
 SREG |=(0x80);
     28a:	8f b7       	in	r24, 0x3f	; 63
     28c:	80 68       	ori	r24, 0x80	; 128
     28e:	8f bf       	out	0x3f, r24	; 63
}
     290:	08 95       	ret

00000292 <EX_interrupt_enable2>:
void EX_interrupt_enable2(void)
{
gpioPinDirection(GPIOB,BIT2,LOW);
     292:	81 e0       	ldi	r24, 0x01	; 1
     294:	64 e0       	ldi	r22, 0x04	; 4
     296:	40 e0       	ldi	r20, 0x00	; 0
     298:	0e 94 97 00 	call	0x12e	; 0x12e <gpioPinDirection>
SET_BIT(GICR,INT2);
     29c:	8b b7       	in	r24, 0x3b	; 59
     29e:	80 62       	ori	r24, 0x20	; 32
     2a0:	8b bf       	out	0x3b, r24	; 59
SET_BIT(MCUCSR,6);
     2a2:	84 b7       	in	r24, 0x34	; 52
     2a4:	80 64       	ori	r24, 0x40	; 64
     2a6:	84 bf       	out	0x34, r24	; 52
}
     2a8:	08 95       	ret

000002aa <G_interrupt_Disable>:
void G_interrupt_Disable(void)
{
CLEAR_BIT(SREG,7);
     2aa:	8f b7       	in	r24, 0x3f	; 63
     2ac:	8f 77       	andi	r24, 0x7F	; 127
     2ae:	8f bf       	out	0x3f, r24	; 63
}
     2b0:	08 95       	ret

000002b2 <__vector_1>:
void __vector_1(void) __attribute__((signal,__INTR_ATTRS));
void __vector_1(void)
{
     2b2:	1f 92       	push	r1
     2b4:	0f 92       	push	r0
     2b6:	0f b6       	in	r0, 0x3f	; 63
     2b8:	0f 92       	push	r0
     2ba:	11 24       	eor	r1, r1
     2bc:	2f 93       	push	r18
     2be:	3f 93       	push	r19
     2c0:	4f 93       	push	r20
     2c2:	5f 93       	push	r21
     2c4:	6f 93       	push	r22
     2c6:	7f 93       	push	r23
     2c8:	8f 93       	push	r24
     2ca:	9f 93       	push	r25
     2cc:	af 93       	push	r26
     2ce:	bf 93       	push	r27
     2d0:	ef 93       	push	r30
     2d2:	ff 93       	push	r31
  INT0_external_interrupt();
     2d4:	e0 91 83 01 	lds	r30, 0x0183
     2d8:	f0 91 84 01 	lds	r31, 0x0184
     2dc:	09 95       	icall
}
     2de:	ff 91       	pop	r31
     2e0:	ef 91       	pop	r30
     2e2:	bf 91       	pop	r27
     2e4:	af 91       	pop	r26
     2e6:	9f 91       	pop	r25
     2e8:	8f 91       	pop	r24
     2ea:	7f 91       	pop	r23
     2ec:	6f 91       	pop	r22
     2ee:	5f 91       	pop	r21
     2f0:	4f 91       	pop	r20
     2f2:	3f 91       	pop	r19
     2f4:	2f 91       	pop	r18
     2f6:	0f 90       	pop	r0
     2f8:	0f be       	out	0x3f, r0	; 63
     2fa:	0f 90       	pop	r0
     2fc:	1f 90       	pop	r1
     2fe:	18 95       	reti

00000300 <__vector_2>:


void __vector_2(void) __attribute__((signal,__INTR_ATTRS));
void __vector_2(void)
{
     300:	1f 92       	push	r1
     302:	0f 92       	push	r0
     304:	0f b6       	in	r0, 0x3f	; 63
     306:	0f 92       	push	r0
     308:	11 24       	eor	r1, r1
     30a:	2f 93       	push	r18
     30c:	3f 93       	push	r19
     30e:	4f 93       	push	r20
     310:	5f 93       	push	r21
     312:	6f 93       	push	r22
     314:	7f 93       	push	r23
     316:	8f 93       	push	r24
     318:	9f 93       	push	r25
     31a:	af 93       	push	r26
     31c:	bf 93       	push	r27
     31e:	ef 93       	push	r30
     320:	ff 93       	push	r31
  INT1_external_interrupt();
     322:	e0 91 89 01 	lds	r30, 0x0189
     326:	f0 91 8a 01 	lds	r31, 0x018A
     32a:	09 95       	icall
}
     32c:	ff 91       	pop	r31
     32e:	ef 91       	pop	r30
     330:	bf 91       	pop	r27
     332:	af 91       	pop	r26
     334:	9f 91       	pop	r25
     336:	8f 91       	pop	r24
     338:	7f 91       	pop	r23
     33a:	6f 91       	pop	r22
     33c:	5f 91       	pop	r21
     33e:	4f 91       	pop	r20
     340:	3f 91       	pop	r19
     342:	2f 91       	pop	r18
     344:	0f 90       	pop	r0
     346:	0f be       	out	0x3f, r0	; 63
     348:	0f 90       	pop	r0
     34a:	1f 90       	pop	r1
     34c:	18 95       	reti

0000034e <__vector_3>:


void __vector_3(void) __attribute__((signal,__INTR_ATTRS));
void __vector_3(void)
{
     34e:	1f 92       	push	r1
     350:	0f 92       	push	r0
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	0f 92       	push	r0
     356:	11 24       	eor	r1, r1
     358:	2f 93       	push	r18
     35a:	3f 93       	push	r19
     35c:	4f 93       	push	r20
     35e:	5f 93       	push	r21
     360:	6f 93       	push	r22
     362:	7f 93       	push	r23
     364:	8f 93       	push	r24
     366:	9f 93       	push	r25
     368:	af 93       	push	r26
     36a:	bf 93       	push	r27
     36c:	ef 93       	push	r30
     36e:	ff 93       	push	r31
  INT2_external_interrupt();
     370:	e0 91 64 00 	lds	r30, 0x0064
     374:	f0 91 65 00 	lds	r31, 0x0065
     378:	09 95       	icall
}
     37a:	ff 91       	pop	r31
     37c:	ef 91       	pop	r30
     37e:	bf 91       	pop	r27
     380:	af 91       	pop	r26
     382:	9f 91       	pop	r25
     384:	8f 91       	pop	r24
     386:	7f 91       	pop	r23
     388:	6f 91       	pop	r22
     38a:	5f 91       	pop	r21
     38c:	4f 91       	pop	r20
     38e:	3f 91       	pop	r19
     390:	2f 91       	pop	r18
     392:	0f 90       	pop	r0
     394:	0f be       	out	0x3f, r0	; 63
     396:	0f 90       	pop	r0
     398:	1f 90       	pop	r1
     39a:	18 95       	reti

0000039c <__vector_4>:


void __vector_4(void) __attribute__((signal,__INTR_ATTRS));
void __vector_4(void)
{
     39c:	1f 92       	push	r1
     39e:	0f 92       	push	r0
     3a0:	0f b6       	in	r0, 0x3f	; 63
     3a2:	0f 92       	push	r0
     3a4:	11 24       	eor	r1, r1
     3a6:	2f 93       	push	r18
     3a8:	3f 93       	push	r19
     3aa:	4f 93       	push	r20
     3ac:	5f 93       	push	r21
     3ae:	6f 93       	push	r22
     3b0:	7f 93       	push	r23
     3b2:	8f 93       	push	r24
     3b4:	9f 93       	push	r25
     3b6:	af 93       	push	r26
     3b8:	bf 93       	push	r27
     3ba:	ef 93       	push	r30
     3bc:	ff 93       	push	r31
TIMER2COMP();
     3be:	e0 91 8f 01 	lds	r30, 0x018F
     3c2:	f0 91 90 01 	lds	r31, 0x0190
     3c6:	09 95       	icall
}
     3c8:	ff 91       	pop	r31
     3ca:	ef 91       	pop	r30
     3cc:	bf 91       	pop	r27
     3ce:	af 91       	pop	r26
     3d0:	9f 91       	pop	r25
     3d2:	8f 91       	pop	r24
     3d4:	7f 91       	pop	r23
     3d6:	6f 91       	pop	r22
     3d8:	5f 91       	pop	r21
     3da:	4f 91       	pop	r20
     3dc:	3f 91       	pop	r19
     3de:	2f 91       	pop	r18
     3e0:	0f 90       	pop	r0
     3e2:	0f be       	out	0x3f, r0	; 63
     3e4:	0f 90       	pop	r0
     3e6:	1f 90       	pop	r1
     3e8:	18 95       	reti

000003ea <__vector_5>:


void __vector_5(void) __attribute__((signal,__INTR_ATTRS));
void __vector_5(void)
{
     3ea:	1f 92       	push	r1
     3ec:	0f 92       	push	r0
     3ee:	0f b6       	in	r0, 0x3f	; 63
     3f0:	0f 92       	push	r0
     3f2:	11 24       	eor	r1, r1
     3f4:	2f 93       	push	r18
     3f6:	3f 93       	push	r19
     3f8:	4f 93       	push	r20
     3fa:	5f 93       	push	r21
     3fc:	6f 93       	push	r22
     3fe:	7f 93       	push	r23
     400:	8f 93       	push	r24
     402:	9f 93       	push	r25
     404:	af 93       	push	r26
     406:	bf 93       	push	r27
     408:	ef 93       	push	r30
     40a:	ff 93       	push	r31
  TIMER2OVF();
     40c:	e0 91 73 01 	lds	r30, 0x0173
     410:	f0 91 74 01 	lds	r31, 0x0174
     414:	09 95       	icall
}
     416:	ff 91       	pop	r31
     418:	ef 91       	pop	r30
     41a:	bf 91       	pop	r27
     41c:	af 91       	pop	r26
     41e:	9f 91       	pop	r25
     420:	8f 91       	pop	r24
     422:	7f 91       	pop	r23
     424:	6f 91       	pop	r22
     426:	5f 91       	pop	r21
     428:	4f 91       	pop	r20
     42a:	3f 91       	pop	r19
     42c:	2f 91       	pop	r18
     42e:	0f 90       	pop	r0
     430:	0f be       	out	0x3f, r0	; 63
     432:	0f 90       	pop	r0
     434:	1f 90       	pop	r1
     436:	18 95       	reti

00000438 <__vector_6>:

void __vector_6(void) __attribute__((signal,__INTR_ATTRS));
void __vector_6(void)
{
     438:	1f 92       	push	r1
     43a:	0f 92       	push	r0
     43c:	0f b6       	in	r0, 0x3f	; 63
     43e:	0f 92       	push	r0
     440:	11 24       	eor	r1, r1
     442:	2f 93       	push	r18
     444:	3f 93       	push	r19
     446:	4f 93       	push	r20
     448:	5f 93       	push	r21
     44a:	6f 93       	push	r22
     44c:	7f 93       	push	r23
     44e:	8f 93       	push	r24
     450:	9f 93       	push	r25
     452:	af 93       	push	r26
     454:	bf 93       	push	r27
     456:	ef 93       	push	r30
     458:	ff 93       	push	r31
  TIMER1CAPT();
     45a:	e0 91 8b 01 	lds	r30, 0x018B
     45e:	f0 91 8c 01 	lds	r31, 0x018C
     462:	09 95       	icall
}
     464:	ff 91       	pop	r31
     466:	ef 91       	pop	r30
     468:	bf 91       	pop	r27
     46a:	af 91       	pop	r26
     46c:	9f 91       	pop	r25
     46e:	8f 91       	pop	r24
     470:	7f 91       	pop	r23
     472:	6f 91       	pop	r22
     474:	5f 91       	pop	r21
     476:	4f 91       	pop	r20
     478:	3f 91       	pop	r19
     47a:	2f 91       	pop	r18
     47c:	0f 90       	pop	r0
     47e:	0f be       	out	0x3f, r0	; 63
     480:	0f 90       	pop	r0
     482:	1f 90       	pop	r1
     484:	18 95       	reti

00000486 <__vector_7>:

void __vector_7(void) __attribute__((signal,__INTR_ATTRS));
void __vector_7(void)
{
     486:	1f 92       	push	r1
     488:	0f 92       	push	r0
     48a:	0f b6       	in	r0, 0x3f	; 63
     48c:	0f 92       	push	r0
     48e:	11 24       	eor	r1, r1
     490:	2f 93       	push	r18
     492:	3f 93       	push	r19
     494:	4f 93       	push	r20
     496:	5f 93       	push	r21
     498:	6f 93       	push	r22
     49a:	7f 93       	push	r23
     49c:	8f 93       	push	r24
     49e:	9f 93       	push	r25
     4a0:	af 93       	push	r26
     4a2:	bf 93       	push	r27
     4a4:	ef 93       	push	r30
     4a6:	ff 93       	push	r31
TIMER1COMPA();
     4a8:	e0 91 79 01 	lds	r30, 0x0179
     4ac:	f0 91 7a 01 	lds	r31, 0x017A
     4b0:	09 95       	icall
}
     4b2:	ff 91       	pop	r31
     4b4:	ef 91       	pop	r30
     4b6:	bf 91       	pop	r27
     4b8:	af 91       	pop	r26
     4ba:	9f 91       	pop	r25
     4bc:	8f 91       	pop	r24
     4be:	7f 91       	pop	r23
     4c0:	6f 91       	pop	r22
     4c2:	5f 91       	pop	r21
     4c4:	4f 91       	pop	r20
     4c6:	3f 91       	pop	r19
     4c8:	2f 91       	pop	r18
     4ca:	0f 90       	pop	r0
     4cc:	0f be       	out	0x3f, r0	; 63
     4ce:	0f 90       	pop	r0
     4d0:	1f 90       	pop	r1
     4d2:	18 95       	reti

000004d4 <__vector_8>:

void __vector_8(void) __attribute__((signal,__INTR_ATTRS));
void __vector_8(void)
{
     4d4:	1f 92       	push	r1
     4d6:	0f 92       	push	r0
     4d8:	0f b6       	in	r0, 0x3f	; 63
     4da:	0f 92       	push	r0
     4dc:	11 24       	eor	r1, r1
     4de:	2f 93       	push	r18
     4e0:	3f 93       	push	r19
     4e2:	4f 93       	push	r20
     4e4:	5f 93       	push	r21
     4e6:	6f 93       	push	r22
     4e8:	7f 93       	push	r23
     4ea:	8f 93       	push	r24
     4ec:	9f 93       	push	r25
     4ee:	af 93       	push	r26
     4f0:	bf 93       	push	r27
     4f2:	ef 93       	push	r30
     4f4:	ff 93       	push	r31
  TIMER1COMPB();
     4f6:	e0 91 77 01 	lds	r30, 0x0177
     4fa:	f0 91 78 01 	lds	r31, 0x0178
     4fe:	09 95       	icall
}
     500:	ff 91       	pop	r31
     502:	ef 91       	pop	r30
     504:	bf 91       	pop	r27
     506:	af 91       	pop	r26
     508:	9f 91       	pop	r25
     50a:	8f 91       	pop	r24
     50c:	7f 91       	pop	r23
     50e:	6f 91       	pop	r22
     510:	5f 91       	pop	r21
     512:	4f 91       	pop	r20
     514:	3f 91       	pop	r19
     516:	2f 91       	pop	r18
     518:	0f 90       	pop	r0
     51a:	0f be       	out	0x3f, r0	; 63
     51c:	0f 90       	pop	r0
     51e:	1f 90       	pop	r1
     520:	18 95       	reti

00000522 <__vector_9>:

void __vector_9(void) __attribute__((signal,__INTR_ATTRS));
void __vector_9(void)
{
     522:	1f 92       	push	r1
     524:	0f 92       	push	r0
     526:	0f b6       	in	r0, 0x3f	; 63
     528:	0f 92       	push	r0
     52a:	11 24       	eor	r1, r1
     52c:	2f 93       	push	r18
     52e:	3f 93       	push	r19
     530:	4f 93       	push	r20
     532:	5f 93       	push	r21
     534:	6f 93       	push	r22
     536:	7f 93       	push	r23
     538:	8f 93       	push	r24
     53a:	9f 93       	push	r25
     53c:	af 93       	push	r26
     53e:	bf 93       	push	r27
     540:	ef 93       	push	r30
     542:	ff 93       	push	r31
  TIMER1OVF();
     544:	e0 91 8d 01 	lds	r30, 0x018D
     548:	f0 91 8e 01 	lds	r31, 0x018E
     54c:	09 95       	icall
}
     54e:	ff 91       	pop	r31
     550:	ef 91       	pop	r30
     552:	bf 91       	pop	r27
     554:	af 91       	pop	r26
     556:	9f 91       	pop	r25
     558:	8f 91       	pop	r24
     55a:	7f 91       	pop	r23
     55c:	6f 91       	pop	r22
     55e:	5f 91       	pop	r21
     560:	4f 91       	pop	r20
     562:	3f 91       	pop	r19
     564:	2f 91       	pop	r18
     566:	0f 90       	pop	r0
     568:	0f be       	out	0x3f, r0	; 63
     56a:	0f 90       	pop	r0
     56c:	1f 90       	pop	r1
     56e:	18 95       	reti

00000570 <__vector_10>:

void __vector_10(void) __attribute__((signal,__INTR_ATTRS));
void __vector_10(void)
{
     570:	1f 92       	push	r1
     572:	0f 92       	push	r0
     574:	0f b6       	in	r0, 0x3f	; 63
     576:	0f 92       	push	r0
     578:	11 24       	eor	r1, r1
     57a:	2f 93       	push	r18
     57c:	3f 93       	push	r19
     57e:	4f 93       	push	r20
     580:	5f 93       	push	r21
     582:	6f 93       	push	r22
     584:	7f 93       	push	r23
     586:	8f 93       	push	r24
     588:	9f 93       	push	r25
     58a:	af 93       	push	r26
     58c:	bf 93       	push	r27
     58e:	ef 93       	push	r30
     590:	ff 93       	push	r31

  TIMER0COMP();
     592:	e0 91 62 00 	lds	r30, 0x0062
     596:	f0 91 63 00 	lds	r31, 0x0063
     59a:	09 95       	icall
}
     59c:	ff 91       	pop	r31
     59e:	ef 91       	pop	r30
     5a0:	bf 91       	pop	r27
     5a2:	af 91       	pop	r26
     5a4:	9f 91       	pop	r25
     5a6:	8f 91       	pop	r24
     5a8:	7f 91       	pop	r23
     5aa:	6f 91       	pop	r22
     5ac:	5f 91       	pop	r21
     5ae:	4f 91       	pop	r20
     5b0:	3f 91       	pop	r19
     5b2:	2f 91       	pop	r18
     5b4:	0f 90       	pop	r0
     5b6:	0f be       	out	0x3f, r0	; 63
     5b8:	0f 90       	pop	r0
     5ba:	1f 90       	pop	r1
     5bc:	18 95       	reti

000005be <__vector_11>:

void __vector_11(void) __attribute__((signal,__INTR_ATTRS));
void __vector_11(void)
{
     5be:	1f 92       	push	r1
     5c0:	0f 92       	push	r0
     5c2:	0f b6       	in	r0, 0x3f	; 63
     5c4:	0f 92       	push	r0
     5c6:	11 24       	eor	r1, r1
     5c8:	2f 93       	push	r18
     5ca:	3f 93       	push	r19
     5cc:	4f 93       	push	r20
     5ce:	5f 93       	push	r21
     5d0:	6f 93       	push	r22
     5d2:	7f 93       	push	r23
     5d4:	8f 93       	push	r24
     5d6:	9f 93       	push	r25
     5d8:	af 93       	push	r26
     5da:	bf 93       	push	r27
     5dc:	ef 93       	push	r30
     5de:	ff 93       	push	r31

  TIMER0OVF_INT();
     5e0:	e0 91 60 00 	lds	r30, 0x0060
     5e4:	f0 91 61 00 	lds	r31, 0x0061
     5e8:	09 95       	icall
}
     5ea:	ff 91       	pop	r31
     5ec:	ef 91       	pop	r30
     5ee:	bf 91       	pop	r27
     5f0:	af 91       	pop	r26
     5f2:	9f 91       	pop	r25
     5f4:	8f 91       	pop	r24
     5f6:	7f 91       	pop	r23
     5f8:	6f 91       	pop	r22
     5fa:	5f 91       	pop	r21
     5fc:	4f 91       	pop	r20
     5fe:	3f 91       	pop	r19
     600:	2f 91       	pop	r18
     602:	0f 90       	pop	r0
     604:	0f be       	out	0x3f, r0	; 63
     606:	0f 90       	pop	r0
     608:	1f 90       	pop	r1
     60a:	18 95       	reti

0000060c <__vector_12>:

void __vector_12(void) __attribute__((signal,__INTR_ATTRS));
void __vector_12(void)
{
     60c:	1f 92       	push	r1
     60e:	0f 92       	push	r0
     610:	0f b6       	in	r0, 0x3f	; 63
     612:	0f 92       	push	r0
     614:	11 24       	eor	r1, r1
     616:	2f 93       	push	r18
     618:	3f 93       	push	r19
     61a:	4f 93       	push	r20
     61c:	5f 93       	push	r21
     61e:	6f 93       	push	r22
     620:	7f 93       	push	r23
     622:	8f 93       	push	r24
     624:	9f 93       	push	r25
     626:	af 93       	push	r26
     628:	bf 93       	push	r27
     62a:	ef 93       	push	r30
     62c:	ff 93       	push	r31
  SPI_STC();
     62e:	e0 91 7b 01 	lds	r30, 0x017B
     632:	f0 91 7c 01 	lds	r31, 0x017C
     636:	09 95       	icall
}
     638:	ff 91       	pop	r31
     63a:	ef 91       	pop	r30
     63c:	bf 91       	pop	r27
     63e:	af 91       	pop	r26
     640:	9f 91       	pop	r25
     642:	8f 91       	pop	r24
     644:	7f 91       	pop	r23
     646:	6f 91       	pop	r22
     648:	5f 91       	pop	r21
     64a:	4f 91       	pop	r20
     64c:	3f 91       	pop	r19
     64e:	2f 91       	pop	r18
     650:	0f 90       	pop	r0
     652:	0f be       	out	0x3f, r0	; 63
     654:	0f 90       	pop	r0
     656:	1f 90       	pop	r1
     658:	18 95       	reti

0000065a <__vector_13>:

void __vector_13(void) __attribute__((signal,__INTR_ATTRS));
void __vector_13(void)
{
     65a:	1f 92       	push	r1
     65c:	0f 92       	push	r0
     65e:	0f b6       	in	r0, 0x3f	; 63
     660:	0f 92       	push	r0
     662:	11 24       	eor	r1, r1
     664:	2f 93       	push	r18
     666:	3f 93       	push	r19
     668:	4f 93       	push	r20
     66a:	5f 93       	push	r21
     66c:	6f 93       	push	r22
     66e:	7f 93       	push	r23
     670:	8f 93       	push	r24
     672:	9f 93       	push	r25
     674:	af 93       	push	r26
     676:	bf 93       	push	r27
     678:	ef 93       	push	r30
     67a:	ff 93       	push	r31
  USART_RXC();
     67c:	e0 91 71 01 	lds	r30, 0x0171
     680:	f0 91 72 01 	lds	r31, 0x0172
     684:	09 95       	icall
}
     686:	ff 91       	pop	r31
     688:	ef 91       	pop	r30
     68a:	bf 91       	pop	r27
     68c:	af 91       	pop	r26
     68e:	9f 91       	pop	r25
     690:	8f 91       	pop	r24
     692:	7f 91       	pop	r23
     694:	6f 91       	pop	r22
     696:	5f 91       	pop	r21
     698:	4f 91       	pop	r20
     69a:	3f 91       	pop	r19
     69c:	2f 91       	pop	r18
     69e:	0f 90       	pop	r0
     6a0:	0f be       	out	0x3f, r0	; 63
     6a2:	0f 90       	pop	r0
     6a4:	1f 90       	pop	r1
     6a6:	18 95       	reti

000006a8 <__vector_14>:

void __vector_14(void) __attribute__((signal,__INTR_ATTRS));
void __vector_14(void)
{
     6a8:	1f 92       	push	r1
     6aa:	0f 92       	push	r0
     6ac:	0f b6       	in	r0, 0x3f	; 63
     6ae:	0f 92       	push	r0
     6b0:	11 24       	eor	r1, r1
     6b2:	2f 93       	push	r18
     6b4:	3f 93       	push	r19
     6b6:	4f 93       	push	r20
     6b8:	5f 93       	push	r21
     6ba:	6f 93       	push	r22
     6bc:	7f 93       	push	r23
     6be:	8f 93       	push	r24
     6c0:	9f 93       	push	r25
     6c2:	af 93       	push	r26
     6c4:	bf 93       	push	r27
     6c6:	ef 93       	push	r30
     6c8:	ff 93       	push	r31
  USART_UDRE();
     6ca:	e0 91 87 01 	lds	r30, 0x0187
     6ce:	f0 91 88 01 	lds	r31, 0x0188
     6d2:	09 95       	icall
}
     6d4:	ff 91       	pop	r31
     6d6:	ef 91       	pop	r30
     6d8:	bf 91       	pop	r27
     6da:	af 91       	pop	r26
     6dc:	9f 91       	pop	r25
     6de:	8f 91       	pop	r24
     6e0:	7f 91       	pop	r23
     6e2:	6f 91       	pop	r22
     6e4:	5f 91       	pop	r21
     6e6:	4f 91       	pop	r20
     6e8:	3f 91       	pop	r19
     6ea:	2f 91       	pop	r18
     6ec:	0f 90       	pop	r0
     6ee:	0f be       	out	0x3f, r0	; 63
     6f0:	0f 90       	pop	r0
     6f2:	1f 90       	pop	r1
     6f4:	18 95       	reti

000006f6 <__vector_15>:

void __vector_15(void) __attribute__((signal,__INTR_ATTRS));
void __vector_15(void)
{
     6f6:	1f 92       	push	r1
     6f8:	0f 92       	push	r0
     6fa:	0f b6       	in	r0, 0x3f	; 63
     6fc:	0f 92       	push	r0
     6fe:	11 24       	eor	r1, r1
     700:	2f 93       	push	r18
     702:	3f 93       	push	r19
     704:	4f 93       	push	r20
     706:	5f 93       	push	r21
     708:	6f 93       	push	r22
     70a:	7f 93       	push	r23
     70c:	8f 93       	push	r24
     70e:	9f 93       	push	r25
     710:	af 93       	push	r26
     712:	bf 93       	push	r27
     714:	ef 93       	push	r30
     716:	ff 93       	push	r31
  USART_TXC();
     718:	e0 91 85 01 	lds	r30, 0x0185
     71c:	f0 91 86 01 	lds	r31, 0x0186
     720:	09 95       	icall
}
     722:	ff 91       	pop	r31
     724:	ef 91       	pop	r30
     726:	bf 91       	pop	r27
     728:	af 91       	pop	r26
     72a:	9f 91       	pop	r25
     72c:	8f 91       	pop	r24
     72e:	7f 91       	pop	r23
     730:	6f 91       	pop	r22
     732:	5f 91       	pop	r21
     734:	4f 91       	pop	r20
     736:	3f 91       	pop	r19
     738:	2f 91       	pop	r18
     73a:	0f 90       	pop	r0
     73c:	0f be       	out	0x3f, r0	; 63
     73e:	0f 90       	pop	r0
     740:	1f 90       	pop	r1
     742:	18 95       	reti

00000744 <__vector_16>:

void __vector_16(void) __attribute__((signal,__INTR_ATTRS));
void __vector_16(void)
{
     744:	1f 92       	push	r1
     746:	0f 92       	push	r0
     748:	0f b6       	in	r0, 0x3f	; 63
     74a:	0f 92       	push	r0
     74c:	11 24       	eor	r1, r1
     74e:	2f 93       	push	r18
     750:	3f 93       	push	r19
     752:	4f 93       	push	r20
     754:	5f 93       	push	r21
     756:	6f 93       	push	r22
     758:	7f 93       	push	r23
     75a:	8f 93       	push	r24
     75c:	9f 93       	push	r25
     75e:	af 93       	push	r26
     760:	bf 93       	push	r27
     762:	ef 93       	push	r30
     764:	ff 93       	push	r31
  ADC_INT();
     766:	e0 91 7f 01 	lds	r30, 0x017F
     76a:	f0 91 80 01 	lds	r31, 0x0180
     76e:	09 95       	icall
}
     770:	ff 91       	pop	r31
     772:	ef 91       	pop	r30
     774:	bf 91       	pop	r27
     776:	af 91       	pop	r26
     778:	9f 91       	pop	r25
     77a:	8f 91       	pop	r24
     77c:	7f 91       	pop	r23
     77e:	6f 91       	pop	r22
     780:	5f 91       	pop	r21
     782:	4f 91       	pop	r20
     784:	3f 91       	pop	r19
     786:	2f 91       	pop	r18
     788:	0f 90       	pop	r0
     78a:	0f be       	out	0x3f, r0	; 63
     78c:	0f 90       	pop	r0
     78e:	1f 90       	pop	r1
     790:	18 95       	reti

00000792 <__vector_17>:

void __vector_17(void) __attribute__((signal,__INTR_ATTRS));
void __vector_17(void)
{
     792:	1f 92       	push	r1
     794:	0f 92       	push	r0
     796:	0f b6       	in	r0, 0x3f	; 63
     798:	0f 92       	push	r0
     79a:	11 24       	eor	r1, r1
     79c:	2f 93       	push	r18
     79e:	3f 93       	push	r19
     7a0:	4f 93       	push	r20
     7a2:	5f 93       	push	r21
     7a4:	6f 93       	push	r22
     7a6:	7f 93       	push	r23
     7a8:	8f 93       	push	r24
     7aa:	9f 93       	push	r25
     7ac:	af 93       	push	r26
     7ae:	bf 93       	push	r27
     7b0:	ef 93       	push	r30
     7b2:	ff 93       	push	r31
  EE_RDY();
     7b4:	e0 91 81 01 	lds	r30, 0x0181
     7b8:	f0 91 82 01 	lds	r31, 0x0182
     7bc:	09 95       	icall
}
     7be:	ff 91       	pop	r31
     7c0:	ef 91       	pop	r30
     7c2:	bf 91       	pop	r27
     7c4:	af 91       	pop	r26
     7c6:	9f 91       	pop	r25
     7c8:	8f 91       	pop	r24
     7ca:	7f 91       	pop	r23
     7cc:	6f 91       	pop	r22
     7ce:	5f 91       	pop	r21
     7d0:	4f 91       	pop	r20
     7d2:	3f 91       	pop	r19
     7d4:	2f 91       	pop	r18
     7d6:	0f 90       	pop	r0
     7d8:	0f be       	out	0x3f, r0	; 63
     7da:	0f 90       	pop	r0
     7dc:	1f 90       	pop	r1
     7de:	18 95       	reti

000007e0 <__vector_18>:

void __vector_18(void) __attribute__((signal,__INTR_ATTRS));
void __vector_18(void)
{
     7e0:	1f 92       	push	r1
     7e2:	0f 92       	push	r0
     7e4:	0f b6       	in	r0, 0x3f	; 63
     7e6:	0f 92       	push	r0
     7e8:	11 24       	eor	r1, r1
     7ea:	2f 93       	push	r18
     7ec:	3f 93       	push	r19
     7ee:	4f 93       	push	r20
     7f0:	5f 93       	push	r21
     7f2:	6f 93       	push	r22
     7f4:	7f 93       	push	r23
     7f6:	8f 93       	push	r24
     7f8:	9f 93       	push	r25
     7fa:	af 93       	push	r26
     7fc:	bf 93       	push	r27
     7fe:	ef 93       	push	r30
     800:	ff 93       	push	r31
  ANA_COMP();
     802:	e0 91 7d 01 	lds	r30, 0x017D
     806:	f0 91 7e 01 	lds	r31, 0x017E
     80a:	09 95       	icall
}
     80c:	ff 91       	pop	r31
     80e:	ef 91       	pop	r30
     810:	bf 91       	pop	r27
     812:	af 91       	pop	r26
     814:	9f 91       	pop	r25
     816:	8f 91       	pop	r24
     818:	7f 91       	pop	r23
     81a:	6f 91       	pop	r22
     81c:	5f 91       	pop	r21
     81e:	4f 91       	pop	r20
     820:	3f 91       	pop	r19
     822:	2f 91       	pop	r18
     824:	0f 90       	pop	r0
     826:	0f be       	out	0x3f, r0	; 63
     828:	0f 90       	pop	r0
     82a:	1f 90       	pop	r1
     82c:	18 95       	reti

0000082e <__vector_19>:

void __vector_19(void) __attribute__((signal,__INTR_ATTRS));
void __vector_19(void)
{
     82e:	1f 92       	push	r1
     830:	0f 92       	push	r0
     832:	0f b6       	in	r0, 0x3f	; 63
     834:	0f 92       	push	r0
     836:	11 24       	eor	r1, r1
     838:	2f 93       	push	r18
     83a:	3f 93       	push	r19
     83c:	4f 93       	push	r20
     83e:	5f 93       	push	r21
     840:	6f 93       	push	r22
     842:	7f 93       	push	r23
     844:	8f 93       	push	r24
     846:	9f 93       	push	r25
     848:	af 93       	push	r26
     84a:	bf 93       	push	r27
     84c:	ef 93       	push	r30
     84e:	ff 93       	push	r31
  TWI_I2C();
     850:	e0 91 6f 01 	lds	r30, 0x016F
     854:	f0 91 70 01 	lds	r31, 0x0170
     858:	09 95       	icall
}
     85a:	ff 91       	pop	r31
     85c:	ef 91       	pop	r30
     85e:	bf 91       	pop	r27
     860:	af 91       	pop	r26
     862:	9f 91       	pop	r25
     864:	8f 91       	pop	r24
     866:	7f 91       	pop	r23
     868:	6f 91       	pop	r22
     86a:	5f 91       	pop	r21
     86c:	4f 91       	pop	r20
     86e:	3f 91       	pop	r19
     870:	2f 91       	pop	r18
     872:	0f 90       	pop	r0
     874:	0f be       	out	0x3f, r0	; 63
     876:	0f 90       	pop	r0
     878:	1f 90       	pop	r1
     87a:	18 95       	reti

0000087c <__vector_20>:

void __vector_20(void) __attribute__((signal,__INTR_ATTRS));
void __vector_20(void)
{
     87c:	1f 92       	push	r1
     87e:	0f 92       	push	r0
     880:	0f b6       	in	r0, 0x3f	; 63
     882:	0f 92       	push	r0
     884:	11 24       	eor	r1, r1
     886:	2f 93       	push	r18
     888:	3f 93       	push	r19
     88a:	4f 93       	push	r20
     88c:	5f 93       	push	r21
     88e:	6f 93       	push	r22
     890:	7f 93       	push	r23
     892:	8f 93       	push	r24
     894:	9f 93       	push	r25
     896:	af 93       	push	r26
     898:	bf 93       	push	r27
     89a:	ef 93       	push	r30
     89c:	ff 93       	push	r31
  SPM_RDY();
     89e:	e0 91 75 01 	lds	r30, 0x0175
     8a2:	f0 91 76 01 	lds	r31, 0x0176
     8a6:	09 95       	icall
}
     8a8:	ff 91       	pop	r31
     8aa:	ef 91       	pop	r30
     8ac:	bf 91       	pop	r27
     8ae:	af 91       	pop	r26
     8b0:	9f 91       	pop	r25
     8b2:	8f 91       	pop	r24
     8b4:	7f 91       	pop	r23
     8b6:	6f 91       	pop	r22
     8b8:	5f 91       	pop	r21
     8ba:	4f 91       	pop	r20
     8bc:	3f 91       	pop	r19
     8be:	2f 91       	pop	r18
     8c0:	0f 90       	pop	r0
     8c2:	0f be       	out	0x3f, r0	; 63
     8c4:	0f 90       	pop	r0
     8c6:	1f 90       	pop	r1
     8c8:	18 95       	reti

000008ca <Led_Init>:
	LED_3

*/
void Led_Init(En_LedNumber_t en_led_id)
{
switch(en_led_id)
     8ca:	81 30       	cpi	r24, 0x01	; 1
     8cc:	69 f0       	breq	.+26     	; 0x8e8 <Led_Init+0x1e>
     8ce:	81 30       	cpi	r24, 0x01	; 1
     8d0:	28 f0       	brcs	.+10     	; 0x8dc <Led_Init+0x12>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	79 f0       	breq	.+30     	; 0x8f4 <Led_Init+0x2a>
     8d6:	83 30       	cpi	r24, 0x03	; 3
     8d8:	c1 f4       	brne	.+48     	; 0x90a <Led_Init+0x40>
     8da:	12 c0       	rjmp	.+36     	; 0x900 <Led_Init+0x36>
{
case LED_0:
gpioPinDirection(LED_0_GPIO,LED_0_BIT,HIGH);
     8dc:	81 e0       	ldi	r24, 0x01	; 1
     8de:	60 e1       	ldi	r22, 0x10	; 16
     8e0:	4f ef       	ldi	r20, 0xFF	; 255
     8e2:	0e 94 97 00 	call	0x12e	; 0x12e <gpioPinDirection>
break;
     8e6:	08 95       	ret

case LED_1:
gpioPinDirection(LED_1_GPIO,LED_1_BIT,HIGH);
     8e8:	81 e0       	ldi	r24, 0x01	; 1
     8ea:	60 e2       	ldi	r22, 0x20	; 32
     8ec:	4f ef       	ldi	r20, 0xFF	; 255
     8ee:	0e 94 97 00 	call	0x12e	; 0x12e <gpioPinDirection>
break;
     8f2:	08 95       	ret

case LED_2:
gpioPinDirection(LED_2_GPIO,LED_2_BIT,HIGH);
     8f4:	81 e0       	ldi	r24, 0x01	; 1
     8f6:	60 e4       	ldi	r22, 0x40	; 64
     8f8:	4f ef       	ldi	r20, 0xFF	; 255
     8fa:	0e 94 97 00 	call	0x12e	; 0x12e <gpioPinDirection>
break;
     8fe:	08 95       	ret

case LED_3:
gpioPinDirection(LED_3_GPIO,LED_3_BIT,HIGH);
     900:	81 e0       	ldi	r24, 0x01	; 1
     902:	60 e8       	ldi	r22, 0x80	; 128
     904:	4f ef       	ldi	r20, 0xFF	; 255
     906:	0e 94 97 00 	call	0x12e	; 0x12e <gpioPinDirection>
     90a:	08 95       	ret

0000090c <Led_On>:
}


void Led_On(En_LedNumber_t en_led_id)
{
switch(en_led_id)
     90c:	81 30       	cpi	r24, 0x01	; 1
     90e:	69 f0       	breq	.+26     	; 0x92a <Led_On+0x1e>
     910:	81 30       	cpi	r24, 0x01	; 1
     912:	28 f0       	brcs	.+10     	; 0x91e <Led_On+0x12>
     914:	82 30       	cpi	r24, 0x02	; 2
     916:	79 f0       	breq	.+30     	; 0x936 <Led_On+0x2a>
     918:	83 30       	cpi	r24, 0x03	; 3
     91a:	c1 f4       	brne	.+48     	; 0x94c <Led_On+0x40>
     91c:	12 c0       	rjmp	.+36     	; 0x942 <Led_On+0x36>
{
case LED_0:
gpioPinWrite(LED_0_GPIO,LED_0_BIT,HIGH);
     91e:	81 e0       	ldi	r24, 0x01	; 1
     920:	60 e1       	ldi	r22, 0x10	; 16
     922:	4f ef       	ldi	r20, 0xFF	; 255
     924:	0e 94 d6 00 	call	0x1ac	; 0x1ac <gpioPinWrite>
break;
     928:	08 95       	ret

case LED_1:
gpioPinWrite(LED_1_GPIO,LED_1_BIT,HIGH);
     92a:	81 e0       	ldi	r24, 0x01	; 1
     92c:	60 e2       	ldi	r22, 0x20	; 32
     92e:	4f ef       	ldi	r20, 0xFF	; 255
     930:	0e 94 d6 00 	call	0x1ac	; 0x1ac <gpioPinWrite>
break;
     934:	08 95       	ret

case LED_2:
gpioPinWrite(LED_2_GPIO,LED_2_BIT,HIGH);
     936:	81 e0       	ldi	r24, 0x01	; 1
     938:	60 e4       	ldi	r22, 0x40	; 64
     93a:	4f ef       	ldi	r20, 0xFF	; 255
     93c:	0e 94 d6 00 	call	0x1ac	; 0x1ac <gpioPinWrite>
break;
     940:	08 95       	ret

case LED_3:
gpioPinWrite(LED_3_GPIO,LED_3_BIT,HIGH);
     942:	81 e0       	ldi	r24, 0x01	; 1
     944:	60 e8       	ldi	r22, 0x80	; 128
     946:	4f ef       	ldi	r20, 0xFF	; 255
     948:	0e 94 d6 00 	call	0x1ac	; 0x1ac <gpioPinWrite>
     94c:	08 95       	ret

0000094e <Led_Off>:
}

void Led_Off(En_LedNumber_t en_led_id)
{

switch(en_led_id)
     94e:	81 30       	cpi	r24, 0x01	; 1
     950:	69 f0       	breq	.+26     	; 0x96c <Led_Off+0x1e>
     952:	81 30       	cpi	r24, 0x01	; 1
     954:	28 f0       	brcs	.+10     	; 0x960 <Led_Off+0x12>
     956:	82 30       	cpi	r24, 0x02	; 2
     958:	79 f0       	breq	.+30     	; 0x978 <Led_Off+0x2a>
     95a:	83 30       	cpi	r24, 0x03	; 3
     95c:	c1 f4       	brne	.+48     	; 0x98e <Led_Off+0x40>
     95e:	12 c0       	rjmp	.+36     	; 0x984 <Led_Off+0x36>
{
case LED_0:
gpioPinWrite(LED_0_GPIO,LED_0_BIT,LOW);
     960:	81 e0       	ldi	r24, 0x01	; 1
     962:	60 e1       	ldi	r22, 0x10	; 16
     964:	40 e0       	ldi	r20, 0x00	; 0
     966:	0e 94 d6 00 	call	0x1ac	; 0x1ac <gpioPinWrite>
break;
     96a:	08 95       	ret

case LED_1:
gpioPinWrite(LED_1_GPIO,LED_1_BIT,LOW);
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	60 e2       	ldi	r22, 0x20	; 32
     970:	40 e0       	ldi	r20, 0x00	; 0
     972:	0e 94 d6 00 	call	0x1ac	; 0x1ac <gpioPinWrite>
break;
     976:	08 95       	ret

case LED_2:
gpioPinWrite(LED_2_GPIO,LED_2_BIT,LOW);
     978:	81 e0       	ldi	r24, 0x01	; 1
     97a:	60 e4       	ldi	r22, 0x40	; 64
     97c:	40 e0       	ldi	r20, 0x00	; 0
     97e:	0e 94 d6 00 	call	0x1ac	; 0x1ac <gpioPinWrite>
break;
     982:	08 95       	ret

case LED_3:
gpioPinWrite(LED_3_GPIO,LED_3_BIT,LOW);
     984:	81 e0       	ldi	r24, 0x01	; 1
     986:	60 e8       	ldi	r22, 0x80	; 128
     988:	40 e0       	ldi	r20, 0x00	; 0
     98a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <gpioPinWrite>
     98e:	08 95       	ret

00000990 <Led_Toggle>:


}
void Led_Toggle(En_LedNumber_t en_led_id)
{
switch(en_led_id)
     990:	81 30       	cpi	r24, 0x01	; 1
     992:	61 f0       	breq	.+24     	; 0x9ac <Led_Toggle+0x1c>
     994:	81 30       	cpi	r24, 0x01	; 1
     996:	28 f0       	brcs	.+10     	; 0x9a2 <Led_Toggle+0x12>
     998:	82 30       	cpi	r24, 0x02	; 2
     99a:	69 f0       	breq	.+26     	; 0x9b6 <Led_Toggle+0x26>
     99c:	83 30       	cpi	r24, 0x03	; 3
     99e:	a1 f4       	brne	.+40     	; 0x9c8 <Led_Toggle+0x38>
     9a0:	0f c0       	rjmp	.+30     	; 0x9c0 <Led_Toggle+0x30>
{
case LED_0:
gpioPinToggle(LED_0_GPIO,LED_0_BIT);
     9a2:	81 e0       	ldi	r24, 0x01	; 1
     9a4:	60 e1       	ldi	r22, 0x10	; 16
     9a6:	0e 94 11 01 	call	0x222	; 0x222 <gpioPinToggle>
break;
     9aa:	08 95       	ret

case LED_1:
gpioPinToggle(LED_1_GPIO,LED_1_BIT);
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	60 e2       	ldi	r22, 0x20	; 32
     9b0:	0e 94 11 01 	call	0x222	; 0x222 <gpioPinToggle>
break;
     9b4:	08 95       	ret

case LED_2:
gpioPinToggle(LED_2_GPIO,LED_2_BIT);
     9b6:	81 e0       	ldi	r24, 0x01	; 1
     9b8:	60 e4       	ldi	r22, 0x40	; 64
     9ba:	0e 94 11 01 	call	0x222	; 0x222 <gpioPinToggle>
break;
     9be:	08 95       	ret

case LED_3:
gpioPinToggle(LED_3_GPIO,LED_3_BIT);
     9c0:	81 e0       	ldi	r24, 0x01	; 1
     9c2:	60 e8       	ldi	r22, 0x80	; 128
     9c4:	0e 94 11 01 	call	0x222	; 0x222 <gpioPinToggle>
     9c8:	08 95       	ret

000009ca <pushButtonInit>:
*/
extern uint8_t volatile status_Flag;
void pushButtonInit(En_buttonId_t en_butotn_id)
{

switch(en_butotn_id)
     9ca:	81 30       	cpi	r24, 0x01	; 1
     9cc:	69 f0       	breq	.+26     	; 0x9e8 <pushButtonInit+0x1e>
     9ce:	81 30       	cpi	r24, 0x01	; 1
     9d0:	28 f0       	brcs	.+10     	; 0x9dc <pushButtonInit+0x12>
     9d2:	82 30       	cpi	r24, 0x02	; 2
     9d4:	79 f0       	breq	.+30     	; 0x9f4 <pushButtonInit+0x2a>
     9d6:	83 30       	cpi	r24, 0x03	; 3
     9d8:	c1 f4       	brne	.+48     	; 0xa0a <pushButtonInit+0x40>
     9da:	12 c0       	rjmp	.+36     	; 0xa00 <pushButtonInit+0x36>
{
case BTN_0:
{
gpioPinDirection(BTN_0_GPIO,BTN_0_BIT,LOW);
     9dc:	82 e0       	ldi	r24, 0x02	; 2
     9de:	60 e1       	ldi	r22, 0x10	; 16
     9e0:	40 e0       	ldi	r20, 0x00	; 0
     9e2:	0e 94 97 00 	call	0x12e	; 0x12e <gpioPinDirection>

break;
     9e6:	08 95       	ret
}
case BTN_1:
{
gpioPinDirection(BTN_1_GPIO,BTN_1_BIT,LOW);
     9e8:	81 e0       	ldi	r24, 0x01	; 1
     9ea:	64 e0       	ldi	r22, 0x04	; 4
     9ec:	40 e0       	ldi	r20, 0x00	; 0
     9ee:	0e 94 97 00 	call	0x12e	; 0x12e <gpioPinDirection>

break;
     9f2:	08 95       	ret
}
case BTN_2:
{
gpioPinDirection(BTN_2_GPIO,BTN_2_BIT,LOW);
     9f4:	80 e0       	ldi	r24, 0x00	; 0
     9f6:	64 e0       	ldi	r22, 0x04	; 4
     9f8:	40 e0       	ldi	r20, 0x00	; 0
     9fa:	0e 94 97 00 	call	0x12e	; 0x12e <gpioPinDirection>

break;
     9fe:	08 95       	ret
}
case BTN_3:
{
gpioPinDirection(BTN_3_GPIO,BTN_3_BIT,LOW);
     a00:	80 e0       	ldi	r24, 0x00	; 0
     a02:	68 e0       	ldi	r22, 0x08	; 8
     a04:	40 e0       	ldi	r20, 0x00	; 0
     a06:	0e 94 97 00 	call	0x12e	; 0x12e <gpioPinDirection>
     a0a:	08 95       	ret

00000a0c <pushButtonGetStatus>:
}

En_buttonStatus_t pushButtonGetStatus(En_buttonId_t en_butotn_id)
{

switch(en_butotn_id)
     a0c:	81 30       	cpi	r24, 0x01	; 1
     a0e:	e9 f0       	breq	.+58     	; 0xa4a <pushButtonGetStatus+0x3e>
     a10:	81 30       	cpi	r24, 0x01	; 1
     a12:	30 f0       	brcs	.+12     	; 0xa20 <pushButtonGetStatus+0x14>
     a14:	82 30       	cpi	r24, 0x02	; 2
     a16:	61 f1       	breq	.+88     	; 0xa70 <pushButtonGetStatus+0x64>
     a18:	83 30       	cpi	r24, 0x03	; 3
     a1a:	09 f0       	breq	.+2      	; 0xa1e <pushButtonGetStatus+0x12>
     a1c:	4f c0       	rjmp	.+158    	; 0xabc <pushButtonGetStatus+0xb0>
     a1e:	3b c0       	rjmp	.+118    	; 0xa96 <pushButtonGetStatus+0x8a>
{
case BTN_0:
{
if(gpioPinRead(BTN_0_GPIO,BTN_0_BIT) == Pressed)
     a20:	82 e0       	ldi	r24, 0x02	; 2
     a22:	60 e1       	ldi	r22, 0x10	; 16
     a24:	0e 94 2a 01 	call	0x254	; 0x254 <gpioPinRead>
     a28:	81 30       	cpi	r24, 0x01	; 1
     a2a:	09 f0       	breq	.+2      	; 0xa2e <pushButtonGetStatus+0x22>
     a2c:	48 c0       	rjmp	.+144    	; 0xabe <pushButtonGetStatus+0xb2>
{ timer0DelayMs(50);
     a2e:	82 e3       	ldi	r24, 0x32	; 50
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	0e 94 b1 06 	call	0xd62	; 0xd62 <timer0DelayMs>
	if(gpioPinRead(BTN_0_GPIO,BTN_0_BIT) == Pressed)
     a36:	82 e0       	ldi	r24, 0x02	; 2
     a38:	60 e1       	ldi	r22, 0x10	; 16
     a3a:	0e 94 2a 01 	call	0x254	; 0x254 <gpioPinRead>
	return Pressed;
     a3e:	91 e0       	ldi	r25, 0x01	; 1
     a40:	81 30       	cpi	r24, 0x01	; 1
     a42:	09 f4       	brne	.+2      	; 0xa46 <pushButtonGetStatus+0x3a>
     a44:	43 c0       	rjmp	.+134    	; 0xacc <pushButtonGetStatus+0xc0>
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	41 c0       	rjmp	.+130    	; 0xacc <pushButtonGetStatus+0xc0>
}else{return Released;}
break;
}
case BTN_1:
{
if(gpioPinRead(BTN_1_GPIO,BTN_1_BIT) == Pressed)
     a4a:	81 e0       	ldi	r24, 0x01	; 1
     a4c:	64 e0       	ldi	r22, 0x04	; 4
     a4e:	0e 94 2a 01 	call	0x254	; 0x254 <gpioPinRead>
     a52:	81 30       	cpi	r24, 0x01	; 1
     a54:	b1 f5       	brne	.+108    	; 0xac2 <pushButtonGetStatus+0xb6>
{
timer0DelayMs(50);
     a56:	82 e3       	ldi	r24, 0x32	; 50
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	0e 94 b1 06 	call	0xd62	; 0xd62 <timer0DelayMs>
if(gpioPinRead(BTN_1_GPIO,BTN_1_BIT) == Pressed)
     a5e:	81 e0       	ldi	r24, 0x01	; 1
     a60:	64 e0       	ldi	r22, 0x04	; 4
     a62:	0e 94 2a 01 	call	0x254	; 0x254 <gpioPinRead>
case BTN_0:
{
if(gpioPinRead(BTN_0_GPIO,BTN_0_BIT) == Pressed)
{ timer0DelayMs(50);
	if(gpioPinRead(BTN_0_GPIO,BTN_0_BIT) == Pressed)
	return Pressed;
     a66:	91 e0       	ldi	r25, 0x01	; 1
     a68:	81 30       	cpi	r24, 0x01	; 1
     a6a:	81 f1       	breq	.+96     	; 0xacc <pushButtonGetStatus+0xc0>
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	2e c0       	rjmp	.+92     	; 0xacc <pushButtonGetStatus+0xc0>
}else{return Released;}
break;
}
case BTN_2:
{
if(gpioPinRead(BTN_2_GPIO,BTN_2_BIT) == Pressed)
     a70:	80 e0       	ldi	r24, 0x00	; 0
     a72:	64 e0       	ldi	r22, 0x04	; 4
     a74:	0e 94 2a 01 	call	0x254	; 0x254 <gpioPinRead>
     a78:	81 30       	cpi	r24, 0x01	; 1
     a7a:	29 f5       	brne	.+74     	; 0xac6 <pushButtonGetStatus+0xba>
{
	timer0DelayMs(50);
     a7c:	82 e3       	ldi	r24, 0x32	; 50
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	0e 94 b1 06 	call	0xd62	; 0xd62 <timer0DelayMs>
	if(gpioPinRead(BTN_2_GPIO,BTN_2_BIT) == Pressed)
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	64 e0       	ldi	r22, 0x04	; 4
     a88:	0e 94 2a 01 	call	0x254	; 0x254 <gpioPinRead>
case BTN_0:
{
if(gpioPinRead(BTN_0_GPIO,BTN_0_BIT) == Pressed)
{ timer0DelayMs(50);
	if(gpioPinRead(BTN_0_GPIO,BTN_0_BIT) == Pressed)
	return Pressed;
     a8c:	91 e0       	ldi	r25, 0x01	; 1
     a8e:	81 30       	cpi	r24, 0x01	; 1
     a90:	e9 f0       	breq	.+58     	; 0xacc <pushButtonGetStatus+0xc0>
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	1b c0       	rjmp	.+54     	; 0xacc <pushButtonGetStatus+0xc0>
}else{return Released;}
break;
}
case BTN_3:
{
if(gpioPinRead(BTN_3_GPIO,BTN_3_BIT) == Pressed)
     a96:	80 e0       	ldi	r24, 0x00	; 0
     a98:	68 e0       	ldi	r22, 0x08	; 8
     a9a:	0e 94 2a 01 	call	0x254	; 0x254 <gpioPinRead>
     a9e:	81 30       	cpi	r24, 0x01	; 1
     aa0:	a1 f4       	brne	.+40     	; 0xaca <pushButtonGetStatus+0xbe>
{
	timer0DelayMs(50);
     aa2:	82 e3       	ldi	r24, 0x32	; 50
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	0e 94 b1 06 	call	0xd62	; 0xd62 <timer0DelayMs>
	if(gpioPinRead(BTN_3_GPIO,BTN_3_BIT) == Pressed)
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	68 e0       	ldi	r22, 0x08	; 8
     aae:	0e 94 2a 01 	call	0x254	; 0x254 <gpioPinRead>
case BTN_0:
{
if(gpioPinRead(BTN_0_GPIO,BTN_0_BIT) == Pressed)
{ timer0DelayMs(50);
	if(gpioPinRead(BTN_0_GPIO,BTN_0_BIT) == Pressed)
	return Pressed;
     ab2:	91 e0       	ldi	r25, 0x01	; 1
     ab4:	81 30       	cpi	r24, 0x01	; 1
     ab6:	51 f0       	breq	.+20     	; 0xacc <pushButtonGetStatus+0xc0>
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	08 c0       	rjmp	.+16     	; 0xacc <pushButtonGetStatus+0xc0>
     abc:	08 95       	ret
	else {return Released;}
}else{return Released;}
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	05 c0       	rjmp	.+10     	; 0xacc <pushButtonGetStatus+0xc0>
{
timer0DelayMs(50);
if(gpioPinRead(BTN_1_GPIO,BTN_1_BIT) == Pressed)
return Pressed;
	else {return Released;}
}else{return Released;}
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	03 c0       	rjmp	.+6      	; 0xacc <pushButtonGetStatus+0xc0>
{
	timer0DelayMs(50);
	if(gpioPinRead(BTN_2_GPIO,BTN_2_BIT) == Pressed)
	return Pressed;
else {return Released;}
}else{return Released;}
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	01 c0       	rjmp	.+2      	; 0xacc <pushButtonGetStatus+0xc0>
{
	timer0DelayMs(50);
	if(gpioPinRead(BTN_3_GPIO,BTN_3_BIT) == Pressed)
	return Pressed;
else {return Released;}
}else{return Released;}
     aca:	90 e0       	ldi	r25, 0x00	; 0
break;
}

}
}
     acc:	89 2f       	mov	r24, r25
     ace:	08 95       	ret

00000ad0 <check_button>:

void check_button(void)
{//	Led_Toggle(LED_0);

	if(((MCUCSR>>6)&1))
     ad0:	84 b7       	in	r24, 0x34	; 52
     ad2:	82 95       	swap	r24
     ad4:	86 95       	lsr	r24
     ad6:	86 95       	lsr	r24
     ad8:	83 70       	andi	r24, 0x03	; 3
     ada:	80 ff       	sbrs	r24, 0
     adc:	03 c0       	rjmp	.+6      	; 0xae4 <check_button+0x14>
	{//reversed
		SwICU_Start();	
     ade:	0e 94 4b 06 	call	0xc96	; 0xc96 <SwICU_Start>
     ae2:	02 c0       	rjmp	.+4      	; 0xae8 <check_button+0x18>
	}
	else
	{
	SwICU_Stop();
     ae4:	0e 94 48 06 	call	0xc90	; 0xc90 <SwICU_Stop>
	}
MCUCSR ^= (1<<6);
     ae8:	94 b7       	in	r25, 0x34	; 52
     aea:	80 e4       	ldi	r24, 0x40	; 64
     aec:	89 27       	eor	r24, r25
     aee:	84 bf       	out	0x34, r24	; 52
}
     af0:	08 95       	ret

00000af2 <softwareDelayMs>:
 *
 * Created: 17/01/2020 03:54:09 م
 *  Author: mo
 */ 
#include "softwareDelay.h"
void softwareDelayMs(volatile uint32_t u32_delay_in_ms){
     af2:	cf 93       	push	r28
     af4:	df 93       	push	r29
     af6:	cd b7       	in	r28, 0x3d	; 61
     af8:	de b7       	in	r29, 0x3e	; 62
     afa:	28 97       	sbiw	r28, 0x08	; 8
     afc:	0f b6       	in	r0, 0x3f	; 63
     afe:	f8 94       	cli
     b00:	de bf       	out	0x3e, r29	; 62
     b02:	0f be       	out	0x3f, r0	; 63
     b04:	cd bf       	out	0x3d, r28	; 61
     b06:	6d 83       	std	Y+5, r22	; 0x05
     b08:	7e 83       	std	Y+6, r23	; 0x06
     b0a:	8f 83       	std	Y+7, r24	; 0x07
     b0c:	98 87       	std	Y+8, r25	; 0x08
volatile uint32_t Local_Nope_counter=0;
     b0e:	19 82       	std	Y+1, r1	; 0x01
     b10:	1a 82       	std	Y+2, r1	; 0x02
     b12:	1b 82       	std	Y+3, r1	; 0x03
     b14:	1c 82       	std	Y+4, r1	; 0x04
while (u32_delay_in_ms > 0)
     b16:	8d 81       	ldd	r24, Y+5	; 0x05
     b18:	9e 81       	ldd	r25, Y+6	; 0x06
     b1a:	af 81       	ldd	r26, Y+7	; 0x07
     b1c:	b8 85       	ldd	r27, Y+8	; 0x08
     b1e:	00 97       	sbiw	r24, 0x00	; 0
     b20:	a1 05       	cpc	r26, r1
     b22:	b1 05       	cpc	r27, r1
     b24:	a1 f1       	breq	.+104    	; 0xb8e <softwareDelayMs+0x9c>
{
	for(Local_Nope_counter = 0 ;Local_Nope_counter<10;Local_Nope_counter++);
     b26:	19 82       	std	Y+1, r1	; 0x01
     b28:	1a 82       	std	Y+2, r1	; 0x02
     b2a:	1b 82       	std	Y+3, r1	; 0x03
     b2c:	1c 82       	std	Y+4, r1	; 0x04
     b2e:	89 81       	ldd	r24, Y+1	; 0x01
     b30:	9a 81       	ldd	r25, Y+2	; 0x02
     b32:	ab 81       	ldd	r26, Y+3	; 0x03
     b34:	bc 81       	ldd	r27, Y+4	; 0x04
     b36:	8a 30       	cpi	r24, 0x0A	; 10
     b38:	91 05       	cpc	r25, r1
     b3a:	a1 05       	cpc	r26, r1
     b3c:	b1 05       	cpc	r27, r1
     b3e:	a0 f4       	brcc	.+40     	; 0xb68 <softwareDelayMs+0x76>
     b40:	89 81       	ldd	r24, Y+1	; 0x01
     b42:	9a 81       	ldd	r25, Y+2	; 0x02
     b44:	ab 81       	ldd	r26, Y+3	; 0x03
     b46:	bc 81       	ldd	r27, Y+4	; 0x04
     b48:	01 96       	adiw	r24, 0x01	; 1
     b4a:	a1 1d       	adc	r26, r1
     b4c:	b1 1d       	adc	r27, r1
     b4e:	89 83       	std	Y+1, r24	; 0x01
     b50:	9a 83       	std	Y+2, r25	; 0x02
     b52:	ab 83       	std	Y+3, r26	; 0x03
     b54:	bc 83       	std	Y+4, r27	; 0x04
     b56:	89 81       	ldd	r24, Y+1	; 0x01
     b58:	9a 81       	ldd	r25, Y+2	; 0x02
     b5a:	ab 81       	ldd	r26, Y+3	; 0x03
     b5c:	bc 81       	ldd	r27, Y+4	; 0x04
     b5e:	8a 30       	cpi	r24, 0x0A	; 10
     b60:	91 05       	cpc	r25, r1
     b62:	a1 05       	cpc	r26, r1
     b64:	b1 05       	cpc	r27, r1
     b66:	60 f3       	brcs	.-40     	; 0xb40 <softwareDelayMs+0x4e>

u32_delay_in_ms--;	
     b68:	8d 81       	ldd	r24, Y+5	; 0x05
     b6a:	9e 81       	ldd	r25, Y+6	; 0x06
     b6c:	af 81       	ldd	r26, Y+7	; 0x07
     b6e:	b8 85       	ldd	r27, Y+8	; 0x08
     b70:	01 97       	sbiw	r24, 0x01	; 1
     b72:	a1 09       	sbc	r26, r1
     b74:	b1 09       	sbc	r27, r1
     b76:	8d 83       	std	Y+5, r24	; 0x05
     b78:	9e 83       	std	Y+6, r25	; 0x06
     b7a:	af 83       	std	Y+7, r26	; 0x07
     b7c:	b8 87       	std	Y+8, r27	; 0x08
 *  Author: mo
 */ 
#include "softwareDelay.h"
void softwareDelayMs(volatile uint32_t u32_delay_in_ms){
volatile uint32_t Local_Nope_counter=0;
while (u32_delay_in_ms > 0)
     b7e:	8d 81       	ldd	r24, Y+5	; 0x05
     b80:	9e 81       	ldd	r25, Y+6	; 0x06
     b82:	af 81       	ldd	r26, Y+7	; 0x07
     b84:	b8 85       	ldd	r27, Y+8	; 0x08
     b86:	00 97       	sbiw	r24, 0x00	; 0
     b88:	a1 05       	cpc	r26, r1
     b8a:	b1 05       	cpc	r27, r1
     b8c:	61 f6       	brne	.-104    	; 0xb26 <softwareDelayMs+0x34>

u32_delay_in_ms--;	

}

     b8e:	28 96       	adiw	r28, 0x08	; 8
     b90:	0f b6       	in	r0, 0x3f	; 63
     b92:	f8 94       	cli
     b94:	de bf       	out	0x3e, r29	; 62
     b96:	0f be       	out	0x3f, r0	; 63
     b98:	cd bf       	out	0x3d, r28	; 61
     b9a:	df 91       	pop	r29
     b9c:	cf 91       	pop	r28
     b9e:	08 95       	ret

00000ba0 <main>:
#include "util/delay.h"

uint8_t tcnt0_value=0;
int main(void)
{
Led_Init(LED_0);
     ba0:	80 e0       	ldi	r24, 0x00	; 0
     ba2:	0e 94 65 04 	call	0x8ca	; 0x8ca <Led_Init>
Led_Init(LED_1);
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	0e 94 65 04 	call	0x8ca	; 0x8ca <Led_Init>
Led_Init(LED_2);
     bac:	82 e0       	ldi	r24, 0x02	; 2
     bae:	0e 94 65 04 	call	0x8ca	; 0x8ca <Led_Init>
Led_Init(LED_3);
     bb2:	83 e0       	ldi	r24, 0x03	; 3
     bb4:	0e 94 65 04 	call	0x8ca	; 0x8ca <Led_Init>
gpioPortDirection(GPIOC,HIGH);
     bb8:	82 e0       	ldi	r24, 0x02	; 2
     bba:	6f ef       	ldi	r22, 0xFF	; 255
     bbc:	0e 94 49 00 	call	0x92	; 0x92 <gpioPortDirection>
SwICU_Init(SwICU_EdgeRisiging);
     bc0:	81 e0       	ldi	r24, 0x01	; 1
     bc2:	0e 94 02 06 	call	0xc04	; 0xc04 <SwICU_Init>
SET_BIT(PORTC_DATA,1);
_delay_ms(1);
CLEAR_BIT(PORTC_DATA,1);
//SwICU_Start();
//_delay_ms(1);
SwICU_Read(&tcnt0_value);
     bc6:	c8 e6       	ldi	r28, 0x68	; 104
     bc8:	d1 e0       	ldi	r29, 0x01	; 1
Led_Init(LED_3);
gpioPortDirection(GPIOC,HIGH);
SwICU_Init(SwICU_EdgeRisiging);
	while(1)
    {
tcnt0_value=timer0Read();
     bca:	0e 94 50 06 	call	0xca0	; 0xca0 <timer0Read>
     bce:	80 93 68 01 	sts	0x0168, r24
SET_BIT(PORTC_DATA,1);
     bd2:	a9 9a       	sbi	0x15, 1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     bd4:	8f e9       	ldi	r24, 0x9F	; 159
     bd6:	9f e0       	ldi	r25, 0x0F	; 15
     bd8:	01 97       	sbiw	r24, 0x01	; 1
     bda:	f1 f7       	brne	.-4      	; 0xbd8 <main+0x38>
     bdc:	00 c0       	rjmp	.+0      	; 0xbde <main+0x3e>
     bde:	00 00       	nop
_delay_ms(1);
CLEAR_BIT(PORTC_DATA,1);
     be0:	a9 98       	cbi	0x15, 1	; 21
//SwICU_Start();
//_delay_ms(1);
SwICU_Read(&tcnt0_value);
     be2:	ce 01       	movw	r24, r28
     be4:	0e 94 17 06 	call	0xc2e	; 0xc2e <SwICU_Read>
     be8:	f0 cf       	rjmp	.-32     	; 0xbca <main+0x2a>

00000bea <SwICU_SetCfgEdge>:

}

void SwICU_SetCfgEdge(EN_SwICU_Edge_t a_en_inputCaptureEdgeedge)
{
	switch (a_en_inputCaptureEdgeedge) {
     bea:	88 23       	and	r24, r24
     bec:	19 f0       	breq	.+6      	; 0xbf4 <SwICU_SetCfgEdge+0xa>
     bee:	81 30       	cpi	r24, 0x01	; 1
     bf0:	41 f4       	brne	.+16     	; 0xc02 <SwICU_SetCfgEdge+0x18>
     bf2:	04 c0       	rjmp	.+8      	; 0xbfc <SwICU_SetCfgEdge+0x12>
		case SwICU_EdgeFalling :
	{
		CLEAR_BIT(MCUCSR,6);
     bf4:	84 b7       	in	r24, 0x34	; 52
     bf6:	8f 7b       	andi	r24, 0xBF	; 191
     bf8:	84 bf       	out	0x34, r24	; 52
		break;
     bfa:	08 95       	ret
	}
	case SwICU_EdgeRisiging:
	{
	SET_BIT(MCUCSR,6);
     bfc:	84 b7       	in	r24, 0x34	; 52
     bfe:	80 64       	ori	r24, 0x40	; 64
     c00:	84 bf       	out	0x34, r24	; 52
     c02:	08 95       	ret

00000c04 <SwICU_Init>:
#include "timers.h"
#include "registers.h"
#define RESOLUTION 256

void SwICU_Init(EN_SwICU_Edge_t a_en_inputCaptureEdge)
{
     c04:	ef 92       	push	r14
     c06:	0f 93       	push	r16
/*Make External interrup work first via Any logical change*/
timer0Init(T0_NORMAL_MODE,T0_OC0_DIS,T0_PRESCALER_64,0,0,T0_INTERRUPT_NORMAL);
     c08:	80 e0       	ldi	r24, 0x00	; 0
     c0a:	60 e0       	ldi	r22, 0x00	; 0
     c0c:	43 e0       	ldi	r20, 0x03	; 3
     c0e:	20 e0       	ldi	r18, 0x00	; 0
     c10:	00 e0       	ldi	r16, 0x00	; 0
     c12:	ee 24       	eor	r14, r14
     c14:	e3 94       	inc	r14
     c16:	0e 94 5f 06 	call	0xcbe	; 0xcbe <timer0Init>
G_interrupt_Enable();
     c1a:	0e 94 45 01 	call	0x28a	; 0x28a <G_interrupt_Enable>
EX_interrupt_enable2();
     c1e:	0e 94 49 01 	call	0x292	; 0x292 <EX_interrupt_enable2>
/*change the interrupt activation status*/
SwICU_SetCfgEdge(SwICU_EdgeRisiging);
     c22:	81 e0       	ldi	r24, 0x01	; 1
     c24:	0e 94 f5 05 	call	0xbea	; 0xbea <SwICU_SetCfgEdge>

}
     c28:	0f 91       	pop	r16
     c2a:	ef 90       	pop	r14
     c2c:	08 95       	ret

00000c2e <SwICU_Read>:

	}

}
void SwICU_Read(volatile uint8_t * a_pu8_capt)
{//64 prescaler
     c2e:	af 92       	push	r10
     c30:	bf 92       	push	r11
     c32:	cf 92       	push	r12
     c34:	df 92       	push	r13
     c36:	ef 92       	push	r14
     c38:	ff 92       	push	r15
     c3a:	0f 93       	push	r16
     c3c:	1f 93       	push	r17
uint64_t num_of_tics=0;
uint16_t num_of_cm=0;
//num_of_cm=(68 * (*a_pu8_capt)/1000);
num_of_tics=((* a_pu8_capt)+(u8_ovf_counter * RESOLUTION));
     c3e:	fc 01       	movw	r30, r24
     c40:	80 81       	ld	r24, Z
     c42:	90 91 69 01 	lds	r25, 0x0169
     c46:	39 2f       	mov	r19, r25
     c48:	20 e0       	ldi	r18, 0x00	; 0
     c4a:	28 0f       	add	r18, r24
     c4c:	31 1d       	adc	r19, r1
     c4e:	93 2f       	mov	r25, r19
     c50:	99 0f       	add	r25, r25
     c52:	99 0b       	sbc	r25, r25
num_of_cm=num_of_tics/30;
     c54:	49 2f       	mov	r20, r25
     c56:	59 2f       	mov	r21, r25
     c58:	69 2f       	mov	r22, r25
     c5a:	79 2f       	mov	r23, r25
     c5c:	89 2f       	mov	r24, r25
     c5e:	0f 2e       	mov	r0, r31
     c60:	fe e1       	ldi	r31, 0x1E	; 30
     c62:	af 2e       	mov	r10, r31
     c64:	f0 2d       	mov	r31, r0
     c66:	bb 24       	eor	r11, r11
     c68:	cc 24       	eor	r12, r12
     c6a:	dd 24       	eor	r13, r13
     c6c:	ee 24       	eor	r14, r14
     c6e:	ff 24       	eor	r15, r15
     c70:	00 e0       	ldi	r16, 0x00	; 0
     c72:	10 e0       	ldi	r17, 0x00	; 0
     c74:	0e 94 ca 07 	call	0xf94	; 0xf94 <__udivdi3>

PORTB_DATA=(num_of_cm<<4);
     c78:	22 95       	swap	r18
     c7a:	20 7f       	andi	r18, 0xF0	; 240
     c7c:	28 bb       	out	0x18, r18	; 24
	case 15:
	PORTB_DATA=0xF0;
	break;
}*/

}
     c7e:	1f 91       	pop	r17
     c80:	0f 91       	pop	r16
     c82:	ff 90       	pop	r15
     c84:	ef 90       	pop	r14
     c86:	df 90       	pop	r13
     c88:	cf 90       	pop	r12
     c8a:	bf 90       	pop	r11
     c8c:	af 90       	pop	r10
     c8e:	08 95       	ret

00000c90 <SwICU_Stop>:

void SwICU_Stop(void)
{
timer0Stop();
     c90:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <timer0Stop>
}
     c94:	08 95       	ret

00000c96 <SwICU_Start>:

void SwICU_Start(void)
{
timer0Start();
     c96:	0e 94 52 06 	call	0xca4	; 0xca4 <timer0Start>
}
     c9a:	08 95       	ret

00000c9c <timer0Set>:
}

}
void timer0Set(uint8_t u8_value)
{
TCNT0 =	u8_value;
     c9c:	82 bf       	out	0x32, r24	; 50
}
     c9e:	08 95       	ret

00000ca0 <timer0Read>:

uint8_t timer0Read(void)
{
	 return TCNT0;
     ca0:	82 b7       	in	r24, 0x32	; 50
}
     ca2:	08 95       	ret

00000ca4 <timer0Start>:
Depending on prescaler	x     X    X

*/
void timer0Start(void)
{
	 TCCR0 &= (0xF8);
     ca4:	83 b7       	in	r24, 0x33	; 51
     ca6:	88 7f       	andi	r24, 0xF8	; 248
     ca8:	83 bf       	out	0x33, r24	; 51
	 TCCR0 |= Prescaler_Value;
     caa:	93 b7       	in	r25, 0x33	; 51
     cac:	80 91 6e 01 	lds	r24, 0x016E
     cb0:	89 2b       	or	r24, r25
     cb2:	83 bf       	out	0x33, r24	; 51
}
     cb4:	08 95       	ret

00000cb6 <timer0Stop>:
						      0     0    0
*/
void timer0Stop(void)
 {

TCCR0 &= (0xF8);
     cb6:	83 b7       	in	r24, 0x33	; 51
     cb8:	88 7f       	andi	r24, 0xF8	; 248
     cba:	83 bf       	out	0x33, r24	; 51

 }
     cbc:	08 95       	ret

00000cbe <timer0Init>:
uint8_t pooling=0;
uint8_t Prescaler_Value2=0;
volatile uint8_t pwm_time_on=0,flag=0;
volatile uint8_t u8_ovf_counter=0;
void timer0Init(En_timer0Mode_t en_mode,En_timer0OC_t en_OC0,En_timer0perscaler_t en_prescal,uint8_t u8_initialValue, uint8_t u8_outputCompare,En_timer0Interrupt_t en_interruptMask)
{
     cbe:	ef 92       	push	r14
     cc0:	0f 93       	push	r16
if(en_prescal == T0_NO_CLOCK)
     cc2:	44 23       	and	r20, r20
     cc4:	19 f4       	brne	.+6      	; 0xccc <timer0Init+0xe>
{/*
if there is no clock the timer will be disabled
*/
timer0Stop();
     cc6:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <timer0Stop>
     cca:	48 c0       	rjmp	.+144    	; 0xd5c <timer0Init+0x9e>
}
else
{
TCCR0 |= en_mode|en_prescal;
     ccc:	93 b7       	in	r25, 0x33	; 51
     cce:	89 2b       	or	r24, r25
     cd0:	84 2b       	or	r24, r20
     cd2:	83 bf       	out	0x33, r24	; 51
Prescaler_Value=en_prescal;
     cd4:	40 93 6e 01 	sts	0x016E, r20
TCNT0 = u8_initialValue;
     cd8:	22 bf       	out	0x32, r18	; 50
switch(en_OC0){
     cda:	60 31       	cpi	r22, 0x10	; 16
     cdc:	71 f0       	breq	.+28     	; 0xcfa <timer0Init+0x3c>
     cde:	61 31       	cpi	r22, 0x11	; 17
     ce0:	18 f4       	brcc	.+6      	; 0xce8 <timer0Init+0x2a>
     ce2:	66 23       	and	r22, r22
     ce4:	31 f0       	breq	.+12     	; 0xcf2 <timer0Init+0x34>
     ce6:	14 c0       	rjmp	.+40     	; 0xd10 <timer0Init+0x52>
     ce8:	60 32       	cpi	r22, 0x20	; 32
     cea:	59 f0       	breq	.+22     	; 0xd02 <timer0Init+0x44>
     cec:	60 33       	cpi	r22, 0x30	; 48
     cee:	81 f4       	brne	.+32     	; 0xd10 <timer0Init+0x52>
     cf0:	0c c0       	rjmp	.+24     	; 0xd0a <timer0Init+0x4c>
	case  T0_OC0_DIS:
	{
	TCCR0 &= 0xCF;
     cf2:	83 b7       	in	r24, 0x33	; 51
     cf4:	8f 7c       	andi	r24, 0xCF	; 207
     cf6:	83 bf       	out	0x33, r24	; 51
		break;
     cf8:	0b c0       	rjmp	.+22     	; 0xd10 <timer0Init+0x52>
	}
	case T0_OC0_TOGGLE:
	{
		TCCR0|=T0_OC0_TOGGLE;
     cfa:	83 b7       	in	r24, 0x33	; 51
     cfc:	80 61       	ori	r24, 0x10	; 16
     cfe:	83 bf       	out	0x33, r24	; 51
		break;
     d00:	07 c0       	rjmp	.+14     	; 0xd10 <timer0Init+0x52>
	}
	case  T0_OC0_CLEAR:
	{
	TCCR0 |= T0_OC0_CLEAR;
     d02:	83 b7       	in	r24, 0x33	; 51
     d04:	80 62       	ori	r24, 0x20	; 32
     d06:	83 bf       	out	0x33, r24	; 51

		break;
     d08:	03 c0       	rjmp	.+6      	; 0xd10 <timer0Init+0x52>
	}
	case T0_OC0_SET:
	{
		TCCR0 |=T0_OC0_SET;
     d0a:	83 b7       	in	r24, 0x33	; 51
     d0c:	80 63       	ori	r24, 0x30	; 48
     d0e:	83 bf       	out	0x33, r24	; 51
		break;
	}

}
OCR0  =u8_outputCompare;
     d10:	0c bf       	out	0x3c, r16	; 60
switch(en_interruptMask){
     d12:	81 e0       	ldi	r24, 0x01	; 1
     d14:	e8 16       	cp	r14, r24
     d16:	69 f0       	breq	.+26     	; 0xd32 <timer0Init+0x74>
     d18:	e8 16       	cp	r14, r24
     d1a:	20 f0       	brcs	.+8      	; 0xd24 <timer0Init+0x66>
     d1c:	82 e0       	ldi	r24, 0x02	; 2
     d1e:	e8 16       	cp	r14, r24
     d20:	e9 f4       	brne	.+58     	; 0xd5c <timer0Init+0x9e>
     d22:	10 c0       	rjmp	.+32     	; 0xd44 <timer0Init+0x86>
case  T0_POLLING:{
pooling=0;
     d24:	10 92 6d 01 	sts	0x016D, r1
G_interrupt_Disable();
     d28:	0e 94 55 01 	call	0x2aa	; 0x2aa <G_interrupt_Disable>
TIMSK &= T0_POLLING;
     d2c:	89 b7       	in	r24, 0x39	; 57
     d2e:	19 be       	out	0x39, r1	; 57
break;
     d30:	15 c0       	rjmp	.+42     	; 0xd5c <timer0Init+0x9e>
}
case T0_INTERRUPT_NORMAL :
{pooling=1;
     d32:	81 e0       	ldi	r24, 0x01	; 1
     d34:	80 93 6d 01 	sts	0x016D, r24
G_interrupt_Enable();
     d38:	0e 94 45 01 	call	0x28a	; 0x28a <G_interrupt_Enable>
TIMSK |= T0_INTERRUPT_NORMAL;
     d3c:	89 b7       	in	r24, 0x39	; 57
     d3e:	81 60       	ori	r24, 0x01	; 1
     d40:	89 bf       	out	0x39, r24	; 57
break;
     d42:	0c c0       	rjmp	.+24     	; 0xd5c <timer0Init+0x9e>
}
case T0_INTERRUPT_CMP:
{pooling=1;
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	80 93 6d 01 	sts	0x016D, r24
//G_interrupt_Enable();
SET_BIT(SREG,7);
     d4a:	8f b7       	in	r24, 0x3f	; 63
     d4c:	80 68       	ori	r24, 0x80	; 128
     d4e:	8f bf       	out	0x3f, r24	; 63
TIMSK |= T0_INTERRUPT_NORMAL;
     d50:	89 b7       	in	r24, 0x39	; 57
     d52:	81 60       	ori	r24, 0x01	; 1
     d54:	89 bf       	out	0x39, r24	; 57
TIMSK |=T0_INTERRUPT_CMP;
     d56:	89 b7       	in	r24, 0x39	; 57
     d58:	82 60       	ori	r24, 0x02	; 2
     d5a:	89 bf       	out	0x39, r24	; 57
}
}

}

}
     d5c:	0f 91       	pop	r16
     d5e:	ef 90       	pop	r14
     d60:	08 95       	ret

00000d62 <timer0DelayMs>:
	uint32_t u32_loop=0;
/*	u32_ovf_counter=0;
		timer0Set(48);
		while(u32_ovf_counter <= (64)*u16_delay_in_ms);
*/
for (u32_loop=0;u32_loop<u16_delay_in_ms;u32_loop++)
     d62:	ac 01       	movw	r20, r24
     d64:	60 e0       	ldi	r22, 0x00	; 0
     d66:	70 e0       	ldi	r23, 0x00	; 0
     d68:	41 15       	cp	r20, r1
     d6a:	51 05       	cpc	r21, r1
     d6c:	61 05       	cpc	r22, r1
     d6e:	71 05       	cpc	r23, r1
     d70:	89 f0       	breq	.+34     	; 0xd94 <timer0DelayMs+0x32>
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	90 e0       	ldi	r25, 0x00	; 0
     d76:	dc 01       	movw	r26, r24
{
	while ((TIFR&0x01)==0);
     d78:	08 b6       	in	r0, 0x38	; 56
     d7a:	00 fe       	sbrs	r0, 0
     d7c:	fd cf       	rjmp	.-6      	; 0xd78 <timer0DelayMs+0x16>
	TIFR |=0x01;
     d7e:	28 b7       	in	r18, 0x38	; 56
     d80:	21 60       	ori	r18, 0x01	; 1
     d82:	28 bf       	out	0x38, r18	; 56
	uint32_t u32_loop=0;
/*	u32_ovf_counter=0;
		timer0Set(48);
		while(u32_ovf_counter <= (64)*u16_delay_in_ms);
*/
for (u32_loop=0;u32_loop<u16_delay_in_ms;u32_loop++)
     d84:	01 96       	adiw	r24, 0x01	; 1
     d86:	a1 1d       	adc	r26, r1
     d88:	b1 1d       	adc	r27, r1
     d8a:	84 17       	cp	r24, r20
     d8c:	95 07       	cpc	r25, r21
     d8e:	a6 07       	cpc	r26, r22
     d90:	b7 07       	cpc	r27, r23
     d92:	90 f3       	brcs	.-28     	; 0xd78 <timer0DelayMs+0x16>
     d94:	08 95       	ret

00000d96 <timer0DelayUs>:
 at pooling _no prescaling
 240at TCNT0

 */
 void timer0DelayUs(uint32_t u32_delay_in_us)
 {  uint32_t u32_loop=0;
     d96:	dc 01       	movw	r26, r24
     d98:	cb 01       	movw	r24, r22
	u8_ovf_counter=0;
     d9a:	10 92 69 01 	sts	0x0169, r1
	for (u32_loop=0;u32_loop<u32_delay_in_us;u32_loop++)
     d9e:	00 97       	sbiw	r24, 0x00	; 0
     da0:	a1 05       	cpc	r26, r1
     da2:	b1 05       	cpc	r27, r1
     da4:	31 f0       	breq	.+12     	; 0xdb2 <timer0DelayUs+0x1c>
	{
	timer0Set(240);
     da6:	80 ef       	ldi	r24, 0xF0	; 240
     da8:	0e 94 4e 06 	call	0xc9c	; 0xc9c <timer0Set>
	while(timer0Read()<=255);
     dac:	0e 94 50 06 	call	0xca0	; 0xca0 <timer0Read>
     db0:	fd cf       	rjmp	.-6      	; 0xdac <timer0DelayUs+0x16>
	//while(u32_ovf_counter <= (8*u32_delay_in_us/1000));
	}
	TIFR |=(1<<TOV0);/*Clear the flag*/
     db2:	88 b7       	in	r24, 0x38	; 56
     db4:	81 60       	ori	r24, 0x01	; 1
     db6:	88 bf       	out	0x38, r24	; 56
}/*1*/
     db8:	08 95       	ret

00000dba <timer0SwPWM>:
void timer0SwPWM(uint8_t u8_dutyCycle,uint8_t u8_frequency)
{
     dba:	cf 92       	push	r12
     dbc:	df 92       	push	r13
     dbe:	ef 92       	push	r14
     dc0:	ff 92       	push	r15
     dc2:	cf 93       	push	r28
     dc4:	c8 2f       	mov	r28, r24
float dutyReal;
pwm_time_on=MAX_HOLD;
     dc6:	8f ef       	ldi	r24, 0xFF	; 255
     dc8:	80 93 6b 01 	sts	0x016B, r24
dutyReal=((float)u8_dutyCycle/(float)FULL_SPEED);
pwm_time_on=(float)pwm_time_on*dutyReal;
     dcc:	60 91 6b 01 	lds	r22, 0x016B
     dd0:	70 e0       	ldi	r23, 0x00	; 0
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__floatunsisf>
     dda:	6b 01       	movw	r12, r22
     ddc:	7c 01       	movw	r14, r24
}/*1*/
void timer0SwPWM(uint8_t u8_dutyCycle,uint8_t u8_frequency)
{
float dutyReal;
pwm_time_on=MAX_HOLD;
dutyReal=((float)u8_dutyCycle/(float)FULL_SPEED);
     dde:	6c 2f       	mov	r22, r28
     de0:	70 e0       	ldi	r23, 0x00	; 0
     de2:	80 e0       	ldi	r24, 0x00	; 0
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__floatunsisf>
     dea:	20 e0       	ldi	r18, 0x00	; 0
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	48 ec       	ldi	r20, 0xC8	; 200
     df0:	52 e4       	ldi	r21, 0x42	; 66
     df2:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <__divsf3>
     df6:	9b 01       	movw	r18, r22
     df8:	ac 01       	movw	r20, r24
pwm_time_on=(float)pwm_time_on*dutyReal;
     dfa:	c7 01       	movw	r24, r14
     dfc:	b6 01       	movw	r22, r12
     dfe:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <__mulsf3>
     e02:	0e 94 77 0e 	call	0x1cee	; 0x1cee <__fixunssfsi>
     e06:	60 93 6b 01 	sts	0x016B, r22
switch(pooling)
     e0a:	80 91 6d 01 	lds	r24, 0x016D
     e0e:	88 23       	and	r24, r24
     e10:	19 f0       	breq	.+6      	; 0xe18 <timer0SwPWM+0x5e>
     e12:	81 30       	cpi	r24, 0x01	; 1
     e14:	29 f5       	brne	.+74     	; 0xe60 <timer0SwPWM+0xa6>
     e16:	1f c0       	rjmp	.+62     	; 0xe56 <timer0SwPWM+0x9c>
{
	case 0:
	{
	timer0Start();
     e18:	0e 94 52 06 	call	0xca4	; 0xca4 <timer0Start>
	timer0Set(pwm_time_on);
     e1c:	80 91 6b 01 	lds	r24, 0x016B
     e20:	0e 94 4e 06 	call	0xc9c	; 0xc9c <timer0Set>
	//freq 50KHZ is the Max frequency possible
	while ((TIFR&0x01)==0);
     e24:	08 b6       	in	r0, 0x38	; 56
     e26:	00 fe       	sbrs	r0, 0
     e28:	fd cf       	rjmp	.-6      	; 0xe24 <timer0SwPWM+0x6a>
	TIFR |=0x01;
     e2a:	88 b7       	in	r24, 0x38	; 56
     e2c:	81 60       	ori	r24, 0x01	; 1
     e2e:	88 bf       	out	0x38, r24	; 56
	PORTC_DATA |=0xff;
     e30:	85 b3       	in	r24, 0x15	; 21
     e32:	8f ef       	ldi	r24, 0xFF	; 255
     e34:	85 bb       	out	0x15, r24	; 21
	timer0Start();
     e36:	0e 94 52 06 	call	0xca4	; 0xca4 <timer0Start>
	timer0Set(MAX_HOLD-pwm_time_on);
     e3a:	80 91 6b 01 	lds	r24, 0x016B
     e3e:	80 95       	com	r24
     e40:	0e 94 4e 06 	call	0xc9c	; 0xc9c <timer0Set>
	//freq
	while ((TIFR & 0x01)==0);
     e44:	08 b6       	in	r0, 0x38	; 56
     e46:	00 fe       	sbrs	r0, 0
     e48:	fd cf       	rjmp	.-6      	; 0xe44 <timer0SwPWM+0x8a>
	TIFR |=0x01;
     e4a:	88 b7       	in	r24, 0x38	; 56
     e4c:	81 60       	ori	r24, 0x01	; 1
     e4e:	88 bf       	out	0x38, r24	; 56
	PORTC_DATA &=0x00;
     e50:	85 b3       	in	r24, 0x15	; 21
     e52:	15 ba       	out	0x15, r1	; 21

break;
     e54:	05 c0       	rjmp	.+10     	; 0xe60 <timer0SwPWM+0xa6>
}
case 1:
{
timer0Start();
     e56:	0e 94 52 06 	call	0xca4	; 0xca4 <timer0Start>
OCR0=pwm_time_on;
     e5a:	80 91 6b 01 	lds	r24, 0x016B
     e5e:	8c bf       	out	0x3c, r24	; 60
break;
}

}

}
     e60:	cf 91       	pop	r28
     e62:	ff 90       	pop	r15
     e64:	ef 90       	pop	r14
     e66:	df 90       	pop	r13
     e68:	cf 90       	pop	r12
     e6a:	08 95       	ret

00000e6c <timer0MakePulse>:

void timer0MakePulse(void)
{
     e6c:	ef 92       	push	r14
     e6e:	0f 93       	push	r16
timer0Init(T0_NORMAL_MODE,T0_OC0_DIS,T0_PRESCALER_NO,0,0,T0_POLLING);
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	60 e0       	ldi	r22, 0x00	; 0
     e74:	41 e0       	ldi	r20, 0x01	; 1
     e76:	20 e0       	ldi	r18, 0x00	; 0
     e78:	00 e0       	ldi	r16, 0x00	; 0
     e7a:	ee 24       	eor	r14, r14
     e7c:	0e 94 5f 06 	call	0xcbe	; 0xcbe <timer0Init>
timer0SwPWM(80,0);//triger
     e80:	80 e5       	ldi	r24, 0x50	; 80
     e82:	60 e0       	ldi	r22, 0x00	; 0
     e84:	0e 94 dd 06 	call	0xdba	; 0xdba <timer0SwPWM>
timer0Init(T0_NORMAL_MODE,T0_OC0_DIS,T0_PRESCALER_NO,0,0,T0_INTERRUPT_NORMAL);
     e88:	80 e0       	ldi	r24, 0x00	; 0
     e8a:	60 e0       	ldi	r22, 0x00	; 0
     e8c:	41 e0       	ldi	r20, 0x01	; 1
     e8e:	20 e0       	ldi	r18, 0x00	; 0
     e90:	ee 24       	eor	r14, r14
     e92:	e3 94       	inc	r14
     e94:	0e 94 5f 06 	call	0xcbe	; 0xcbe <timer0Init>

}
     e98:	0f 91       	pop	r16
     e9a:	ef 90       	pop	r14
     e9c:	08 95       	ret

00000e9e <Timer_interrupt_routine>:
void Timer_interrupt_routine(void)
{/*
	Led_Toggle(LED_3);
	timer0Stop();
*/
u8_ovf_counter++;
     e9e:	80 91 69 01 	lds	r24, 0x0169
     ea2:	8f 5f       	subi	r24, 0xFF	; 255
     ea4:	80 93 69 01 	sts	0x0169, r24
//timer0Read();
//flag +=1;
}
     ea8:	08 95       	ret

00000eaa <Timer_interrupt_COMP_routine>:

void Timer_interrupt_COMP_routine(void)
{
	PORTD_DATA ^=0xff;
     eaa:	82 b3       	in	r24, 0x12	; 18
     eac:	80 95       	com	r24
     eae:	82 bb       	out	0x12, r24	; 18

}
     eb0:	08 95       	ret

00000eb2 <timer1Set>:


 */
void timer1Set(uint16_t u16_value)
{
TCNT1=u16_value;
     eb2:	9d bd       	out	0x2d, r25	; 45
     eb4:	8c bd       	out	0x2c, r24	; 44
}
     eb6:	08 95       	ret

00000eb8 <timer1Read>:
 * Description:
 * @return
 */
uint16_t timer1Read(void)
{
return TCNT1;
     eb8:	8c b5       	in	r24, 0x2c	; 44
     eba:	9d b5       	in	r25, 0x2d	; 45
}
     ebc:	08 95       	ret

00000ebe <timer1Start>:
void timer1Start(void)
{



}
     ebe:	08 95       	ret

00000ec0 <timer1Stop>:
void timer1Stop(void)
{



}
     ec0:	08 95       	ret

00000ec2 <timer1DelayMs>:
 */
void timer1DelayMs(uint16_t u16_delay_in_ms)
{


}
     ec2:	08 95       	ret

00000ec4 <timer1DelayUs>:
 */
void timer1DelayUs(uint32_t u32_delay_in_us)
{


}
     ec4:	08 95       	ret

00000ec6 <timer1SwPWM>:
 */
void timer1SwPWM(uint8_t u8_dutyCycle,uint8_t u8_frequency)
{


}
     ec6:	08 95       	ret

00000ec8 <timer2Set>:
* Description:
* @param value
*/
void timer2Set(uint8_t u8_a_value)
{
TCNT2=u8_a_value;
     ec8:	84 bd       	out	0x24, r24	; 36
}
     eca:	08 95       	ret

00000ecc <timer2Read>:
/**
* Description:
* @return
*/
uint8_t timer2Read(void){
return TCNT2;
     ecc:	84 b5       	in	r24, 0x24	; 36
}
     ece:	08 95       	ret

00000ed0 <timer2Start>:
/**
* Description:
*/
void timer2Start(void)
{
TCCR2 &= 0xf8;
     ed0:	85 b5       	in	r24, 0x25	; 37
     ed2:	88 7f       	andi	r24, 0xF8	; 248
     ed4:	85 bd       	out	0x25, r24	; 37
TCCR2 |= Prescaler_Value2;
     ed6:	95 b5       	in	r25, 0x25	; 37
     ed8:	80 91 6c 01 	lds	r24, 0x016C
     edc:	89 2b       	or	r24, r25
     ede:	85 bd       	out	0x25, r24	; 37
}
     ee0:	08 95       	ret

00000ee2 <timer2Stop>:
/**
* Description:
*/
void timer2Stop(void)
{
TCCR2 &= 0xf8;
     ee2:	85 b5       	in	r24, 0x25	; 37
     ee4:	88 7f       	andi	r24, 0xF8	; 248
     ee6:	85 bd       	out	0x25, r24	; 37

}
     ee8:	08 95       	ret

00000eea <timer2Init>:


}

void timer2Init(En_timer2Mode_t en_mode,En_timer2OC_t en_OC,En_timer2perscaler_t en_prescal, uint8_t u8_initialValue, uint8_t u8_outputCompare, uint8_t u8_assynchronous, En_timer2Interrupt_t en_interruptMask)
{
     eea:	cf 92       	push	r12
     eec:	0f 93       	push	r16
if(en_prescal == T0_NO_CLOCK)
     eee:	44 23       	and	r20, r20
     ef0:	19 f4       	brne	.+6      	; 0xef8 <timer2Init+0xe>
{/*
if there is no clock the timer will be disabled
*/
timer2Stop();
     ef2:	0e 94 71 07 	call	0xee2	; 0xee2 <timer2Stop>
     ef6:	3e c0       	rjmp	.+124    	; 0xf74 <timer2Init+0x8a>
}
else
{
TCCR2 |= en_mode|en_prescal ;
     ef8:	95 b5       	in	r25, 0x25	; 37
     efa:	89 2b       	or	r24, r25
     efc:	84 2b       	or	r24, r20
     efe:	85 bd       	out	0x25, r24	; 37
Prescaler_Value2=en_prescal;
     f00:	40 93 6c 01 	sts	0x016C, r20
TCNT2 = u8_initialValue;
     f04:	24 bd       	out	0x24, r18	; 36
switch(en_OC){
     f06:	60 31       	cpi	r22, 0x10	; 16
     f08:	71 f0       	breq	.+28     	; 0xf26 <timer2Init+0x3c>
     f0a:	61 31       	cpi	r22, 0x11	; 17
     f0c:	18 f4       	brcc	.+6      	; 0xf14 <timer2Init+0x2a>
     f0e:	66 23       	and	r22, r22
     f10:	31 f0       	breq	.+12     	; 0xf1e <timer2Init+0x34>
     f12:	14 c0       	rjmp	.+40     	; 0xf3c <timer2Init+0x52>
     f14:	60 32       	cpi	r22, 0x20	; 32
     f16:	59 f0       	breq	.+22     	; 0xf2e <timer2Init+0x44>
     f18:	60 33       	cpi	r22, 0x30	; 48
     f1a:	81 f4       	brne	.+32     	; 0xf3c <timer2Init+0x52>
     f1c:	0c c0       	rjmp	.+24     	; 0xf36 <timer2Init+0x4c>
	case  T2_OC2_DIS:
	{
	TCCR2 &= 0xCF;
     f1e:	85 b5       	in	r24, 0x25	; 37
     f20:	8f 7c       	andi	r24, 0xCF	; 207
     f22:	85 bd       	out	0x25, r24	; 37
		break;
     f24:	0b c0       	rjmp	.+22     	; 0xf3c <timer2Init+0x52>
	}
	case T2_OC2_TOGGLE:
	{
		TCCR2 |=T2_OC2_TOGGLE;
     f26:	85 b5       	in	r24, 0x25	; 37
     f28:	80 61       	ori	r24, 0x10	; 16
     f2a:	85 bd       	out	0x25, r24	; 37
		break;
     f2c:	07 c0       	rjmp	.+14     	; 0xf3c <timer2Init+0x52>
	}
	case  T2_OC2_CLEAR:
	{
	TCCR2 |= T2_OC2_CLEAR;
     f2e:	85 b5       	in	r24, 0x25	; 37
     f30:	80 62       	ori	r24, 0x20	; 32
     f32:	85 bd       	out	0x25, r24	; 37

		break;
     f34:	03 c0       	rjmp	.+6      	; 0xf3c <timer2Init+0x52>
	}
	case T2_OC2_SET:
	{
		TCCR2 |=T2_OC2_SET;
     f36:	85 b5       	in	r24, 0x25	; 37
     f38:	80 63       	ori	r24, 0x30	; 48
     f3a:	85 bd       	out	0x25, r24	; 37
		break;
	}

}
OCR2  =u8_outputCompare;
     f3c:	03 bd       	out	0x23, r16	; 35
switch(en_interruptMask){
     f3e:	80 e4       	ldi	r24, 0x40	; 64
     f40:	c8 16       	cp	r12, r24
     f42:	51 f0       	breq	.+20     	; 0xf58 <timer2Init+0x6e>
     f44:	80 e8       	ldi	r24, 0x80	; 128
     f46:	c8 16       	cp	r12, r24
     f48:	69 f0       	breq	.+26     	; 0xf64 <timer2Init+0x7a>
     f4a:	cc 20       	and	r12, r12
     f4c:	99 f4       	brne	.+38     	; 0xf74 <timer2Init+0x8a>
case  T2_POLLING:
G_interrupt_Disable();
     f4e:	0e 94 55 01 	call	0x2aa	; 0x2aa <G_interrupt_Disable>
TIMSK &= T2_POLLING;
     f52:	89 b7       	in	r24, 0x39	; 57
     f54:	19 be       	out	0x39, r1	; 57
break;
     f56:	0e c0       	rjmp	.+28     	; 0xf74 <timer2Init+0x8a>
case T2_INTERRUPT_NORMAL :
{
G_interrupt_Enable();
     f58:	0e 94 45 01 	call	0x28a	; 0x28a <G_interrupt_Enable>
TIMSK |= T2_INTERRUPT_NORMAL;
     f5c:	89 b7       	in	r24, 0x39	; 57
     f5e:	80 64       	ori	r24, 0x40	; 64
     f60:	89 bf       	out	0x39, r24	; 57
break;
     f62:	08 c0       	rjmp	.+16     	; 0xf74 <timer2Init+0x8a>
}
case T2_INTERRUPT_CMP:
{
G_interrupt_Enable();
     f64:	0e 94 45 01 	call	0x28a	; 0x28a <G_interrupt_Enable>
//SET_BIT(SREG,7);
TIMSK |=T2_INTERRUPT_NORMAL;
     f68:	89 b7       	in	r24, 0x39	; 57
     f6a:	80 64       	ori	r24, 0x40	; 64
     f6c:	89 bf       	out	0x39, r24	; 57
TIMSK |=T2_INTERRUPT_CMP;
     f6e:	89 b7       	in	r24, 0x39	; 57
     f70:	80 68       	ori	r24, 0x80	; 128
     f72:	89 bf       	out	0x39, r24	; 57

}



}
     f74:	0f 91       	pop	r16
     f76:	cf 90       	pop	r12
     f78:	08 95       	ret

00000f7a <timer2DelayMs>:
* Description:
* @param delay
*/
void timer2DelayMs(uint16_t u16_delay_in_ms)
{
while(u16_delay_in_ms > 0)
     f7a:	00 97       	sbiw	r24, 0x00	; 0
     f7c:	41 f0       	breq	.+16     	; 0xf8e <timer2DelayMs+0x14>
{
while ((TIFR & 0x40)==0);
     f7e:	08 b6       	in	r0, 0x38	; 56
     f80:	06 fe       	sbrs	r0, 6
     f82:	fd cf       	rjmp	.-6      	; 0xf7e <timer2DelayMs+0x4>
TIFR |=0x40;
     f84:	28 b7       	in	r18, 0x38	; 56
     f86:	20 64       	ori	r18, 0x40	; 64
     f88:	28 bf       	out	0x38, r18	; 56
u16_delay_in_ms--;
     f8a:	01 97       	sbiw	r24, 0x01	; 1
* Description:
* @param delay
*/
void timer2DelayMs(uint16_t u16_delay_in_ms)
{
while(u16_delay_in_ms > 0)
     f8c:	c1 f7       	brne	.-16     	; 0xf7e <timer2DelayMs+0x4>
     f8e:	08 95       	ret

00000f90 <timer2DelayUs>:
*/
void timer2DelayUs(uint32_t u16_delay_in_us)
{


}
     f90:	08 95       	ret

00000f92 <timer2SwPWM>:
*/
void timer2SwPWM(uint8_t u8_dutyCycle,uint8_t u8_frequency)
{


}
     f92:	08 95       	ret

00000f94 <__udivdi3>:
     f94:	a4 e3       	ldi	r26, 0x34	; 52
     f96:	b0 e0       	ldi	r27, 0x00	; 0
     f98:	e0 ed       	ldi	r30, 0xD0	; 208
     f9a:	f7 e0       	ldi	r31, 0x07	; 7
     f9c:	0c 94 d6 0f 	jmp	0x1fac	; 0x1fac <__prologue_saves__+0x2>
     fa0:	29 8b       	std	Y+17, r18	; 0x11
     fa2:	3a 8b       	std	Y+18, r19	; 0x12
     fa4:	4b 8b       	std	Y+19, r20	; 0x13
     fa6:	5c 8b       	std	Y+20, r21	; 0x14
     fa8:	6d 8b       	std	Y+21, r22	; 0x15
     faa:	7e 8b       	std	Y+22, r23	; 0x16
     fac:	8f 8b       	std	Y+23, r24	; 0x17
     fae:	98 8f       	std	Y+24, r25	; 0x18
     fb0:	a9 86       	std	Y+9, r10	; 0x09
     fb2:	ba 86       	std	Y+10, r11	; 0x0a
     fb4:	cb 86       	std	Y+11, r12	; 0x0b
     fb6:	dc 86       	std	Y+12, r13	; 0x0c
     fb8:	ed 86       	std	Y+13, r14	; 0x0d
     fba:	fe 86       	std	Y+14, r15	; 0x0e
     fbc:	0f 87       	std	Y+15, r16	; 0x0f
     fbe:	18 8b       	std	Y+16, r17	; 0x10
     fc0:	89 84       	ldd	r8, Y+9	; 0x09
     fc2:	9a 84       	ldd	r9, Y+10	; 0x0a
     fc4:	ab 84       	ldd	r10, Y+11	; 0x0b
     fc6:	bc 84       	ldd	r11, Y+12	; 0x0c
     fc8:	8d 85       	ldd	r24, Y+13	; 0x0d
     fca:	9e 85       	ldd	r25, Y+14	; 0x0e
     fcc:	af 85       	ldd	r26, Y+15	; 0x0f
     fce:	b8 89       	ldd	r27, Y+16	; 0x10
     fd0:	09 89       	ldd	r16, Y+17	; 0x11
     fd2:	1a 89       	ldd	r17, Y+18	; 0x12
     fd4:	2b 89       	ldd	r18, Y+19	; 0x13
     fd6:	3c 89       	ldd	r19, Y+20	; 0x14
     fd8:	0d a3       	lds	r16, 0x5d
     fda:	1e a3       	lds	r17, 0x5e
     fdc:	2f a3       	lds	r18, 0x5f
     fde:	38 a7       	lds	r19, 0x78
     fe0:	cd 88       	ldd	r12, Y+21	; 0x15
     fe2:	de 88       	ldd	r13, Y+22	; 0x16
     fe4:	ef 88       	ldd	r14, Y+23	; 0x17
     fe6:	f8 8c       	ldd	r15, Y+24	; 0x18
     fe8:	00 97       	sbiw	r24, 0x00	; 0
     fea:	a1 05       	cpc	r26, r1
     fec:	b1 05       	cpc	r27, r1
     fee:	09 f0       	breq	.+2      	; 0xff2 <__udivdi3+0x5e>
     ff0:	b5 c3       	rjmp	.+1898   	; 0x175c <__udivdi3+0x7c8>
     ff2:	c8 14       	cp	r12, r8
     ff4:	d9 04       	cpc	r13, r9
     ff6:	ea 04       	cpc	r14, r10
     ff8:	fb 04       	cpc	r15, r11
     ffa:	08 f0       	brcs	.+2      	; 0xffe <__udivdi3+0x6a>
     ffc:	4d c1       	rjmp	.+666    	; 0x1298 <__udivdi3+0x304>
     ffe:	10 e0       	ldi	r17, 0x00	; 0
    1000:	81 16       	cp	r8, r17
    1002:	10 e0       	ldi	r17, 0x00	; 0
    1004:	91 06       	cpc	r9, r17
    1006:	11 e0       	ldi	r17, 0x01	; 1
    1008:	a1 06       	cpc	r10, r17
    100a:	10 e0       	ldi	r17, 0x00	; 0
    100c:	b1 06       	cpc	r11, r17
    100e:	58 f4       	brcc	.+22     	; 0x1026 <__udivdi3+0x92>
    1010:	2f ef       	ldi	r18, 0xFF	; 255
    1012:	82 16       	cp	r8, r18
    1014:	91 04       	cpc	r9, r1
    1016:	a1 04       	cpc	r10, r1
    1018:	b1 04       	cpc	r11, r1
    101a:	09 f0       	breq	.+2      	; 0x101e <__udivdi3+0x8a>
    101c:	90 f4       	brcc	.+36     	; 0x1042 <__udivdi3+0xae>
    101e:	80 e0       	ldi	r24, 0x00	; 0
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	dc 01       	movw	r26, r24
    1024:	17 c0       	rjmp	.+46     	; 0x1054 <__udivdi3+0xc0>
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	83 16       	cp	r8, r19
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	93 06       	cpc	r9, r19
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	a3 06       	cpc	r10, r19
    1032:	31 e0       	ldi	r19, 0x01	; 1
    1034:	b3 06       	cpc	r11, r19
    1036:	50 f4       	brcc	.+20     	; 0x104c <__udivdi3+0xb8>
    1038:	80 e1       	ldi	r24, 0x10	; 16
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	a0 e0       	ldi	r26, 0x00	; 0
    103e:	b0 e0       	ldi	r27, 0x00	; 0
    1040:	09 c0       	rjmp	.+18     	; 0x1054 <__udivdi3+0xc0>
    1042:	88 e0       	ldi	r24, 0x08	; 8
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	a0 e0       	ldi	r26, 0x00	; 0
    1048:	b0 e0       	ldi	r27, 0x00	; 0
    104a:	04 c0       	rjmp	.+8      	; 0x1054 <__udivdi3+0xc0>
    104c:	88 e1       	ldi	r24, 0x18	; 24
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	a0 e0       	ldi	r26, 0x00	; 0
    1052:	b0 e0       	ldi	r27, 0x00	; 0
    1054:	b5 01       	movw	r22, r10
    1056:	a4 01       	movw	r20, r8
    1058:	08 2e       	mov	r0, r24
    105a:	04 c0       	rjmp	.+8      	; 0x1064 <__udivdi3+0xd0>
    105c:	76 95       	lsr	r23
    105e:	67 95       	ror	r22
    1060:	57 95       	ror	r21
    1062:	47 95       	ror	r20
    1064:	0a 94       	dec	r0
    1066:	d2 f7       	brpl	.-12     	; 0x105c <__udivdi3+0xc8>
    1068:	fa 01       	movw	r30, r20
    106a:	e9 59       	subi	r30, 0x99	; 153
    106c:	ff 4f       	sbci	r31, 0xFF	; 255
    106e:	20 81       	ld	r18, Z
    1070:	40 e2       	ldi	r20, 0x20	; 32
    1072:	50 e0       	ldi	r21, 0x00	; 0
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	48 1b       	sub	r20, r24
    107a:	59 0b       	sbc	r21, r25
    107c:	6a 0b       	sbc	r22, r26
    107e:	7b 0b       	sbc	r23, r27
    1080:	42 1b       	sub	r20, r18
    1082:	51 09       	sbc	r21, r1
    1084:	61 09       	sbc	r22, r1
    1086:	71 09       	sbc	r23, r1
    1088:	41 15       	cp	r20, r1
    108a:	51 05       	cpc	r21, r1
    108c:	61 05       	cpc	r22, r1
    108e:	71 05       	cpc	r23, r1
    1090:	a1 f1       	breq	.+104    	; 0x10fa <__udivdi3+0x166>
    1092:	04 2e       	mov	r0, r20
    1094:	04 c0       	rjmp	.+8      	; 0x109e <__udivdi3+0x10a>
    1096:	88 0c       	add	r8, r8
    1098:	99 1c       	adc	r9, r9
    109a:	aa 1c       	adc	r10, r10
    109c:	bb 1c       	adc	r11, r11
    109e:	0a 94       	dec	r0
    10a0:	d2 f7       	brpl	.-12     	; 0x1096 <__udivdi3+0x102>
    10a2:	97 01       	movw	r18, r14
    10a4:	86 01       	movw	r16, r12
    10a6:	04 2e       	mov	r0, r20
    10a8:	04 c0       	rjmp	.+8      	; 0x10b2 <__udivdi3+0x11e>
    10aa:	00 0f       	add	r16, r16
    10ac:	11 1f       	adc	r17, r17
    10ae:	22 1f       	adc	r18, r18
    10b0:	33 1f       	adc	r19, r19
    10b2:	0a 94       	dec	r0
    10b4:	d2 f7       	brpl	.-12     	; 0x10aa <__udivdi3+0x116>
    10b6:	80 e2       	ldi	r24, 0x20	; 32
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	84 1b       	sub	r24, r20
    10bc:	95 0b       	sbc	r25, r21
    10be:	cd a0       	lds	r28, 0x8d
    10c0:	de a0       	lds	r29, 0x8e
    10c2:	ef a0       	lds	r30, 0x8f
    10c4:	f8 a4       	lds	r31, 0xa8
    10c6:	04 c0       	rjmp	.+8      	; 0x10d0 <__udivdi3+0x13c>
    10c8:	f6 94       	lsr	r15
    10ca:	e7 94       	ror	r14
    10cc:	d7 94       	ror	r13
    10ce:	c7 94       	ror	r12
    10d0:	8a 95       	dec	r24
    10d2:	d2 f7       	brpl	.-12     	; 0x10c8 <__udivdi3+0x134>
    10d4:	c0 2a       	or	r12, r16
    10d6:	d1 2a       	or	r13, r17
    10d8:	e2 2a       	or	r14, r18
    10da:	f3 2a       	or	r15, r19
    10dc:	0d a1       	lds	r16, 0x4d
    10de:	1e a1       	lds	r17, 0x4e
    10e0:	2f a1       	lds	r18, 0x4f
    10e2:	38 a5       	lds	r19, 0x68
    10e4:	04 c0       	rjmp	.+8      	; 0x10ee <__udivdi3+0x15a>
    10e6:	00 0f       	add	r16, r16
    10e8:	11 1f       	adc	r17, r17
    10ea:	22 1f       	adc	r18, r18
    10ec:	33 1f       	adc	r19, r19
    10ee:	4a 95       	dec	r20
    10f0:	d2 f7       	brpl	.-12     	; 0x10e6 <__udivdi3+0x152>
    10f2:	0d a3       	lds	r16, 0x5d
    10f4:	1e a3       	lds	r17, 0x5e
    10f6:	2f a3       	lds	r18, 0x5f
    10f8:	38 a7       	lds	r19, 0x78
    10fa:	25 01       	movw	r4, r10
    10fc:	66 24       	eor	r6, r6
    10fe:	77 24       	eor	r7, r7
    1100:	95 01       	movw	r18, r10
    1102:	84 01       	movw	r16, r8
    1104:	20 70       	andi	r18, 0x00	; 0
    1106:	30 70       	andi	r19, 0x00	; 0
    1108:	09 a3       	lds	r16, 0x59
    110a:	1a a3       	lds	r17, 0x5a
    110c:	2b a3       	lds	r18, 0x5b
    110e:	3c a3       	lds	r19, 0x5c
    1110:	c7 01       	movw	r24, r14
    1112:	b6 01       	movw	r22, r12
    1114:	a3 01       	movw	r20, r6
    1116:	92 01       	movw	r18, r4
    1118:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    111c:	2d 8f       	std	Y+29, r18	; 0x1d
    111e:	3e 8f       	std	Y+30, r19	; 0x1e
    1120:	4f 8f       	std	Y+31, r20	; 0x1f
    1122:	58 a3       	lds	r21, 0x58
    1124:	69 8f       	std	Y+25, r22	; 0x19
    1126:	7a 8f       	std	Y+26, r23	; 0x1a
    1128:	8b 8f       	std	Y+27, r24	; 0x1b
    112a:	9c 8f       	std	Y+28, r25	; 0x1c
    112c:	c7 01       	movw	r24, r14
    112e:	b6 01       	movw	r22, r12
    1130:	a3 01       	movw	r20, r6
    1132:	92 01       	movw	r18, r4
    1134:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    1138:	ca 01       	movw	r24, r20
    113a:	b9 01       	movw	r22, r18
    113c:	29 a1       	lds	r18, 0x49
    113e:	3a a1       	lds	r19, 0x4a
    1140:	4b a1       	lds	r20, 0x4b
    1142:	5c a1       	lds	r21, 0x4c
    1144:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    1148:	ab 01       	movw	r20, r22
    114a:	bc 01       	movw	r22, r24
    114c:	09 8d       	ldd	r16, Y+25	; 0x19
    114e:	1a 8d       	ldd	r17, Y+26	; 0x1a
    1150:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1152:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1154:	78 01       	movw	r14, r16
    1156:	dd 24       	eor	r13, r13
    1158:	cc 24       	eor	r12, r12
    115a:	0d a1       	lds	r16, 0x4d
    115c:	1e a1       	lds	r17, 0x4e
    115e:	2f a1       	lds	r18, 0x4f
    1160:	38 a5       	lds	r19, 0x68
    1162:	c9 01       	movw	r24, r18
    1164:	aa 27       	eor	r26, r26
    1166:	bb 27       	eor	r27, r27
    1168:	c8 2a       	or	r12, r24
    116a:	d9 2a       	or	r13, r25
    116c:	ea 2a       	or	r14, r26
    116e:	fb 2a       	or	r15, r27
    1170:	0d 8d       	ldd	r16, Y+29	; 0x1d
    1172:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1174:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1176:	38 a1       	lds	r19, 0x48
    1178:	c4 16       	cp	r12, r20
    117a:	d5 06       	cpc	r13, r21
    117c:	e6 06       	cpc	r14, r22
    117e:	f7 06       	cpc	r15, r23
    1180:	38 f5       	brcc	.+78     	; 0x11d0 <__udivdi3+0x23c>
    1182:	01 50       	subi	r16, 0x01	; 1
    1184:	10 40       	sbci	r17, 0x00	; 0
    1186:	20 40       	sbci	r18, 0x00	; 0
    1188:	30 40       	sbci	r19, 0x00	; 0
    118a:	09 8f       	std	Y+25, r16	; 0x19
    118c:	1a 8f       	std	Y+26, r17	; 0x1a
    118e:	2b 8f       	std	Y+27, r18	; 0x1b
    1190:	3c 8f       	std	Y+28, r19	; 0x1c
    1192:	c8 0c       	add	r12, r8
    1194:	d9 1c       	adc	r13, r9
    1196:	ea 1c       	adc	r14, r10
    1198:	fb 1c       	adc	r15, r11
    119a:	c8 14       	cp	r12, r8
    119c:	d9 04       	cpc	r13, r9
    119e:	ea 04       	cpc	r14, r10
    11a0:	fb 04       	cpc	r15, r11
    11a2:	d0 f0       	brcs	.+52     	; 0x11d8 <__udivdi3+0x244>
    11a4:	c4 16       	cp	r12, r20
    11a6:	d5 06       	cpc	r13, r21
    11a8:	e6 06       	cpc	r14, r22
    11aa:	f7 06       	cpc	r15, r23
    11ac:	a8 f4       	brcc	.+42     	; 0x11d8 <__udivdi3+0x244>
    11ae:	0d 8d       	ldd	r16, Y+29	; 0x1d
    11b0:	1e 8d       	ldd	r17, Y+30	; 0x1e
    11b2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    11b4:	38 a1       	lds	r19, 0x48
    11b6:	02 50       	subi	r16, 0x02	; 2
    11b8:	10 40       	sbci	r17, 0x00	; 0
    11ba:	20 40       	sbci	r18, 0x00	; 0
    11bc:	30 40       	sbci	r19, 0x00	; 0
    11be:	09 8f       	std	Y+25, r16	; 0x19
    11c0:	1a 8f       	std	Y+26, r17	; 0x1a
    11c2:	2b 8f       	std	Y+27, r18	; 0x1b
    11c4:	3c 8f       	std	Y+28, r19	; 0x1c
    11c6:	c8 0c       	add	r12, r8
    11c8:	d9 1c       	adc	r13, r9
    11ca:	ea 1c       	adc	r14, r10
    11cc:	fb 1c       	adc	r15, r11
    11ce:	04 c0       	rjmp	.+8      	; 0x11d8 <__udivdi3+0x244>
    11d0:	09 8f       	std	Y+25, r16	; 0x19
    11d2:	1a 8f       	std	Y+26, r17	; 0x1a
    11d4:	2b 8f       	std	Y+27, r18	; 0x1b
    11d6:	3c 8f       	std	Y+28, r19	; 0x1c
    11d8:	c4 1a       	sub	r12, r20
    11da:	d5 0a       	sbc	r13, r21
    11dc:	e6 0a       	sbc	r14, r22
    11de:	f7 0a       	sbc	r15, r23
    11e0:	c7 01       	movw	r24, r14
    11e2:	b6 01       	movw	r22, r12
    11e4:	a3 01       	movw	r20, r6
    11e6:	92 01       	movw	r18, r4
    11e8:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    11ec:	2d 8f       	std	Y+29, r18	; 0x1d
    11ee:	3e 8f       	std	Y+30, r19	; 0x1e
    11f0:	4f 8f       	std	Y+31, r20	; 0x1f
    11f2:	58 a3       	lds	r21, 0x58
    11f4:	69 a7       	lds	r22, 0x79
    11f6:	7a a7       	lds	r23, 0x7a
    11f8:	8b a7       	lds	r24, 0x7b
    11fa:	9c a7       	lds	r25, 0x7c
    11fc:	c7 01       	movw	r24, r14
    11fe:	b6 01       	movw	r22, r12
    1200:	a3 01       	movw	r20, r6
    1202:	92 01       	movw	r18, r4
    1204:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    1208:	ca 01       	movw	r24, r20
    120a:	b9 01       	movw	r22, r18
    120c:	29 a1       	lds	r18, 0x49
    120e:	3a a1       	lds	r19, 0x4a
    1210:	4b a1       	lds	r20, 0x4b
    1212:	5c a1       	lds	r21, 0x4c
    1214:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    1218:	6b 01       	movw	r12, r22
    121a:	7c 01       	movw	r14, r24
    121c:	49 a5       	lds	r20, 0x69
    121e:	5a a5       	lds	r21, 0x6a
    1220:	6b a5       	lds	r22, 0x6b
    1222:	7c a5       	lds	r23, 0x6c
    1224:	9a 01       	movw	r18, r20
    1226:	11 27       	eor	r17, r17
    1228:	00 27       	eor	r16, r16
    122a:	4d a1       	lds	r20, 0x4d
    122c:	5e a1       	lds	r21, 0x4e
    122e:	6f a1       	lds	r22, 0x4f
    1230:	78 a5       	lds	r23, 0x68
    1232:	60 70       	andi	r22, 0x00	; 0
    1234:	70 70       	andi	r23, 0x00	; 0
    1236:	04 2b       	or	r16, r20
    1238:	15 2b       	or	r17, r21
    123a:	26 2b       	or	r18, r22
    123c:	37 2b       	or	r19, r23
    123e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1240:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1242:	af 8d       	ldd	r26, Y+31	; 0x1f
    1244:	b8 a1       	lds	r27, 0x48
    1246:	0c 15       	cp	r16, r12
    1248:	1d 05       	cpc	r17, r13
    124a:	2e 05       	cpc	r18, r14
    124c:	3f 05       	cpc	r19, r15
    124e:	c0 f4       	brcc	.+48     	; 0x1280 <__udivdi3+0x2ec>
    1250:	01 97       	sbiw	r24, 0x01	; 1
    1252:	a1 09       	sbc	r26, r1
    1254:	b1 09       	sbc	r27, r1
    1256:	08 0d       	add	r16, r8
    1258:	19 1d       	adc	r17, r9
    125a:	2a 1d       	adc	r18, r10
    125c:	3b 1d       	adc	r19, r11
    125e:	08 15       	cp	r16, r8
    1260:	19 05       	cpc	r17, r9
    1262:	2a 05       	cpc	r18, r10
    1264:	3b 05       	cpc	r19, r11
    1266:	60 f0       	brcs	.+24     	; 0x1280 <__udivdi3+0x2ec>
    1268:	0c 15       	cp	r16, r12
    126a:	1d 05       	cpc	r17, r13
    126c:	2e 05       	cpc	r18, r14
    126e:	3f 05       	cpc	r19, r15
    1270:	38 f4       	brcc	.+14     	; 0x1280 <__udivdi3+0x2ec>
    1272:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1274:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1276:	af 8d       	ldd	r26, Y+31	; 0x1f
    1278:	b8 a1       	lds	r27, 0x48
    127a:	02 97       	sbiw	r24, 0x02	; 2
    127c:	a1 09       	sbc	r26, r1
    127e:	b1 09       	sbc	r27, r1
    1280:	09 8d       	ldd	r16, Y+25	; 0x19
    1282:	1a 8d       	ldd	r17, Y+26	; 0x1a
    1284:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1286:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1288:	78 01       	movw	r14, r16
    128a:	dd 24       	eor	r13, r13
    128c:	cc 24       	eor	r12, r12
    128e:	c8 2a       	or	r12, r24
    1290:	d9 2a       	or	r13, r25
    1292:	ea 2a       	or	r14, r26
    1294:	fb 2a       	or	r15, r27
    1296:	a5 c4       	rjmp	.+2378   	; 0x1be2 <__udivdi3+0xc4e>
    1298:	81 14       	cp	r8, r1
    129a:	91 04       	cpc	r9, r1
    129c:	a1 04       	cpc	r10, r1
    129e:	b1 04       	cpc	r11, r1
    12a0:	51 f4       	brne	.+20     	; 0x12b6 <__udivdi3+0x322>
    12a2:	61 e0       	ldi	r22, 0x01	; 1
    12a4:	70 e0       	ldi	r23, 0x00	; 0
    12a6:	80 e0       	ldi	r24, 0x00	; 0
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	a5 01       	movw	r20, r10
    12ac:	94 01       	movw	r18, r8
    12ae:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    12b2:	49 01       	movw	r8, r18
    12b4:	5a 01       	movw	r10, r20
    12b6:	10 e0       	ldi	r17, 0x00	; 0
    12b8:	81 16       	cp	r8, r17
    12ba:	10 e0       	ldi	r17, 0x00	; 0
    12bc:	91 06       	cpc	r9, r17
    12be:	11 e0       	ldi	r17, 0x01	; 1
    12c0:	a1 06       	cpc	r10, r17
    12c2:	10 e0       	ldi	r17, 0x00	; 0
    12c4:	b1 06       	cpc	r11, r17
    12c6:	58 f4       	brcc	.+22     	; 0x12de <__udivdi3+0x34a>
    12c8:	2f ef       	ldi	r18, 0xFF	; 255
    12ca:	82 16       	cp	r8, r18
    12cc:	91 04       	cpc	r9, r1
    12ce:	a1 04       	cpc	r10, r1
    12d0:	b1 04       	cpc	r11, r1
    12d2:	09 f0       	breq	.+2      	; 0x12d6 <__udivdi3+0x342>
    12d4:	90 f4       	brcc	.+36     	; 0x12fa <__udivdi3+0x366>
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	dc 01       	movw	r26, r24
    12dc:	17 c0       	rjmp	.+46     	; 0x130c <__udivdi3+0x378>
    12de:	30 e0       	ldi	r19, 0x00	; 0
    12e0:	83 16       	cp	r8, r19
    12e2:	30 e0       	ldi	r19, 0x00	; 0
    12e4:	93 06       	cpc	r9, r19
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	a3 06       	cpc	r10, r19
    12ea:	31 e0       	ldi	r19, 0x01	; 1
    12ec:	b3 06       	cpc	r11, r19
    12ee:	50 f4       	brcc	.+20     	; 0x1304 <__udivdi3+0x370>
    12f0:	80 e1       	ldi	r24, 0x10	; 16
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	a0 e0       	ldi	r26, 0x00	; 0
    12f6:	b0 e0       	ldi	r27, 0x00	; 0
    12f8:	09 c0       	rjmp	.+18     	; 0x130c <__udivdi3+0x378>
    12fa:	88 e0       	ldi	r24, 0x08	; 8
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	a0 e0       	ldi	r26, 0x00	; 0
    1300:	b0 e0       	ldi	r27, 0x00	; 0
    1302:	04 c0       	rjmp	.+8      	; 0x130c <__udivdi3+0x378>
    1304:	88 e1       	ldi	r24, 0x18	; 24
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	a0 e0       	ldi	r26, 0x00	; 0
    130a:	b0 e0       	ldi	r27, 0x00	; 0
    130c:	b5 01       	movw	r22, r10
    130e:	a4 01       	movw	r20, r8
    1310:	08 2e       	mov	r0, r24
    1312:	04 c0       	rjmp	.+8      	; 0x131c <__udivdi3+0x388>
    1314:	76 95       	lsr	r23
    1316:	67 95       	ror	r22
    1318:	57 95       	ror	r21
    131a:	47 95       	ror	r20
    131c:	0a 94       	dec	r0
    131e:	d2 f7       	brpl	.-12     	; 0x1314 <__udivdi3+0x380>
    1320:	fa 01       	movw	r30, r20
    1322:	e9 59       	subi	r30, 0x99	; 153
    1324:	ff 4f       	sbci	r31, 0xFF	; 255
    1326:	20 81       	ld	r18, Z
    1328:	ac 01       	movw	r20, r24
    132a:	bd 01       	movw	r22, r26
    132c:	42 0f       	add	r20, r18
    132e:	51 1d       	adc	r21, r1
    1330:	61 1d       	adc	r22, r1
    1332:	71 1d       	adc	r23, r1
    1334:	80 e2       	ldi	r24, 0x20	; 32
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	a0 e0       	ldi	r26, 0x00	; 0
    133a:	b0 e0       	ldi	r27, 0x00	; 0
    133c:	84 1b       	sub	r24, r20
    133e:	95 0b       	sbc	r25, r21
    1340:	a6 0b       	sbc	r26, r22
    1342:	b7 0b       	sbc	r27, r23
    1344:	51 f4       	brne	.+20     	; 0x135a <__udivdi3+0x3c6>
    1346:	c8 18       	sub	r12, r8
    1348:	d9 08       	sbc	r13, r9
    134a:	ea 08       	sbc	r14, r10
    134c:	fb 08       	sbc	r15, r11
    134e:	f1 e0       	ldi	r31, 0x01	; 1
    1350:	4f 2e       	mov	r4, r31
    1352:	51 2c       	mov	r5, r1
    1354:	61 2c       	mov	r6, r1
    1356:	71 2c       	mov	r7, r1
    1358:	24 c1       	rjmp	.+584    	; 0x15a2 <__udivdi3+0x60e>
    135a:	08 2e       	mov	r0, r24
    135c:	04 c0       	rjmp	.+8      	; 0x1366 <__udivdi3+0x3d2>
    135e:	88 0c       	add	r8, r8
    1360:	99 1c       	adc	r9, r9
    1362:	aa 1c       	adc	r10, r10
    1364:	bb 1c       	adc	r11, r11
    1366:	0a 94       	dec	r0
    1368:	d2 f7       	brpl	.-12     	; 0x135e <__udivdi3+0x3ca>
    136a:	97 01       	movw	r18, r14
    136c:	86 01       	movw	r16, r12
    136e:	04 2e       	mov	r0, r20
    1370:	04 c0       	rjmp	.+8      	; 0x137a <__udivdi3+0x3e6>
    1372:	36 95       	lsr	r19
    1374:	27 95       	ror	r18
    1376:	17 95       	ror	r17
    1378:	07 95       	ror	r16
    137a:	0a 94       	dec	r0
    137c:	d2 f7       	brpl	.-12     	; 0x1372 <__udivdi3+0x3de>
    137e:	09 a3       	lds	r16, 0x59
    1380:	1a a3       	lds	r17, 0x5a
    1382:	2b a3       	lds	r18, 0x5b
    1384:	3c a3       	lds	r19, 0x5c
    1386:	97 01       	movw	r18, r14
    1388:	86 01       	movw	r16, r12
    138a:	08 2e       	mov	r0, r24
    138c:	04 c0       	rjmp	.+8      	; 0x1396 <__udivdi3+0x402>
    138e:	00 0f       	add	r16, r16
    1390:	11 1f       	adc	r17, r17
    1392:	22 1f       	adc	r18, r18
    1394:	33 1f       	adc	r19, r19
    1396:	0a 94       	dec	r0
    1398:	d2 f7       	brpl	.-12     	; 0x138e <__udivdi3+0x3fa>
    139a:	0d 8f       	std	Y+29, r16	; 0x1d
    139c:	1e 8f       	std	Y+30, r17	; 0x1e
    139e:	2f 8f       	std	Y+31, r18	; 0x1f
    13a0:	38 a3       	lds	r19, 0x58
    13a2:	0d a1       	lds	r16, 0x4d
    13a4:	1e a1       	lds	r17, 0x4e
    13a6:	2f a1       	lds	r18, 0x4f
    13a8:	38 a5       	lds	r19, 0x68
    13aa:	04 c0       	rjmp	.+8      	; 0x13b4 <__udivdi3+0x420>
    13ac:	36 95       	lsr	r19
    13ae:	27 95       	ror	r18
    13b0:	17 95       	ror	r17
    13b2:	07 95       	ror	r16
    13b4:	4a 95       	dec	r20
    13b6:	d2 f7       	brpl	.-12     	; 0x13ac <__udivdi3+0x418>
    13b8:	b9 01       	movw	r22, r18
    13ba:	a8 01       	movw	r20, r16
    13bc:	0d 8d       	ldd	r16, Y+29	; 0x1d
    13be:	1e 8d       	ldd	r17, Y+30	; 0x1e
    13c0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    13c2:	38 a1       	lds	r19, 0x48
    13c4:	04 2b       	or	r16, r20
    13c6:	15 2b       	or	r17, r21
    13c8:	26 2b       	or	r18, r22
    13ca:	37 2b       	or	r19, r23
    13cc:	0d 8f       	std	Y+29, r16	; 0x1d
    13ce:	1e 8f       	std	Y+30, r17	; 0x1e
    13d0:	2f 8f       	std	Y+31, r18	; 0x1f
    13d2:	38 a3       	lds	r19, 0x58
    13d4:	0d a1       	lds	r16, 0x4d
    13d6:	1e a1       	lds	r17, 0x4e
    13d8:	2f a1       	lds	r18, 0x4f
    13da:	38 a5       	lds	r19, 0x68
    13dc:	04 c0       	rjmp	.+8      	; 0x13e6 <__udivdi3+0x452>
    13de:	00 0f       	add	r16, r16
    13e0:	11 1f       	adc	r17, r17
    13e2:	22 1f       	adc	r18, r18
    13e4:	33 1f       	adc	r19, r19
    13e6:	8a 95       	dec	r24
    13e8:	d2 f7       	brpl	.-12     	; 0x13de <__udivdi3+0x44a>
    13ea:	0d a3       	lds	r16, 0x5d
    13ec:	1e a3       	lds	r17, 0x5e
    13ee:	2f a3       	lds	r18, 0x5f
    13f0:	38 a7       	lds	r19, 0x78
    13f2:	25 01       	movw	r4, r10
    13f4:	66 24       	eor	r6, r6
    13f6:	77 24       	eor	r7, r7
    13f8:	95 01       	movw	r18, r10
    13fa:	84 01       	movw	r16, r8
    13fc:	20 70       	andi	r18, 0x00	; 0
    13fe:	30 70       	andi	r19, 0x00	; 0
    1400:	09 a7       	lds	r16, 0x79
    1402:	1a a7       	lds	r17, 0x7a
    1404:	2b a7       	lds	r18, 0x7b
    1406:	3c a7       	lds	r19, 0x7c
    1408:	69 a1       	lds	r22, 0x49
    140a:	7a a1       	lds	r23, 0x4a
    140c:	8b a1       	lds	r24, 0x4b
    140e:	9c a1       	lds	r25, 0x4c
    1410:	a3 01       	movw	r20, r6
    1412:	92 01       	movw	r18, r4
    1414:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    1418:	29 8f       	std	Y+25, r18	; 0x19
    141a:	3a 8f       	std	Y+26, r19	; 0x1a
    141c:	4b 8f       	std	Y+27, r20	; 0x1b
    141e:	5c 8f       	std	Y+28, r21	; 0x1c
    1420:	6b 01       	movw	r12, r22
    1422:	7c 01       	movw	r14, r24
    1424:	69 a1       	lds	r22, 0x49
    1426:	7a a1       	lds	r23, 0x4a
    1428:	8b a1       	lds	r24, 0x4b
    142a:	9c a1       	lds	r25, 0x4c
    142c:	a3 01       	movw	r20, r6
    142e:	92 01       	movw	r18, r4
    1430:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    1434:	ca 01       	movw	r24, r20
    1436:	b9 01       	movw	r22, r18
    1438:	29 a5       	lds	r18, 0x69
    143a:	3a a5       	lds	r19, 0x6a
    143c:	4b a5       	lds	r20, 0x6b
    143e:	5c a5       	lds	r21, 0x6c
    1440:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    1444:	ab 01       	movw	r20, r22
    1446:	bc 01       	movw	r22, r24
    1448:	76 01       	movw	r14, r12
    144a:	dd 24       	eor	r13, r13
    144c:	cc 24       	eor	r12, r12
    144e:	0d 8d       	ldd	r16, Y+29	; 0x1d
    1450:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1452:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1454:	38 a1       	lds	r19, 0x48
    1456:	c9 01       	movw	r24, r18
    1458:	aa 27       	eor	r26, r26
    145a:	bb 27       	eor	r27, r27
    145c:	c8 2a       	or	r12, r24
    145e:	d9 2a       	or	r13, r25
    1460:	ea 2a       	or	r14, r26
    1462:	fb 2a       	or	r15, r27
    1464:	09 8d       	ldd	r16, Y+25	; 0x19
    1466:	1a 8d       	ldd	r17, Y+26	; 0x1a
    1468:	2b 8d       	ldd	r18, Y+27	; 0x1b
    146a:	3c 8d       	ldd	r19, Y+28	; 0x1c
    146c:	c4 16       	cp	r12, r20
    146e:	d5 06       	cpc	r13, r21
    1470:	e6 06       	cpc	r14, r22
    1472:	f7 06       	cpc	r15, r23
    1474:	38 f5       	brcc	.+78     	; 0x14c4 <__udivdi3+0x530>
    1476:	01 50       	subi	r16, 0x01	; 1
    1478:	10 40       	sbci	r17, 0x00	; 0
    147a:	20 40       	sbci	r18, 0x00	; 0
    147c:	30 40       	sbci	r19, 0x00	; 0
    147e:	09 a3       	lds	r16, 0x59
    1480:	1a a3       	lds	r17, 0x5a
    1482:	2b a3       	lds	r18, 0x5b
    1484:	3c a3       	lds	r19, 0x5c
    1486:	c8 0c       	add	r12, r8
    1488:	d9 1c       	adc	r13, r9
    148a:	ea 1c       	adc	r14, r10
    148c:	fb 1c       	adc	r15, r11
    148e:	c8 14       	cp	r12, r8
    1490:	d9 04       	cpc	r13, r9
    1492:	ea 04       	cpc	r14, r10
    1494:	fb 04       	cpc	r15, r11
    1496:	d0 f0       	brcs	.+52     	; 0x14cc <__udivdi3+0x538>
    1498:	c4 16       	cp	r12, r20
    149a:	d5 06       	cpc	r13, r21
    149c:	e6 06       	cpc	r14, r22
    149e:	f7 06       	cpc	r15, r23
    14a0:	a8 f4       	brcc	.+42     	; 0x14cc <__udivdi3+0x538>
    14a2:	09 8d       	ldd	r16, Y+25	; 0x19
    14a4:	1a 8d       	ldd	r17, Y+26	; 0x1a
    14a6:	2b 8d       	ldd	r18, Y+27	; 0x1b
    14a8:	3c 8d       	ldd	r19, Y+28	; 0x1c
    14aa:	02 50       	subi	r16, 0x02	; 2
    14ac:	10 40       	sbci	r17, 0x00	; 0
    14ae:	20 40       	sbci	r18, 0x00	; 0
    14b0:	30 40       	sbci	r19, 0x00	; 0
    14b2:	09 a3       	lds	r16, 0x59
    14b4:	1a a3       	lds	r17, 0x5a
    14b6:	2b a3       	lds	r18, 0x5b
    14b8:	3c a3       	lds	r19, 0x5c
    14ba:	c8 0c       	add	r12, r8
    14bc:	d9 1c       	adc	r13, r9
    14be:	ea 1c       	adc	r14, r10
    14c0:	fb 1c       	adc	r15, r11
    14c2:	04 c0       	rjmp	.+8      	; 0x14cc <__udivdi3+0x538>
    14c4:	09 a3       	lds	r16, 0x59
    14c6:	1a a3       	lds	r17, 0x5a
    14c8:	2b a3       	lds	r18, 0x5b
    14ca:	3c a3       	lds	r19, 0x5c
    14cc:	c4 1a       	sub	r12, r20
    14ce:	d5 0a       	sbc	r13, r21
    14d0:	e6 0a       	sbc	r14, r22
    14d2:	f7 0a       	sbc	r15, r23
    14d4:	c7 01       	movw	r24, r14
    14d6:	b6 01       	movw	r22, r12
    14d8:	a3 01       	movw	r20, r6
    14da:	92 01       	movw	r18, r4
    14dc:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    14e0:	29 8f       	std	Y+25, r18	; 0x19
    14e2:	3a 8f       	std	Y+26, r19	; 0x1a
    14e4:	4b 8f       	std	Y+27, r20	; 0x1b
    14e6:	5c 8f       	std	Y+28, r21	; 0x1c
    14e8:	6d a7       	lds	r22, 0x7d
    14ea:	7e a7       	lds	r23, 0x7e
    14ec:	8f a7       	lds	r24, 0x7f
    14ee:	98 ab       	sts	0x58, r25
    14f0:	c7 01       	movw	r24, r14
    14f2:	b6 01       	movw	r22, r12
    14f4:	a3 01       	movw	r20, r6
    14f6:	92 01       	movw	r18, r4
    14f8:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    14fc:	ca 01       	movw	r24, r20
    14fe:	b9 01       	movw	r22, r18
    1500:	29 a5       	lds	r18, 0x69
    1502:	3a a5       	lds	r19, 0x6a
    1504:	4b a5       	lds	r20, 0x6b
    1506:	5c a5       	lds	r21, 0x6c
    1508:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    150c:	8b 01       	movw	r16, r22
    150e:	9c 01       	movw	r18, r24
    1510:	4d a5       	lds	r20, 0x6d
    1512:	5e a5       	lds	r21, 0x6e
    1514:	6f a5       	lds	r22, 0x6f
    1516:	78 a9       	sts	0x48, r23
    1518:	da 01       	movw	r26, r20
    151a:	99 27       	eor	r25, r25
    151c:	88 27       	eor	r24, r24
    151e:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1520:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1522:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1524:	78 a1       	lds	r23, 0x48
    1526:	60 70       	andi	r22, 0x00	; 0
    1528:	70 70       	andi	r23, 0x00	; 0
    152a:	84 2b       	or	r24, r20
    152c:	95 2b       	or	r25, r21
    152e:	a6 2b       	or	r26, r22
    1530:	b7 2b       	or	r27, r23
    1532:	49 8d       	ldd	r20, Y+25	; 0x19
    1534:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1536:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1538:	7c 8d       	ldd	r23, Y+28	; 0x1c
    153a:	80 17       	cp	r24, r16
    153c:	91 07       	cpc	r25, r17
    153e:	a2 07       	cpc	r26, r18
    1540:	b3 07       	cpc	r27, r19
    1542:	f0 f4       	brcc	.+60     	; 0x1580 <__udivdi3+0x5ec>
    1544:	41 50       	subi	r20, 0x01	; 1
    1546:	50 40       	sbci	r21, 0x00	; 0
    1548:	60 40       	sbci	r22, 0x00	; 0
    154a:	70 40       	sbci	r23, 0x00	; 0
    154c:	88 0d       	add	r24, r8
    154e:	99 1d       	adc	r25, r9
    1550:	aa 1d       	adc	r26, r10
    1552:	bb 1d       	adc	r27, r11
    1554:	88 15       	cp	r24, r8
    1556:	99 05       	cpc	r25, r9
    1558:	aa 05       	cpc	r26, r10
    155a:	bb 05       	cpc	r27, r11
    155c:	88 f0       	brcs	.+34     	; 0x1580 <__udivdi3+0x5ec>
    155e:	80 17       	cp	r24, r16
    1560:	91 07       	cpc	r25, r17
    1562:	a2 07       	cpc	r26, r18
    1564:	b3 07       	cpc	r27, r19
    1566:	60 f4       	brcc	.+24     	; 0x1580 <__udivdi3+0x5ec>
    1568:	49 8d       	ldd	r20, Y+25	; 0x19
    156a:	5a 8d       	ldd	r21, Y+26	; 0x1a
    156c:	6b 8d       	ldd	r22, Y+27	; 0x1b
    156e:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1570:	42 50       	subi	r20, 0x02	; 2
    1572:	50 40       	sbci	r21, 0x00	; 0
    1574:	60 40       	sbci	r22, 0x00	; 0
    1576:	70 40       	sbci	r23, 0x00	; 0
    1578:	88 0d       	add	r24, r8
    157a:	99 1d       	adc	r25, r9
    157c:	aa 1d       	adc	r26, r10
    157e:	bb 1d       	adc	r27, r11
    1580:	6c 01       	movw	r12, r24
    1582:	7d 01       	movw	r14, r26
    1584:	c0 1a       	sub	r12, r16
    1586:	d1 0a       	sbc	r13, r17
    1588:	e2 0a       	sbc	r14, r18
    158a:	f3 0a       	sbc	r15, r19
    158c:	09 a1       	lds	r16, 0x49
    158e:	1a a1       	lds	r17, 0x4a
    1590:	2b a1       	lds	r18, 0x4b
    1592:	3c a1       	lds	r19, 0x4c
    1594:	38 01       	movw	r6, r16
    1596:	55 24       	eor	r5, r5
    1598:	44 24       	eor	r4, r4
    159a:	44 2a       	or	r4, r20
    159c:	55 2a       	or	r5, r21
    159e:	66 2a       	or	r6, r22
    15a0:	77 2a       	or	r7, r23
    15a2:	85 01       	movw	r16, r10
    15a4:	22 27       	eor	r18, r18
    15a6:	33 27       	eor	r19, r19
    15a8:	0d 8f       	std	Y+29, r16	; 0x1d
    15aa:	1e 8f       	std	Y+30, r17	; 0x1e
    15ac:	2f 8f       	std	Y+31, r18	; 0x1f
    15ae:	38 a3       	lds	r19, 0x58
    15b0:	95 01       	movw	r18, r10
    15b2:	84 01       	movw	r16, r8
    15b4:	20 70       	andi	r18, 0x00	; 0
    15b6:	30 70       	andi	r19, 0x00	; 0
    15b8:	09 a7       	lds	r16, 0x79
    15ba:	1a a7       	lds	r17, 0x7a
    15bc:	2b a7       	lds	r18, 0x7b
    15be:	3c a7       	lds	r19, 0x7c
    15c0:	c7 01       	movw	r24, r14
    15c2:	b6 01       	movw	r22, r12
    15c4:	2d 8d       	ldd	r18, Y+29	; 0x1d
    15c6:	3e 8d       	ldd	r19, Y+30	; 0x1e
    15c8:	4f 8d       	ldd	r20, Y+31	; 0x1f
    15ca:	58 a1       	lds	r21, 0x48
    15cc:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    15d0:	29 8f       	std	Y+25, r18	; 0x19
    15d2:	3a 8f       	std	Y+26, r19	; 0x1a
    15d4:	4b 8f       	std	Y+27, r20	; 0x1b
    15d6:	5c 8f       	std	Y+28, r21	; 0x1c
    15d8:	69 a3       	lds	r22, 0x59
    15da:	7a a3       	lds	r23, 0x5a
    15dc:	8b a3       	lds	r24, 0x5b
    15de:	9c a3       	lds	r25, 0x5c
    15e0:	c7 01       	movw	r24, r14
    15e2:	b6 01       	movw	r22, r12
    15e4:	2d 8d       	ldd	r18, Y+29	; 0x1d
    15e6:	3e 8d       	ldd	r19, Y+30	; 0x1e
    15e8:	4f 8d       	ldd	r20, Y+31	; 0x1f
    15ea:	58 a1       	lds	r21, 0x48
    15ec:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    15f0:	ca 01       	movw	r24, r20
    15f2:	b9 01       	movw	r22, r18
    15f4:	29 a5       	lds	r18, 0x69
    15f6:	3a a5       	lds	r19, 0x6a
    15f8:	4b a5       	lds	r20, 0x6b
    15fa:	5c a5       	lds	r21, 0x6c
    15fc:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    1600:	ab 01       	movw	r20, r22
    1602:	bc 01       	movw	r22, r24
    1604:	09 a1       	lds	r16, 0x49
    1606:	1a a1       	lds	r17, 0x4a
    1608:	2b a1       	lds	r18, 0x4b
    160a:	3c a1       	lds	r19, 0x4c
    160c:	78 01       	movw	r14, r16
    160e:	dd 24       	eor	r13, r13
    1610:	cc 24       	eor	r12, r12
    1612:	0d a1       	lds	r16, 0x4d
    1614:	1e a1       	lds	r17, 0x4e
    1616:	2f a1       	lds	r18, 0x4f
    1618:	38 a5       	lds	r19, 0x68
    161a:	c9 01       	movw	r24, r18
    161c:	aa 27       	eor	r26, r26
    161e:	bb 27       	eor	r27, r27
    1620:	c8 2a       	or	r12, r24
    1622:	d9 2a       	or	r13, r25
    1624:	ea 2a       	or	r14, r26
    1626:	fb 2a       	or	r15, r27
    1628:	09 8d       	ldd	r16, Y+25	; 0x19
    162a:	1a 8d       	ldd	r17, Y+26	; 0x1a
    162c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    162e:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1630:	c4 16       	cp	r12, r20
    1632:	d5 06       	cpc	r13, r21
    1634:	e6 06       	cpc	r14, r22
    1636:	f7 06       	cpc	r15, r23
    1638:	38 f5       	brcc	.+78     	; 0x1688 <__udivdi3+0x6f4>
    163a:	01 50       	subi	r16, 0x01	; 1
    163c:	10 40       	sbci	r17, 0x00	; 0
    163e:	20 40       	sbci	r18, 0x00	; 0
    1640:	30 40       	sbci	r19, 0x00	; 0
    1642:	09 a3       	lds	r16, 0x59
    1644:	1a a3       	lds	r17, 0x5a
    1646:	2b a3       	lds	r18, 0x5b
    1648:	3c a3       	lds	r19, 0x5c
    164a:	c8 0c       	add	r12, r8
    164c:	d9 1c       	adc	r13, r9
    164e:	ea 1c       	adc	r14, r10
    1650:	fb 1c       	adc	r15, r11
    1652:	c8 14       	cp	r12, r8
    1654:	d9 04       	cpc	r13, r9
    1656:	ea 04       	cpc	r14, r10
    1658:	fb 04       	cpc	r15, r11
    165a:	d0 f0       	brcs	.+52     	; 0x1690 <__udivdi3+0x6fc>
    165c:	c4 16       	cp	r12, r20
    165e:	d5 06       	cpc	r13, r21
    1660:	e6 06       	cpc	r14, r22
    1662:	f7 06       	cpc	r15, r23
    1664:	a8 f4       	brcc	.+42     	; 0x1690 <__udivdi3+0x6fc>
    1666:	09 8d       	ldd	r16, Y+25	; 0x19
    1668:	1a 8d       	ldd	r17, Y+26	; 0x1a
    166a:	2b 8d       	ldd	r18, Y+27	; 0x1b
    166c:	3c 8d       	ldd	r19, Y+28	; 0x1c
    166e:	02 50       	subi	r16, 0x02	; 2
    1670:	10 40       	sbci	r17, 0x00	; 0
    1672:	20 40       	sbci	r18, 0x00	; 0
    1674:	30 40       	sbci	r19, 0x00	; 0
    1676:	09 a3       	lds	r16, 0x59
    1678:	1a a3       	lds	r17, 0x5a
    167a:	2b a3       	lds	r18, 0x5b
    167c:	3c a3       	lds	r19, 0x5c
    167e:	c8 0c       	add	r12, r8
    1680:	d9 1c       	adc	r13, r9
    1682:	ea 1c       	adc	r14, r10
    1684:	fb 1c       	adc	r15, r11
    1686:	04 c0       	rjmp	.+8      	; 0x1690 <__udivdi3+0x6fc>
    1688:	09 a3       	lds	r16, 0x59
    168a:	1a a3       	lds	r17, 0x5a
    168c:	2b a3       	lds	r18, 0x5b
    168e:	3c a3       	lds	r19, 0x5c
    1690:	c4 1a       	sub	r12, r20
    1692:	d5 0a       	sbc	r13, r21
    1694:	e6 0a       	sbc	r14, r22
    1696:	f7 0a       	sbc	r15, r23
    1698:	c7 01       	movw	r24, r14
    169a:	b6 01       	movw	r22, r12
    169c:	2d 8d       	ldd	r18, Y+29	; 0x1d
    169e:	3e 8d       	ldd	r19, Y+30	; 0x1e
    16a0:	4f 8d       	ldd	r20, Y+31	; 0x1f
    16a2:	58 a1       	lds	r21, 0x48
    16a4:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    16a8:	29 8f       	std	Y+25, r18	; 0x19
    16aa:	3a 8f       	std	Y+26, r19	; 0x1a
    16ac:	4b 8f       	std	Y+27, r20	; 0x1b
    16ae:	5c 8f       	std	Y+28, r21	; 0x1c
    16b0:	6d a7       	lds	r22, 0x7d
    16b2:	7e a7       	lds	r23, 0x7e
    16b4:	8f a7       	lds	r24, 0x7f
    16b6:	98 ab       	sts	0x58, r25
    16b8:	c7 01       	movw	r24, r14
    16ba:	b6 01       	movw	r22, r12
    16bc:	2d 8d       	ldd	r18, Y+29	; 0x1d
    16be:	3e 8d       	ldd	r19, Y+30	; 0x1e
    16c0:	4f 8d       	ldd	r20, Y+31	; 0x1f
    16c2:	58 a1       	lds	r21, 0x48
    16c4:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    16c8:	ca 01       	movw	r24, r20
    16ca:	b9 01       	movw	r22, r18
    16cc:	29 a5       	lds	r18, 0x69
    16ce:	3a a5       	lds	r19, 0x6a
    16d0:	4b a5       	lds	r20, 0x6b
    16d2:	5c a5       	lds	r21, 0x6c
    16d4:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    16d8:	8b 01       	movw	r16, r22
    16da:	9c 01       	movw	r18, r24
    16dc:	4d a5       	lds	r20, 0x6d
    16de:	5e a5       	lds	r21, 0x6e
    16e0:	6f a5       	lds	r22, 0x6f
    16e2:	78 a9       	sts	0x48, r23
    16e4:	da 01       	movw	r26, r20
    16e6:	99 27       	eor	r25, r25
    16e8:	88 27       	eor	r24, r24
    16ea:	4d a1       	lds	r20, 0x4d
    16ec:	5e a1       	lds	r21, 0x4e
    16ee:	6f a1       	lds	r22, 0x4f
    16f0:	78 a5       	lds	r23, 0x68
    16f2:	60 70       	andi	r22, 0x00	; 0
    16f4:	70 70       	andi	r23, 0x00	; 0
    16f6:	84 2b       	or	r24, r20
    16f8:	95 2b       	or	r25, r21
    16fa:	a6 2b       	or	r26, r22
    16fc:	b7 2b       	or	r27, r23
    16fe:	49 8d       	ldd	r20, Y+25	; 0x19
    1700:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1702:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1704:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1706:	80 17       	cp	r24, r16
    1708:	91 07       	cpc	r25, r17
    170a:	a2 07       	cpc	r26, r18
    170c:	b3 07       	cpc	r27, r19
    170e:	d0 f4       	brcc	.+52     	; 0x1744 <__udivdi3+0x7b0>
    1710:	41 50       	subi	r20, 0x01	; 1
    1712:	50 40       	sbci	r21, 0x00	; 0
    1714:	60 40       	sbci	r22, 0x00	; 0
    1716:	70 40       	sbci	r23, 0x00	; 0
    1718:	88 0d       	add	r24, r8
    171a:	99 1d       	adc	r25, r9
    171c:	aa 1d       	adc	r26, r10
    171e:	bb 1d       	adc	r27, r11
    1720:	88 15       	cp	r24, r8
    1722:	99 05       	cpc	r25, r9
    1724:	aa 05       	cpc	r26, r10
    1726:	bb 05       	cpc	r27, r11
    1728:	68 f0       	brcs	.+26     	; 0x1744 <__udivdi3+0x7b0>
    172a:	80 17       	cp	r24, r16
    172c:	91 07       	cpc	r25, r17
    172e:	a2 07       	cpc	r26, r18
    1730:	b3 07       	cpc	r27, r19
    1732:	40 f4       	brcc	.+16     	; 0x1744 <__udivdi3+0x7b0>
    1734:	49 8d       	ldd	r20, Y+25	; 0x19
    1736:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1738:	6b 8d       	ldd	r22, Y+27	; 0x1b
    173a:	7c 8d       	ldd	r23, Y+28	; 0x1c
    173c:	42 50       	subi	r20, 0x02	; 2
    173e:	50 40       	sbci	r21, 0x00	; 0
    1740:	60 40       	sbci	r22, 0x00	; 0
    1742:	70 40       	sbci	r23, 0x00	; 0
    1744:	09 a1       	lds	r16, 0x49
    1746:	1a a1       	lds	r17, 0x4a
    1748:	2b a1       	lds	r18, 0x4b
    174a:	3c a1       	lds	r19, 0x4c
    174c:	78 01       	movw	r14, r16
    174e:	dd 24       	eor	r13, r13
    1750:	cc 24       	eor	r12, r12
    1752:	c4 2a       	or	r12, r20
    1754:	d5 2a       	or	r13, r21
    1756:	e6 2a       	or	r14, r22
    1758:	f7 2a       	or	r15, r23
    175a:	46 c2       	rjmp	.+1164   	; 0x1be8 <__udivdi3+0xc54>
    175c:	c8 16       	cp	r12, r24
    175e:	d9 06       	cpc	r13, r25
    1760:	ea 06       	cpc	r14, r26
    1762:	fb 06       	cpc	r15, r27
    1764:	08 f4       	brcc	.+2      	; 0x1768 <__udivdi3+0x7d4>
    1766:	2d c2       	rjmp	.+1114   	; 0x1bc2 <__udivdi3+0xc2e>
    1768:	80 30       	cpi	r24, 0x00	; 0
    176a:	10 e0       	ldi	r17, 0x00	; 0
    176c:	91 07       	cpc	r25, r17
    176e:	11 e0       	ldi	r17, 0x01	; 1
    1770:	a1 07       	cpc	r26, r17
    1772:	10 e0       	ldi	r17, 0x00	; 0
    1774:	b1 07       	cpc	r27, r17
    1776:	50 f4       	brcc	.+20     	; 0x178c <__udivdi3+0x7f8>
    1778:	8f 3f       	cpi	r24, 0xFF	; 255
    177a:	91 05       	cpc	r25, r1
    177c:	a1 05       	cpc	r26, r1
    177e:	b1 05       	cpc	r27, r1
    1780:	09 f0       	breq	.+2      	; 0x1784 <__udivdi3+0x7f0>
    1782:	88 f4       	brcc	.+34     	; 0x17a6 <__udivdi3+0x812>
    1784:	00 e0       	ldi	r16, 0x00	; 0
    1786:	10 e0       	ldi	r17, 0x00	; 0
    1788:	98 01       	movw	r18, r16
    178a:	16 c0       	rjmp	.+44     	; 0x17b8 <__udivdi3+0x824>
    178c:	80 30       	cpi	r24, 0x00	; 0
    178e:	20 e0       	ldi	r18, 0x00	; 0
    1790:	92 07       	cpc	r25, r18
    1792:	20 e0       	ldi	r18, 0x00	; 0
    1794:	a2 07       	cpc	r26, r18
    1796:	21 e0       	ldi	r18, 0x01	; 1
    1798:	b2 07       	cpc	r27, r18
    179a:	50 f4       	brcc	.+20     	; 0x17b0 <__udivdi3+0x81c>
    179c:	00 e1       	ldi	r16, 0x10	; 16
    179e:	10 e0       	ldi	r17, 0x00	; 0
    17a0:	20 e0       	ldi	r18, 0x00	; 0
    17a2:	30 e0       	ldi	r19, 0x00	; 0
    17a4:	09 c0       	rjmp	.+18     	; 0x17b8 <__udivdi3+0x824>
    17a6:	08 e0       	ldi	r16, 0x08	; 8
    17a8:	10 e0       	ldi	r17, 0x00	; 0
    17aa:	20 e0       	ldi	r18, 0x00	; 0
    17ac:	30 e0       	ldi	r19, 0x00	; 0
    17ae:	04 c0       	rjmp	.+8      	; 0x17b8 <__udivdi3+0x824>
    17b0:	08 e1       	ldi	r16, 0x18	; 24
    17b2:	10 e0       	ldi	r17, 0x00	; 0
    17b4:	20 e0       	ldi	r18, 0x00	; 0
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	ac 01       	movw	r20, r24
    17ba:	bd 01       	movw	r22, r26
    17bc:	00 2e       	mov	r0, r16
    17be:	04 c0       	rjmp	.+8      	; 0x17c8 <__udivdi3+0x834>
    17c0:	76 95       	lsr	r23
    17c2:	67 95       	ror	r22
    17c4:	57 95       	ror	r21
    17c6:	47 95       	ror	r20
    17c8:	0a 94       	dec	r0
    17ca:	d2 f7       	brpl	.-12     	; 0x17c0 <__udivdi3+0x82c>
    17cc:	fa 01       	movw	r30, r20
    17ce:	e9 59       	subi	r30, 0x99	; 153
    17d0:	ff 4f       	sbci	r31, 0xFF	; 255
    17d2:	40 81       	ld	r20, Z
    17d4:	04 0f       	add	r16, r20
    17d6:	11 1d       	adc	r17, r1
    17d8:	21 1d       	adc	r18, r1
    17da:	31 1d       	adc	r19, r1
    17dc:	40 e2       	ldi	r20, 0x20	; 32
    17de:	50 e0       	ldi	r21, 0x00	; 0
    17e0:	60 e0       	ldi	r22, 0x00	; 0
    17e2:	70 e0       	ldi	r23, 0x00	; 0
    17e4:	40 1b       	sub	r20, r16
    17e6:	51 0b       	sbc	r21, r17
    17e8:	62 0b       	sbc	r22, r18
    17ea:	73 0b       	sbc	r23, r19
    17ec:	a1 f4       	brne	.+40     	; 0x1816 <__udivdi3+0x882>
    17ee:	8c 15       	cp	r24, r12
    17f0:	9d 05       	cpc	r25, r13
    17f2:	ae 05       	cpc	r26, r14
    17f4:	bf 05       	cpc	r27, r15
    17f6:	08 f4       	brcc	.+2      	; 0x17fa <__udivdi3+0x866>
    17f8:	eb c1       	rjmp	.+982    	; 0x1bd0 <__udivdi3+0xc3c>
    17fa:	0d a1       	lds	r16, 0x4d
    17fc:	1e a1       	lds	r17, 0x4e
    17fe:	2f a1       	lds	r18, 0x4f
    1800:	38 a5       	lds	r19, 0x68
    1802:	44 24       	eor	r4, r4
    1804:	55 24       	eor	r5, r5
    1806:	32 01       	movw	r6, r4
    1808:	08 15       	cp	r16, r8
    180a:	19 05       	cpc	r17, r9
    180c:	2a 05       	cpc	r18, r10
    180e:	3b 05       	cpc	r19, r11
    1810:	08 f0       	brcs	.+2      	; 0x1814 <__udivdi3+0x880>
    1812:	e1 c1       	rjmp	.+962    	; 0x1bd6 <__udivdi3+0xc42>
    1814:	d9 c1       	rjmp	.+946    	; 0x1bc8 <__udivdi3+0xc34>
    1816:	34 2e       	mov	r3, r20
    1818:	2c 01       	movw	r4, r24
    181a:	3d 01       	movw	r6, r26
    181c:	04 c0       	rjmp	.+8      	; 0x1826 <__udivdi3+0x892>
    181e:	44 0c       	add	r4, r4
    1820:	55 1c       	adc	r5, r5
    1822:	66 1c       	adc	r6, r6
    1824:	77 1c       	adc	r7, r7
    1826:	4a 95       	dec	r20
    1828:	d2 f7       	brpl	.-12     	; 0x181e <__udivdi3+0x88a>
    182a:	d5 01       	movw	r26, r10
    182c:	c4 01       	movw	r24, r8
    182e:	00 2e       	mov	r0, r16
    1830:	04 c0       	rjmp	.+8      	; 0x183a <__udivdi3+0x8a6>
    1832:	b6 95       	lsr	r27
    1834:	a7 95       	ror	r26
    1836:	97 95       	ror	r25
    1838:	87 95       	ror	r24
    183a:	0a 94       	dec	r0
    183c:	d2 f7       	brpl	.-12     	; 0x1832 <__udivdi3+0x89e>
    183e:	48 2a       	or	r4, r24
    1840:	59 2a       	or	r5, r25
    1842:	6a 2a       	or	r6, r26
    1844:	7b 2a       	or	r7, r27
    1846:	a5 01       	movw	r20, r10
    1848:	94 01       	movw	r18, r8
    184a:	03 2c       	mov	r0, r3
    184c:	04 c0       	rjmp	.+8      	; 0x1856 <__udivdi3+0x8c2>
    184e:	22 0f       	add	r18, r18
    1850:	33 1f       	adc	r19, r19
    1852:	44 1f       	adc	r20, r20
    1854:	55 1f       	adc	r21, r21
    1856:	0a 94       	dec	r0
    1858:	d2 f7       	brpl	.-12     	; 0x184e <__udivdi3+0x8ba>
    185a:	29 a7       	lds	r18, 0x79
    185c:	3a a7       	lds	r19, 0x7a
    185e:	4b a7       	lds	r20, 0x7b
    1860:	5c a7       	lds	r21, 0x7c
    1862:	b7 01       	movw	r22, r14
    1864:	a6 01       	movw	r20, r12
    1866:	00 2e       	mov	r0, r16
    1868:	04 c0       	rjmp	.+8      	; 0x1872 <__udivdi3+0x8de>
    186a:	76 95       	lsr	r23
    186c:	67 95       	ror	r22
    186e:	57 95       	ror	r21
    1870:	47 95       	ror	r20
    1872:	0a 94       	dec	r0
    1874:	d2 f7       	brpl	.-12     	; 0x186a <__udivdi3+0x8d6>
    1876:	49 a3       	lds	r20, 0x59
    1878:	5a a3       	lds	r21, 0x5a
    187a:	6b a3       	lds	r22, 0x5b
    187c:	7c a3       	lds	r23, 0x5c
    187e:	c7 01       	movw	r24, r14
    1880:	b6 01       	movw	r22, r12
    1882:	03 2c       	mov	r0, r3
    1884:	04 c0       	rjmp	.+8      	; 0x188e <__udivdi3+0x8fa>
    1886:	66 0f       	add	r22, r22
    1888:	77 1f       	adc	r23, r23
    188a:	88 1f       	adc	r24, r24
    188c:	99 1f       	adc	r25, r25
    188e:	0a 94       	dec	r0
    1890:	d2 f7       	brpl	.-12     	; 0x1886 <__udivdi3+0x8f2>
    1892:	6d 8f       	std	Y+29, r22	; 0x1d
    1894:	7e 8f       	std	Y+30, r23	; 0x1e
    1896:	8f 8f       	std	Y+31, r24	; 0x1f
    1898:	98 a3       	lds	r25, 0x58
    189a:	8d a1       	lds	r24, 0x4d
    189c:	9e a1       	lds	r25, 0x4e
    189e:	af a1       	lds	r26, 0x4f
    18a0:	b8 a5       	lds	r27, 0x68
    18a2:	04 c0       	rjmp	.+8      	; 0x18ac <__udivdi3+0x918>
    18a4:	b6 95       	lsr	r27
    18a6:	a7 95       	ror	r26
    18a8:	97 95       	ror	r25
    18aa:	87 95       	ror	r24
    18ac:	0a 95       	dec	r16
    18ae:	d2 f7       	brpl	.-12     	; 0x18a4 <__udivdi3+0x910>
    18b0:	4d 8d       	ldd	r20, Y+29	; 0x1d
    18b2:	5e 8d       	ldd	r21, Y+30	; 0x1e
    18b4:	6f 8d       	ldd	r22, Y+31	; 0x1f
    18b6:	78 a1       	lds	r23, 0x48
    18b8:	48 2b       	or	r20, r24
    18ba:	59 2b       	or	r21, r25
    18bc:	6a 2b       	or	r22, r26
    18be:	7b 2b       	or	r23, r27
    18c0:	4d 8f       	std	Y+29, r20	; 0x1d
    18c2:	5e 8f       	std	Y+30, r21	; 0x1e
    18c4:	6f 8f       	std	Y+31, r22	; 0x1f
    18c6:	78 a3       	lds	r23, 0x58
    18c8:	43 01       	movw	r8, r6
    18ca:	aa 24       	eor	r10, r10
    18cc:	bb 24       	eor	r11, r11
    18ce:	93 01       	movw	r18, r6
    18d0:	82 01       	movw	r16, r4
    18d2:	20 70       	andi	r18, 0x00	; 0
    18d4:	30 70       	andi	r19, 0x00	; 0
    18d6:	0d a7       	lds	r16, 0x7d
    18d8:	1e a7       	lds	r17, 0x7e
    18da:	2f a7       	lds	r18, 0x7f
    18dc:	38 ab       	sts	0x58, r19
    18de:	69 a1       	lds	r22, 0x49
    18e0:	7a a1       	lds	r23, 0x4a
    18e2:	8b a1       	lds	r24, 0x4b
    18e4:	9c a1       	lds	r25, 0x4c
    18e6:	a5 01       	movw	r20, r10
    18e8:	94 01       	movw	r18, r8
    18ea:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    18ee:	29 8f       	std	Y+25, r18	; 0x19
    18f0:	3a 8f       	std	Y+26, r19	; 0x1a
    18f2:	4b 8f       	std	Y+27, r20	; 0x1b
    18f4:	5c 8f       	std	Y+28, r21	; 0x1c
    18f6:	6b 01       	movw	r12, r22
    18f8:	7c 01       	movw	r14, r24
    18fa:	69 a1       	lds	r22, 0x49
    18fc:	7a a1       	lds	r23, 0x4a
    18fe:	8b a1       	lds	r24, 0x4b
    1900:	9c a1       	lds	r25, 0x4c
    1902:	a5 01       	movw	r20, r10
    1904:	94 01       	movw	r18, r8
    1906:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    190a:	ca 01       	movw	r24, r20
    190c:	b9 01       	movw	r22, r18
    190e:	2d a5       	lds	r18, 0x6d
    1910:	3e a5       	lds	r19, 0x6e
    1912:	4f a5       	lds	r20, 0x6f
    1914:	58 a9       	sts	0x48, r21
    1916:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    191a:	dc 01       	movw	r26, r24
    191c:	cb 01       	movw	r24, r22
    191e:	76 01       	movw	r14, r12
    1920:	dd 24       	eor	r13, r13
    1922:	cc 24       	eor	r12, r12
    1924:	0d 8d       	ldd	r16, Y+29	; 0x1d
    1926:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1928:	2f 8d       	ldd	r18, Y+31	; 0x1f
    192a:	38 a1       	lds	r19, 0x48
    192c:	a9 01       	movw	r20, r18
    192e:	66 27       	eor	r22, r22
    1930:	77 27       	eor	r23, r23
    1932:	c4 2a       	or	r12, r20
    1934:	d5 2a       	or	r13, r21
    1936:	e6 2a       	or	r14, r22
    1938:	f7 2a       	or	r15, r23
    193a:	09 8d       	ldd	r16, Y+25	; 0x19
    193c:	1a 8d       	ldd	r17, Y+26	; 0x1a
    193e:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1940:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1942:	c8 16       	cp	r12, r24
    1944:	d9 06       	cpc	r13, r25
    1946:	ea 06       	cpc	r14, r26
    1948:	fb 06       	cpc	r15, r27
    194a:	38 f5       	brcc	.+78     	; 0x199a <__udivdi3+0xa06>
    194c:	01 50       	subi	r16, 0x01	; 1
    194e:	10 40       	sbci	r17, 0x00	; 0
    1950:	20 40       	sbci	r18, 0x00	; 0
    1952:	30 40       	sbci	r19, 0x00	; 0
    1954:	09 a3       	lds	r16, 0x59
    1956:	1a a3       	lds	r17, 0x5a
    1958:	2b a3       	lds	r18, 0x5b
    195a:	3c a3       	lds	r19, 0x5c
    195c:	c4 0c       	add	r12, r4
    195e:	d5 1c       	adc	r13, r5
    1960:	e6 1c       	adc	r14, r6
    1962:	f7 1c       	adc	r15, r7
    1964:	c4 14       	cp	r12, r4
    1966:	d5 04       	cpc	r13, r5
    1968:	e6 04       	cpc	r14, r6
    196a:	f7 04       	cpc	r15, r7
    196c:	d0 f0       	brcs	.+52     	; 0x19a2 <__udivdi3+0xa0e>
    196e:	c8 16       	cp	r12, r24
    1970:	d9 06       	cpc	r13, r25
    1972:	ea 06       	cpc	r14, r26
    1974:	fb 06       	cpc	r15, r27
    1976:	a8 f4       	brcc	.+42     	; 0x19a2 <__udivdi3+0xa0e>
    1978:	09 8d       	ldd	r16, Y+25	; 0x19
    197a:	1a 8d       	ldd	r17, Y+26	; 0x1a
    197c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    197e:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1980:	02 50       	subi	r16, 0x02	; 2
    1982:	10 40       	sbci	r17, 0x00	; 0
    1984:	20 40       	sbci	r18, 0x00	; 0
    1986:	30 40       	sbci	r19, 0x00	; 0
    1988:	09 a3       	lds	r16, 0x59
    198a:	1a a3       	lds	r17, 0x5a
    198c:	2b a3       	lds	r18, 0x5b
    198e:	3c a3       	lds	r19, 0x5c
    1990:	c4 0c       	add	r12, r4
    1992:	d5 1c       	adc	r13, r5
    1994:	e6 1c       	adc	r14, r6
    1996:	f7 1c       	adc	r15, r7
    1998:	04 c0       	rjmp	.+8      	; 0x19a2 <__udivdi3+0xa0e>
    199a:	09 a3       	lds	r16, 0x59
    199c:	1a a3       	lds	r17, 0x5a
    199e:	2b a3       	lds	r18, 0x5b
    19a0:	3c a3       	lds	r19, 0x5c
    19a2:	c8 1a       	sub	r12, r24
    19a4:	d9 0a       	sbc	r13, r25
    19a6:	ea 0a       	sbc	r14, r26
    19a8:	fb 0a       	sbc	r15, r27
    19aa:	c7 01       	movw	r24, r14
    19ac:	b6 01       	movw	r22, r12
    19ae:	a5 01       	movw	r20, r10
    19b0:	94 01       	movw	r18, r8
    19b2:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    19b6:	29 8f       	std	Y+25, r18	; 0x19
    19b8:	3a 8f       	std	Y+26, r19	; 0x1a
    19ba:	4b 8f       	std	Y+27, r20	; 0x1b
    19bc:	5c 8f       	std	Y+28, r21	; 0x1c
    19be:	69 ab       	sts	0x59, r22
    19c0:	7a ab       	sts	0x5a, r23
    19c2:	8b ab       	sts	0x5b, r24
    19c4:	9c ab       	sts	0x5c, r25
    19c6:	c7 01       	movw	r24, r14
    19c8:	b6 01       	movw	r22, r12
    19ca:	a5 01       	movw	r20, r10
    19cc:	94 01       	movw	r18, r8
    19ce:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    19d2:	ca 01       	movw	r24, r20
    19d4:	b9 01       	movw	r22, r18
    19d6:	2d a5       	lds	r18, 0x6d
    19d8:	3e a5       	lds	r19, 0x6e
    19da:	4f a5       	lds	r20, 0x6f
    19dc:	58 a9       	sts	0x48, r21
    19de:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    19e2:	4b 01       	movw	r8, r22
    19e4:	5c 01       	movw	r10, r24
    19e6:	49 a9       	sts	0x49, r20
    19e8:	5a a9       	sts	0x4a, r21
    19ea:	6b a9       	sts	0x4b, r22
    19ec:	7c a9       	sts	0x4c, r23
    19ee:	9a 01       	movw	r18, r20
    19f0:	11 27       	eor	r17, r17
    19f2:	00 27       	eor	r16, r16
    19f4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    19f6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    19f8:	af 8d       	ldd	r26, Y+31	; 0x1f
    19fa:	b8 a1       	lds	r27, 0x48
    19fc:	a0 70       	andi	r26, 0x00	; 0
    19fe:	b0 70       	andi	r27, 0x00	; 0
    1a00:	08 2b       	or	r16, r24
    1a02:	19 2b       	or	r17, r25
    1a04:	2a 2b       	or	r18, r26
    1a06:	3b 2b       	or	r19, r27
    1a08:	89 8d       	ldd	r24, Y+25	; 0x19
    1a0a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a0c:	ab 8d       	ldd	r26, Y+27	; 0x1b
    1a0e:	bc 8d       	ldd	r27, Y+28	; 0x1c
    1a10:	08 15       	cp	r16, r8
    1a12:	19 05       	cpc	r17, r9
    1a14:	2a 05       	cpc	r18, r10
    1a16:	3b 05       	cpc	r19, r11
    1a18:	e0 f4       	brcc	.+56     	; 0x1a52 <__udivdi3+0xabe>
    1a1a:	01 97       	sbiw	r24, 0x01	; 1
    1a1c:	a1 09       	sbc	r26, r1
    1a1e:	b1 09       	sbc	r27, r1
    1a20:	04 0d       	add	r16, r4
    1a22:	15 1d       	adc	r17, r5
    1a24:	26 1d       	adc	r18, r6
    1a26:	37 1d       	adc	r19, r7
    1a28:	04 15       	cp	r16, r4
    1a2a:	15 05       	cpc	r17, r5
    1a2c:	26 05       	cpc	r18, r6
    1a2e:	37 05       	cpc	r19, r7
    1a30:	80 f0       	brcs	.+32     	; 0x1a52 <__udivdi3+0xabe>
    1a32:	08 15       	cp	r16, r8
    1a34:	19 05       	cpc	r17, r9
    1a36:	2a 05       	cpc	r18, r10
    1a38:	3b 05       	cpc	r19, r11
    1a3a:	58 f4       	brcc	.+22     	; 0x1a52 <__udivdi3+0xabe>
    1a3c:	89 8d       	ldd	r24, Y+25	; 0x19
    1a3e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a40:	ab 8d       	ldd	r26, Y+27	; 0x1b
    1a42:	bc 8d       	ldd	r27, Y+28	; 0x1c
    1a44:	02 97       	sbiw	r24, 0x02	; 2
    1a46:	a1 09       	sbc	r26, r1
    1a48:	b1 09       	sbc	r27, r1
    1a4a:	04 0d       	add	r16, r4
    1a4c:	15 1d       	adc	r17, r5
    1a4e:	26 1d       	adc	r18, r6
    1a50:	37 1d       	adc	r19, r7
    1a52:	b9 01       	movw	r22, r18
    1a54:	a8 01       	movw	r20, r16
    1a56:	48 19       	sub	r20, r8
    1a58:	59 09       	sbc	r21, r9
    1a5a:	6a 09       	sbc	r22, r10
    1a5c:	7b 09       	sbc	r23, r11
    1a5e:	4d 8f       	std	Y+29, r20	; 0x1d
    1a60:	5e 8f       	std	Y+30, r21	; 0x1e
    1a62:	6f 8f       	std	Y+31, r22	; 0x1f
    1a64:	78 a3       	lds	r23, 0x58
    1a66:	09 a1       	lds	r16, 0x49
    1a68:	1a a1       	lds	r17, 0x4a
    1a6a:	2b a1       	lds	r18, 0x4b
    1a6c:	3c a1       	lds	r19, 0x4c
    1a6e:	78 01       	movw	r14, r16
    1a70:	dd 24       	eor	r13, r13
    1a72:	cc 24       	eor	r12, r12
    1a74:	c8 2a       	or	r12, r24
    1a76:	d9 2a       	or	r13, r25
    1a78:	ea 2a       	or	r14, r26
    1a7a:	fb 2a       	or	r15, r27
    1a7c:	ff ef       	ldi	r31, 0xFF	; 255
    1a7e:	8f 2e       	mov	r8, r31
    1a80:	ff ef       	ldi	r31, 0xFF	; 255
    1a82:	9f 2e       	mov	r9, r31
    1a84:	a1 2c       	mov	r10, r1
    1a86:	b1 2c       	mov	r11, r1
    1a88:	8c 20       	and	r8, r12
    1a8a:	9d 20       	and	r9, r13
    1a8c:	ae 20       	and	r10, r14
    1a8e:	bf 20       	and	r11, r15
    1a90:	87 01       	movw	r16, r14
    1a92:	22 27       	eor	r18, r18
    1a94:	33 27       	eor	r19, r19
    1a96:	09 8f       	std	Y+25, r16	; 0x19
    1a98:	1a 8f       	std	Y+26, r17	; 0x1a
    1a9a:	2b 8f       	std	Y+27, r18	; 0x1b
    1a9c:	3c 8f       	std	Y+28, r19	; 0x1c
    1a9e:	49 a4       	lds	r20, 0xa9
    1aa0:	5a a4       	lds	r21, 0xaa
    1aa2:	6b a4       	lds	r22, 0xab
    1aa4:	7c a4       	lds	r23, 0xac
    1aa6:	2f ef       	ldi	r18, 0xFF	; 255
    1aa8:	3f ef       	ldi	r19, 0xFF	; 255
    1aaa:	40 e0       	ldi	r20, 0x00	; 0
    1aac:	50 e0       	ldi	r21, 0x00	; 0
    1aae:	42 22       	and	r4, r18
    1ab0:	53 22       	and	r5, r19
    1ab2:	64 22       	and	r6, r20
    1ab4:	75 22       	and	r7, r21
    1ab6:	29 a5       	lds	r18, 0x69
    1ab8:	3a a5       	lds	r19, 0x6a
    1aba:	4b a5       	lds	r20, 0x6b
    1abc:	5c a5       	lds	r21, 0x6c
    1abe:	8a 01       	movw	r16, r20
    1ac0:	22 27       	eor	r18, r18
    1ac2:	33 27       	eor	r19, r19
    1ac4:	09 a3       	lds	r16, 0x59
    1ac6:	1a a3       	lds	r17, 0x5a
    1ac8:	2b a3       	lds	r18, 0x5b
    1aca:	3c a3       	lds	r19, 0x5c
    1acc:	c5 01       	movw	r24, r10
    1ace:	b4 01       	movw	r22, r8
    1ad0:	a3 01       	movw	r20, r6
    1ad2:	92 01       	movw	r18, r4
    1ad4:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    1ad8:	69 a7       	lds	r22, 0x79
    1ada:	7a a7       	lds	r23, 0x7a
    1adc:	8b a7       	lds	r24, 0x7b
    1ade:	9c a7       	lds	r25, 0x7c
    1ae0:	c5 01       	movw	r24, r10
    1ae2:	b4 01       	movw	r22, r8
    1ae4:	29 a1       	lds	r18, 0x49
    1ae6:	3a a1       	lds	r19, 0x4a
    1ae8:	4b a1       	lds	r20, 0x4b
    1aea:	5c a1       	lds	r21, 0x4c
    1aec:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    1af0:	4b 01       	movw	r8, r22
    1af2:	5c 01       	movw	r10, r24
    1af4:	69 8d       	ldd	r22, Y+25	; 0x19
    1af6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1af8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1afa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1afc:	a3 01       	movw	r20, r6
    1afe:	92 01       	movw	r18, r4
    1b00:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    1b04:	2b 01       	movw	r4, r22
    1b06:	3c 01       	movw	r6, r24
    1b08:	69 8d       	ldd	r22, Y+25	; 0x19
    1b0a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b0c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b0e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b10:	29 a1       	lds	r18, 0x49
    1b12:	3a a1       	lds	r19, 0x4a
    1b14:	4b a1       	lds	r20, 0x4b
    1b16:	5c a1       	lds	r21, 0x4c
    1b18:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__mulsi3>
    1b1c:	ab 01       	movw	r20, r22
    1b1e:	bc 01       	movw	r22, r24
    1b20:	84 0c       	add	r8, r4
    1b22:	95 1c       	adc	r9, r5
    1b24:	a6 1c       	adc	r10, r6
    1b26:	b7 1c       	adc	r11, r7
    1b28:	09 a5       	lds	r16, 0x69
    1b2a:	1a a5       	lds	r17, 0x6a
    1b2c:	2b a5       	lds	r18, 0x6b
    1b2e:	3c a5       	lds	r19, 0x6c
    1b30:	c9 01       	movw	r24, r18
    1b32:	aa 27       	eor	r26, r26
    1b34:	bb 27       	eor	r27, r27
    1b36:	88 0e       	add	r8, r24
    1b38:	99 1e       	adc	r9, r25
    1b3a:	aa 1e       	adc	r10, r26
    1b3c:	bb 1e       	adc	r11, r27
    1b3e:	84 14       	cp	r8, r4
    1b40:	95 04       	cpc	r9, r5
    1b42:	a6 04       	cpc	r10, r6
    1b44:	b7 04       	cpc	r11, r7
    1b46:	20 f4       	brcc	.+8      	; 0x1b50 <__udivdi3+0xbbc>
    1b48:	40 50       	subi	r20, 0x00	; 0
    1b4a:	50 40       	sbci	r21, 0x00	; 0
    1b4c:	6f 4f       	sbci	r22, 0xFF	; 255
    1b4e:	7f 4f       	sbci	r23, 0xFF	; 255
    1b50:	c5 01       	movw	r24, r10
    1b52:	aa 27       	eor	r26, r26
    1b54:	bb 27       	eor	r27, r27
    1b56:	84 0f       	add	r24, r20
    1b58:	95 1f       	adc	r25, r21
    1b5a:	a6 1f       	adc	r26, r22
    1b5c:	b7 1f       	adc	r27, r23
    1b5e:	0d 8d       	ldd	r16, Y+29	; 0x1d
    1b60:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1b62:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1b64:	38 a1       	lds	r19, 0x48
    1b66:	08 17       	cp	r16, r24
    1b68:	19 07       	cpc	r17, r25
    1b6a:	2a 07       	cpc	r18, r26
    1b6c:	3b 07       	cpc	r19, r27
    1b6e:	18 f1       	brcs	.+70     	; 0x1bb6 <__udivdi3+0xc22>
    1b70:	80 17       	cp	r24, r16
    1b72:	91 07       	cpc	r25, r17
    1b74:	a2 07       	cpc	r26, r18
    1b76:	b3 07       	cpc	r27, r19
    1b78:	a1 f5       	brne	.+104    	; 0x1be2 <__udivdi3+0xc4e>
    1b7a:	54 01       	movw	r10, r8
    1b7c:	99 24       	eor	r9, r9
    1b7e:	88 24       	eor	r8, r8
    1b80:	89 a5       	lds	r24, 0x69
    1b82:	9a a5       	lds	r25, 0x6a
    1b84:	ab a5       	lds	r26, 0x6b
    1b86:	bc a5       	lds	r27, 0x6c
    1b88:	a0 70       	andi	r26, 0x00	; 0
    1b8a:	b0 70       	andi	r27, 0x00	; 0
    1b8c:	88 0e       	add	r8, r24
    1b8e:	99 1e       	adc	r9, r25
    1b90:	aa 1e       	adc	r10, r26
    1b92:	bb 1e       	adc	r11, r27
    1b94:	4d a1       	lds	r20, 0x4d
    1b96:	5e a1       	lds	r21, 0x4e
    1b98:	6f a1       	lds	r22, 0x4f
    1b9a:	78 a5       	lds	r23, 0x68
    1b9c:	03 2c       	mov	r0, r3
    1b9e:	04 c0       	rjmp	.+8      	; 0x1ba8 <__udivdi3+0xc14>
    1ba0:	44 0f       	add	r20, r20
    1ba2:	55 1f       	adc	r21, r21
    1ba4:	66 1f       	adc	r22, r22
    1ba6:	77 1f       	adc	r23, r23
    1ba8:	0a 94       	dec	r0
    1baa:	d2 f7       	brpl	.-12     	; 0x1ba0 <__udivdi3+0xc0c>
    1bac:	48 15       	cp	r20, r8
    1bae:	59 05       	cpc	r21, r9
    1bb0:	6a 05       	cpc	r22, r10
    1bb2:	7b 05       	cpc	r23, r11
    1bb4:	b0 f4       	brcc	.+44     	; 0x1be2 <__udivdi3+0xc4e>
    1bb6:	08 94       	sec
    1bb8:	c1 08       	sbc	r12, r1
    1bba:	d1 08       	sbc	r13, r1
    1bbc:	e1 08       	sbc	r14, r1
    1bbe:	f1 08       	sbc	r15, r1
    1bc0:	10 c0       	rjmp	.+32     	; 0x1be2 <__udivdi3+0xc4e>
    1bc2:	44 24       	eor	r4, r4
    1bc4:	55 24       	eor	r5, r5
    1bc6:	32 01       	movw	r6, r4
    1bc8:	cc 24       	eor	r12, r12
    1bca:	dd 24       	eor	r13, r13
    1bcc:	76 01       	movw	r14, r12
    1bce:	0c c0       	rjmp	.+24     	; 0x1be8 <__udivdi3+0xc54>
    1bd0:	44 24       	eor	r4, r4
    1bd2:	55 24       	eor	r5, r5
    1bd4:	32 01       	movw	r6, r4
    1bd6:	81 e0       	ldi	r24, 0x01	; 1
    1bd8:	c8 2e       	mov	r12, r24
    1bda:	d1 2c       	mov	r13, r1
    1bdc:	e1 2c       	mov	r14, r1
    1bde:	f1 2c       	mov	r15, r1
    1be0:	03 c0       	rjmp	.+6      	; 0x1be8 <__udivdi3+0xc54>
    1be2:	44 24       	eor	r4, r4
    1be4:	55 24       	eor	r5, r5
    1be6:	32 01       	movw	r6, r4
    1be8:	fe 01       	movw	r30, r28
    1bea:	31 96       	adiw	r30, 0x01	; 1
    1bec:	88 e0       	ldi	r24, 0x08	; 8
    1bee:	df 01       	movw	r26, r30
    1bf0:	1d 92       	st	X+, r1
    1bf2:	8a 95       	dec	r24
    1bf4:	e9 f7       	brne	.-6      	; 0x1bf0 <__udivdi3+0xc5c>
    1bf6:	c9 82       	std	Y+1, r12	; 0x01
    1bf8:	da 82       	std	Y+2, r13	; 0x02
    1bfa:	eb 82       	std	Y+3, r14	; 0x03
    1bfc:	fc 82       	std	Y+4, r15	; 0x04
    1bfe:	4d 82       	std	Y+5, r4	; 0x05
    1c00:	5e 82       	std	Y+6, r5	; 0x06
    1c02:	6f 82       	std	Y+7, r6	; 0x07
    1c04:	78 86       	std	Y+8, r7	; 0x08
    1c06:	2c 2d       	mov	r18, r12
    1c08:	3a 81       	ldd	r19, Y+2	; 0x02
    1c0a:	4b 81       	ldd	r20, Y+3	; 0x03
    1c0c:	5c 81       	ldd	r21, Y+4	; 0x04
    1c0e:	64 2d       	mov	r22, r4
    1c10:	7e 81       	ldd	r23, Y+6	; 0x06
    1c12:	8f 81       	ldd	r24, Y+7	; 0x07
    1c14:	98 85       	ldd	r25, Y+8	; 0x08
    1c16:	e4 96       	adiw	r28, 0x34	; 52
    1c18:	e1 e1       	ldi	r30, 0x11	; 17
    1c1a:	0c 94 f2 0f 	jmp	0x1fe4	; 0x1fe4 <__epilogue_restores__+0x2>

00001c1e <__divsf3>:
    1c1e:	0c d0       	rcall	.+24     	; 0x1c38 <__divsf3x>
    1c20:	e6 c0       	rjmp	.+460    	; 0x1dee <__fp_round>
    1c22:	de d0       	rcall	.+444    	; 0x1de0 <__fp_pscB>
    1c24:	40 f0       	brcs	.+16     	; 0x1c36 <__divsf3+0x18>
    1c26:	d5 d0       	rcall	.+426    	; 0x1dd2 <__fp_pscA>
    1c28:	30 f0       	brcs	.+12     	; 0x1c36 <__divsf3+0x18>
    1c2a:	21 f4       	brne	.+8      	; 0x1c34 <__divsf3+0x16>
    1c2c:	5f 3f       	cpi	r21, 0xFF	; 255
    1c2e:	19 f0       	breq	.+6      	; 0x1c36 <__divsf3+0x18>
    1c30:	c7 c0       	rjmp	.+398    	; 0x1dc0 <__fp_inf>
    1c32:	51 11       	cpse	r21, r1
    1c34:	10 c1       	rjmp	.+544    	; 0x1e56 <__fp_szero>
    1c36:	ca c0       	rjmp	.+404    	; 0x1dcc <__fp_nan>

00001c38 <__divsf3x>:
    1c38:	eb d0       	rcall	.+470    	; 0x1e10 <__fp_split3>
    1c3a:	98 f3       	brcs	.-26     	; 0x1c22 <__divsf3+0x4>

00001c3c <__divsf3_pse>:
    1c3c:	99 23       	and	r25, r25
    1c3e:	c9 f3       	breq	.-14     	; 0x1c32 <__divsf3+0x14>
    1c40:	55 23       	and	r21, r21
    1c42:	b1 f3       	breq	.-20     	; 0x1c30 <__divsf3+0x12>
    1c44:	95 1b       	sub	r25, r21
    1c46:	55 0b       	sbc	r21, r21
    1c48:	bb 27       	eor	r27, r27
    1c4a:	aa 27       	eor	r26, r26
    1c4c:	62 17       	cp	r22, r18
    1c4e:	73 07       	cpc	r23, r19
    1c50:	84 07       	cpc	r24, r20
    1c52:	38 f0       	brcs	.+14     	; 0x1c62 <__divsf3_pse+0x26>
    1c54:	9f 5f       	subi	r25, 0xFF	; 255
    1c56:	5f 4f       	sbci	r21, 0xFF	; 255
    1c58:	22 0f       	add	r18, r18
    1c5a:	33 1f       	adc	r19, r19
    1c5c:	44 1f       	adc	r20, r20
    1c5e:	aa 1f       	adc	r26, r26
    1c60:	a9 f3       	breq	.-22     	; 0x1c4c <__divsf3_pse+0x10>
    1c62:	33 d0       	rcall	.+102    	; 0x1cca <__divsf3_pse+0x8e>
    1c64:	0e 2e       	mov	r0, r30
    1c66:	3a f0       	brmi	.+14     	; 0x1c76 <__divsf3_pse+0x3a>
    1c68:	e0 e8       	ldi	r30, 0x80	; 128
    1c6a:	30 d0       	rcall	.+96     	; 0x1ccc <__divsf3_pse+0x90>
    1c6c:	91 50       	subi	r25, 0x01	; 1
    1c6e:	50 40       	sbci	r21, 0x00	; 0
    1c70:	e6 95       	lsr	r30
    1c72:	00 1c       	adc	r0, r0
    1c74:	ca f7       	brpl	.-14     	; 0x1c68 <__divsf3_pse+0x2c>
    1c76:	29 d0       	rcall	.+82     	; 0x1cca <__divsf3_pse+0x8e>
    1c78:	fe 2f       	mov	r31, r30
    1c7a:	27 d0       	rcall	.+78     	; 0x1cca <__divsf3_pse+0x8e>
    1c7c:	66 0f       	add	r22, r22
    1c7e:	77 1f       	adc	r23, r23
    1c80:	88 1f       	adc	r24, r24
    1c82:	bb 1f       	adc	r27, r27
    1c84:	26 17       	cp	r18, r22
    1c86:	37 07       	cpc	r19, r23
    1c88:	48 07       	cpc	r20, r24
    1c8a:	ab 07       	cpc	r26, r27
    1c8c:	b0 e8       	ldi	r27, 0x80	; 128
    1c8e:	09 f0       	breq	.+2      	; 0x1c92 <__divsf3_pse+0x56>
    1c90:	bb 0b       	sbc	r27, r27
    1c92:	80 2d       	mov	r24, r0
    1c94:	bf 01       	movw	r22, r30
    1c96:	ff 27       	eor	r31, r31
    1c98:	93 58       	subi	r25, 0x83	; 131
    1c9a:	5f 4f       	sbci	r21, 0xFF	; 255
    1c9c:	2a f0       	brmi	.+10     	; 0x1ca8 <__divsf3_pse+0x6c>
    1c9e:	9e 3f       	cpi	r25, 0xFE	; 254
    1ca0:	51 05       	cpc	r21, r1
    1ca2:	68 f0       	brcs	.+26     	; 0x1cbe <__divsf3_pse+0x82>
    1ca4:	8d c0       	rjmp	.+282    	; 0x1dc0 <__fp_inf>
    1ca6:	d7 c0       	rjmp	.+430    	; 0x1e56 <__fp_szero>
    1ca8:	5f 3f       	cpi	r21, 0xFF	; 255
    1caa:	ec f3       	brlt	.-6      	; 0x1ca6 <__divsf3_pse+0x6a>
    1cac:	98 3e       	cpi	r25, 0xE8	; 232
    1cae:	dc f3       	brlt	.-10     	; 0x1ca6 <__divsf3_pse+0x6a>
    1cb0:	86 95       	lsr	r24
    1cb2:	77 95       	ror	r23
    1cb4:	67 95       	ror	r22
    1cb6:	b7 95       	ror	r27
    1cb8:	f7 95       	ror	r31
    1cba:	9f 5f       	subi	r25, 0xFF	; 255
    1cbc:	c9 f7       	brne	.-14     	; 0x1cb0 <__divsf3_pse+0x74>
    1cbe:	88 0f       	add	r24, r24
    1cc0:	91 1d       	adc	r25, r1
    1cc2:	96 95       	lsr	r25
    1cc4:	87 95       	ror	r24
    1cc6:	97 f9       	bld	r25, 7
    1cc8:	08 95       	ret
    1cca:	e1 e0       	ldi	r30, 0x01	; 1
    1ccc:	66 0f       	add	r22, r22
    1cce:	77 1f       	adc	r23, r23
    1cd0:	88 1f       	adc	r24, r24
    1cd2:	bb 1f       	adc	r27, r27
    1cd4:	62 17       	cp	r22, r18
    1cd6:	73 07       	cpc	r23, r19
    1cd8:	84 07       	cpc	r24, r20
    1cda:	ba 07       	cpc	r27, r26
    1cdc:	20 f0       	brcs	.+8      	; 0x1ce6 <__divsf3_pse+0xaa>
    1cde:	62 1b       	sub	r22, r18
    1ce0:	73 0b       	sbc	r23, r19
    1ce2:	84 0b       	sbc	r24, r20
    1ce4:	ba 0b       	sbc	r27, r26
    1ce6:	ee 1f       	adc	r30, r30
    1ce8:	88 f7       	brcc	.-30     	; 0x1ccc <__divsf3_pse+0x90>
    1cea:	e0 95       	com	r30
    1cec:	08 95       	ret

00001cee <__fixunssfsi>:
    1cee:	98 d0       	rcall	.+304    	; 0x1e20 <__fp_splitA>
    1cf0:	88 f0       	brcs	.+34     	; 0x1d14 <__fixunssfsi+0x26>
    1cf2:	9f 57       	subi	r25, 0x7F	; 127
    1cf4:	90 f0       	brcs	.+36     	; 0x1d1a <__fixunssfsi+0x2c>
    1cf6:	b9 2f       	mov	r27, r25
    1cf8:	99 27       	eor	r25, r25
    1cfa:	b7 51       	subi	r27, 0x17	; 23
    1cfc:	a0 f0       	brcs	.+40     	; 0x1d26 <__fixunssfsi+0x38>
    1cfe:	d1 f0       	breq	.+52     	; 0x1d34 <__fixunssfsi+0x46>
    1d00:	66 0f       	add	r22, r22
    1d02:	77 1f       	adc	r23, r23
    1d04:	88 1f       	adc	r24, r24
    1d06:	99 1f       	adc	r25, r25
    1d08:	1a f0       	brmi	.+6      	; 0x1d10 <__fixunssfsi+0x22>
    1d0a:	ba 95       	dec	r27
    1d0c:	c9 f7       	brne	.-14     	; 0x1d00 <__fixunssfsi+0x12>
    1d0e:	12 c0       	rjmp	.+36     	; 0x1d34 <__fixunssfsi+0x46>
    1d10:	b1 30       	cpi	r27, 0x01	; 1
    1d12:	81 f0       	breq	.+32     	; 0x1d34 <__fixunssfsi+0x46>
    1d14:	9f d0       	rcall	.+318    	; 0x1e54 <__fp_zero>
    1d16:	b1 e0       	ldi	r27, 0x01	; 1
    1d18:	08 95       	ret
    1d1a:	9c c0       	rjmp	.+312    	; 0x1e54 <__fp_zero>
    1d1c:	67 2f       	mov	r22, r23
    1d1e:	78 2f       	mov	r23, r24
    1d20:	88 27       	eor	r24, r24
    1d22:	b8 5f       	subi	r27, 0xF8	; 248
    1d24:	39 f0       	breq	.+14     	; 0x1d34 <__fixunssfsi+0x46>
    1d26:	b9 3f       	cpi	r27, 0xF9	; 249
    1d28:	cc f3       	brlt	.-14     	; 0x1d1c <__fixunssfsi+0x2e>
    1d2a:	86 95       	lsr	r24
    1d2c:	77 95       	ror	r23
    1d2e:	67 95       	ror	r22
    1d30:	b3 95       	inc	r27
    1d32:	d9 f7       	brne	.-10     	; 0x1d2a <__fixunssfsi+0x3c>
    1d34:	3e f4       	brtc	.+14     	; 0x1d44 <__fixunssfsi+0x56>
    1d36:	90 95       	com	r25
    1d38:	80 95       	com	r24
    1d3a:	70 95       	com	r23
    1d3c:	61 95       	neg	r22
    1d3e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d40:	8f 4f       	sbci	r24, 0xFF	; 255
    1d42:	9f 4f       	sbci	r25, 0xFF	; 255
    1d44:	08 95       	ret

00001d46 <__floatunsisf>:
    1d46:	e8 94       	clt
    1d48:	09 c0       	rjmp	.+18     	; 0x1d5c <__floatsisf+0x12>

00001d4a <__floatsisf>:
    1d4a:	97 fb       	bst	r25, 7
    1d4c:	3e f4       	brtc	.+14     	; 0x1d5c <__floatsisf+0x12>
    1d4e:	90 95       	com	r25
    1d50:	80 95       	com	r24
    1d52:	70 95       	com	r23
    1d54:	61 95       	neg	r22
    1d56:	7f 4f       	sbci	r23, 0xFF	; 255
    1d58:	8f 4f       	sbci	r24, 0xFF	; 255
    1d5a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d5c:	99 23       	and	r25, r25
    1d5e:	a9 f0       	breq	.+42     	; 0x1d8a <__floatsisf+0x40>
    1d60:	f9 2f       	mov	r31, r25
    1d62:	96 e9       	ldi	r25, 0x96	; 150
    1d64:	bb 27       	eor	r27, r27
    1d66:	93 95       	inc	r25
    1d68:	f6 95       	lsr	r31
    1d6a:	87 95       	ror	r24
    1d6c:	77 95       	ror	r23
    1d6e:	67 95       	ror	r22
    1d70:	b7 95       	ror	r27
    1d72:	f1 11       	cpse	r31, r1
    1d74:	f8 cf       	rjmp	.-16     	; 0x1d66 <__floatsisf+0x1c>
    1d76:	fa f4       	brpl	.+62     	; 0x1db6 <__floatsisf+0x6c>
    1d78:	bb 0f       	add	r27, r27
    1d7a:	11 f4       	brne	.+4      	; 0x1d80 <__floatsisf+0x36>
    1d7c:	60 ff       	sbrs	r22, 0
    1d7e:	1b c0       	rjmp	.+54     	; 0x1db6 <__floatsisf+0x6c>
    1d80:	6f 5f       	subi	r22, 0xFF	; 255
    1d82:	7f 4f       	sbci	r23, 0xFF	; 255
    1d84:	8f 4f       	sbci	r24, 0xFF	; 255
    1d86:	9f 4f       	sbci	r25, 0xFF	; 255
    1d88:	16 c0       	rjmp	.+44     	; 0x1db6 <__floatsisf+0x6c>
    1d8a:	88 23       	and	r24, r24
    1d8c:	11 f0       	breq	.+4      	; 0x1d92 <__floatsisf+0x48>
    1d8e:	96 e9       	ldi	r25, 0x96	; 150
    1d90:	11 c0       	rjmp	.+34     	; 0x1db4 <__floatsisf+0x6a>
    1d92:	77 23       	and	r23, r23
    1d94:	21 f0       	breq	.+8      	; 0x1d9e <__floatsisf+0x54>
    1d96:	9e e8       	ldi	r25, 0x8E	; 142
    1d98:	87 2f       	mov	r24, r23
    1d9a:	76 2f       	mov	r23, r22
    1d9c:	05 c0       	rjmp	.+10     	; 0x1da8 <__floatsisf+0x5e>
    1d9e:	66 23       	and	r22, r22
    1da0:	71 f0       	breq	.+28     	; 0x1dbe <__floatsisf+0x74>
    1da2:	96 e8       	ldi	r25, 0x86	; 134
    1da4:	86 2f       	mov	r24, r22
    1da6:	70 e0       	ldi	r23, 0x00	; 0
    1da8:	60 e0       	ldi	r22, 0x00	; 0
    1daa:	2a f0       	brmi	.+10     	; 0x1db6 <__floatsisf+0x6c>
    1dac:	9a 95       	dec	r25
    1dae:	66 0f       	add	r22, r22
    1db0:	77 1f       	adc	r23, r23
    1db2:	88 1f       	adc	r24, r24
    1db4:	da f7       	brpl	.-10     	; 0x1dac <__floatsisf+0x62>
    1db6:	88 0f       	add	r24, r24
    1db8:	96 95       	lsr	r25
    1dba:	87 95       	ror	r24
    1dbc:	97 f9       	bld	r25, 7
    1dbe:	08 95       	ret

00001dc0 <__fp_inf>:
    1dc0:	97 f9       	bld	r25, 7
    1dc2:	9f 67       	ori	r25, 0x7F	; 127
    1dc4:	80 e8       	ldi	r24, 0x80	; 128
    1dc6:	70 e0       	ldi	r23, 0x00	; 0
    1dc8:	60 e0       	ldi	r22, 0x00	; 0
    1dca:	08 95       	ret

00001dcc <__fp_nan>:
    1dcc:	9f ef       	ldi	r25, 0xFF	; 255
    1dce:	80 ec       	ldi	r24, 0xC0	; 192
    1dd0:	08 95       	ret

00001dd2 <__fp_pscA>:
    1dd2:	00 24       	eor	r0, r0
    1dd4:	0a 94       	dec	r0
    1dd6:	16 16       	cp	r1, r22
    1dd8:	17 06       	cpc	r1, r23
    1dda:	18 06       	cpc	r1, r24
    1ddc:	09 06       	cpc	r0, r25
    1dde:	08 95       	ret

00001de0 <__fp_pscB>:
    1de0:	00 24       	eor	r0, r0
    1de2:	0a 94       	dec	r0
    1de4:	12 16       	cp	r1, r18
    1de6:	13 06       	cpc	r1, r19
    1de8:	14 06       	cpc	r1, r20
    1dea:	05 06       	cpc	r0, r21
    1dec:	08 95       	ret

00001dee <__fp_round>:
    1dee:	09 2e       	mov	r0, r25
    1df0:	03 94       	inc	r0
    1df2:	00 0c       	add	r0, r0
    1df4:	11 f4       	brne	.+4      	; 0x1dfa <__fp_round+0xc>
    1df6:	88 23       	and	r24, r24
    1df8:	52 f0       	brmi	.+20     	; 0x1e0e <__fp_round+0x20>
    1dfa:	bb 0f       	add	r27, r27
    1dfc:	40 f4       	brcc	.+16     	; 0x1e0e <__fp_round+0x20>
    1dfe:	bf 2b       	or	r27, r31
    1e00:	11 f4       	brne	.+4      	; 0x1e06 <__fp_round+0x18>
    1e02:	60 ff       	sbrs	r22, 0
    1e04:	04 c0       	rjmp	.+8      	; 0x1e0e <__fp_round+0x20>
    1e06:	6f 5f       	subi	r22, 0xFF	; 255
    1e08:	7f 4f       	sbci	r23, 0xFF	; 255
    1e0a:	8f 4f       	sbci	r24, 0xFF	; 255
    1e0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e0e:	08 95       	ret

00001e10 <__fp_split3>:
    1e10:	57 fd       	sbrc	r21, 7
    1e12:	90 58       	subi	r25, 0x80	; 128
    1e14:	44 0f       	add	r20, r20
    1e16:	55 1f       	adc	r21, r21
    1e18:	59 f0       	breq	.+22     	; 0x1e30 <__fp_splitA+0x10>
    1e1a:	5f 3f       	cpi	r21, 0xFF	; 255
    1e1c:	71 f0       	breq	.+28     	; 0x1e3a <__fp_splitA+0x1a>
    1e1e:	47 95       	ror	r20

00001e20 <__fp_splitA>:
    1e20:	88 0f       	add	r24, r24
    1e22:	97 fb       	bst	r25, 7
    1e24:	99 1f       	adc	r25, r25
    1e26:	61 f0       	breq	.+24     	; 0x1e40 <__fp_splitA+0x20>
    1e28:	9f 3f       	cpi	r25, 0xFF	; 255
    1e2a:	79 f0       	breq	.+30     	; 0x1e4a <__fp_splitA+0x2a>
    1e2c:	87 95       	ror	r24
    1e2e:	08 95       	ret
    1e30:	12 16       	cp	r1, r18
    1e32:	13 06       	cpc	r1, r19
    1e34:	14 06       	cpc	r1, r20
    1e36:	55 1f       	adc	r21, r21
    1e38:	f2 cf       	rjmp	.-28     	; 0x1e1e <__fp_split3+0xe>
    1e3a:	46 95       	lsr	r20
    1e3c:	f1 df       	rcall	.-30     	; 0x1e20 <__fp_splitA>
    1e3e:	08 c0       	rjmp	.+16     	; 0x1e50 <__fp_splitA+0x30>
    1e40:	16 16       	cp	r1, r22
    1e42:	17 06       	cpc	r1, r23
    1e44:	18 06       	cpc	r1, r24
    1e46:	99 1f       	adc	r25, r25
    1e48:	f1 cf       	rjmp	.-30     	; 0x1e2c <__fp_splitA+0xc>
    1e4a:	86 95       	lsr	r24
    1e4c:	71 05       	cpc	r23, r1
    1e4e:	61 05       	cpc	r22, r1
    1e50:	08 94       	sec
    1e52:	08 95       	ret

00001e54 <__fp_zero>:
    1e54:	e8 94       	clt

00001e56 <__fp_szero>:
    1e56:	bb 27       	eor	r27, r27
    1e58:	66 27       	eor	r22, r22
    1e5a:	77 27       	eor	r23, r23
    1e5c:	cb 01       	movw	r24, r22
    1e5e:	97 f9       	bld	r25, 7
    1e60:	08 95       	ret

00001e62 <__mulsf3>:
    1e62:	0b d0       	rcall	.+22     	; 0x1e7a <__mulsf3x>
    1e64:	c4 cf       	rjmp	.-120    	; 0x1dee <__fp_round>
    1e66:	b5 df       	rcall	.-150    	; 0x1dd2 <__fp_pscA>
    1e68:	28 f0       	brcs	.+10     	; 0x1e74 <__mulsf3+0x12>
    1e6a:	ba df       	rcall	.-140    	; 0x1de0 <__fp_pscB>
    1e6c:	18 f0       	brcs	.+6      	; 0x1e74 <__mulsf3+0x12>
    1e6e:	95 23       	and	r25, r21
    1e70:	09 f0       	breq	.+2      	; 0x1e74 <__mulsf3+0x12>
    1e72:	a6 cf       	rjmp	.-180    	; 0x1dc0 <__fp_inf>
    1e74:	ab cf       	rjmp	.-170    	; 0x1dcc <__fp_nan>
    1e76:	11 24       	eor	r1, r1
    1e78:	ee cf       	rjmp	.-36     	; 0x1e56 <__fp_szero>

00001e7a <__mulsf3x>:
    1e7a:	ca df       	rcall	.-108    	; 0x1e10 <__fp_split3>
    1e7c:	a0 f3       	brcs	.-24     	; 0x1e66 <__mulsf3+0x4>

00001e7e <__mulsf3_pse>:
    1e7e:	95 9f       	mul	r25, r21
    1e80:	d1 f3       	breq	.-12     	; 0x1e76 <__mulsf3+0x14>
    1e82:	95 0f       	add	r25, r21
    1e84:	50 e0       	ldi	r21, 0x00	; 0
    1e86:	55 1f       	adc	r21, r21
    1e88:	62 9f       	mul	r22, r18
    1e8a:	f0 01       	movw	r30, r0
    1e8c:	72 9f       	mul	r23, r18
    1e8e:	bb 27       	eor	r27, r27
    1e90:	f0 0d       	add	r31, r0
    1e92:	b1 1d       	adc	r27, r1
    1e94:	63 9f       	mul	r22, r19
    1e96:	aa 27       	eor	r26, r26
    1e98:	f0 0d       	add	r31, r0
    1e9a:	b1 1d       	adc	r27, r1
    1e9c:	aa 1f       	adc	r26, r26
    1e9e:	64 9f       	mul	r22, r20
    1ea0:	66 27       	eor	r22, r22
    1ea2:	b0 0d       	add	r27, r0
    1ea4:	a1 1d       	adc	r26, r1
    1ea6:	66 1f       	adc	r22, r22
    1ea8:	82 9f       	mul	r24, r18
    1eaa:	22 27       	eor	r18, r18
    1eac:	b0 0d       	add	r27, r0
    1eae:	a1 1d       	adc	r26, r1
    1eb0:	62 1f       	adc	r22, r18
    1eb2:	73 9f       	mul	r23, r19
    1eb4:	b0 0d       	add	r27, r0
    1eb6:	a1 1d       	adc	r26, r1
    1eb8:	62 1f       	adc	r22, r18
    1eba:	83 9f       	mul	r24, r19
    1ebc:	a0 0d       	add	r26, r0
    1ebe:	61 1d       	adc	r22, r1
    1ec0:	22 1f       	adc	r18, r18
    1ec2:	74 9f       	mul	r23, r20
    1ec4:	33 27       	eor	r19, r19
    1ec6:	a0 0d       	add	r26, r0
    1ec8:	61 1d       	adc	r22, r1
    1eca:	23 1f       	adc	r18, r19
    1ecc:	84 9f       	mul	r24, r20
    1ece:	60 0d       	add	r22, r0
    1ed0:	21 1d       	adc	r18, r1
    1ed2:	82 2f       	mov	r24, r18
    1ed4:	76 2f       	mov	r23, r22
    1ed6:	6a 2f       	mov	r22, r26
    1ed8:	11 24       	eor	r1, r1
    1eda:	9f 57       	subi	r25, 0x7F	; 127
    1edc:	50 40       	sbci	r21, 0x00	; 0
    1ede:	8a f0       	brmi	.+34     	; 0x1f02 <__mulsf3_pse+0x84>
    1ee0:	e1 f0       	breq	.+56     	; 0x1f1a <__mulsf3_pse+0x9c>
    1ee2:	88 23       	and	r24, r24
    1ee4:	4a f0       	brmi	.+18     	; 0x1ef8 <__mulsf3_pse+0x7a>
    1ee6:	ee 0f       	add	r30, r30
    1ee8:	ff 1f       	adc	r31, r31
    1eea:	bb 1f       	adc	r27, r27
    1eec:	66 1f       	adc	r22, r22
    1eee:	77 1f       	adc	r23, r23
    1ef0:	88 1f       	adc	r24, r24
    1ef2:	91 50       	subi	r25, 0x01	; 1
    1ef4:	50 40       	sbci	r21, 0x00	; 0
    1ef6:	a9 f7       	brne	.-22     	; 0x1ee2 <__mulsf3_pse+0x64>
    1ef8:	9e 3f       	cpi	r25, 0xFE	; 254
    1efa:	51 05       	cpc	r21, r1
    1efc:	70 f0       	brcs	.+28     	; 0x1f1a <__mulsf3_pse+0x9c>
    1efe:	60 cf       	rjmp	.-320    	; 0x1dc0 <__fp_inf>
    1f00:	aa cf       	rjmp	.-172    	; 0x1e56 <__fp_szero>
    1f02:	5f 3f       	cpi	r21, 0xFF	; 255
    1f04:	ec f3       	brlt	.-6      	; 0x1f00 <__mulsf3_pse+0x82>
    1f06:	98 3e       	cpi	r25, 0xE8	; 232
    1f08:	dc f3       	brlt	.-10     	; 0x1f00 <__mulsf3_pse+0x82>
    1f0a:	86 95       	lsr	r24
    1f0c:	77 95       	ror	r23
    1f0e:	67 95       	ror	r22
    1f10:	b7 95       	ror	r27
    1f12:	f7 95       	ror	r31
    1f14:	e7 95       	ror	r30
    1f16:	9f 5f       	subi	r25, 0xFF	; 255
    1f18:	c1 f7       	brne	.-16     	; 0x1f0a <__mulsf3_pse+0x8c>
    1f1a:	fe 2b       	or	r31, r30
    1f1c:	88 0f       	add	r24, r24
    1f1e:	91 1d       	adc	r25, r1
    1f20:	96 95       	lsr	r25
    1f22:	87 95       	ror	r24
    1f24:	97 f9       	bld	r25, 7
    1f26:	08 95       	ret

00001f28 <__mulsi3>:
    1f28:	62 9f       	mul	r22, r18
    1f2a:	d0 01       	movw	r26, r0
    1f2c:	73 9f       	mul	r23, r19
    1f2e:	f0 01       	movw	r30, r0
    1f30:	82 9f       	mul	r24, r18
    1f32:	e0 0d       	add	r30, r0
    1f34:	f1 1d       	adc	r31, r1
    1f36:	64 9f       	mul	r22, r20
    1f38:	e0 0d       	add	r30, r0
    1f3a:	f1 1d       	adc	r31, r1
    1f3c:	92 9f       	mul	r25, r18
    1f3e:	f0 0d       	add	r31, r0
    1f40:	83 9f       	mul	r24, r19
    1f42:	f0 0d       	add	r31, r0
    1f44:	74 9f       	mul	r23, r20
    1f46:	f0 0d       	add	r31, r0
    1f48:	65 9f       	mul	r22, r21
    1f4a:	f0 0d       	add	r31, r0
    1f4c:	99 27       	eor	r25, r25
    1f4e:	72 9f       	mul	r23, r18
    1f50:	b0 0d       	add	r27, r0
    1f52:	e1 1d       	adc	r30, r1
    1f54:	f9 1f       	adc	r31, r25
    1f56:	63 9f       	mul	r22, r19
    1f58:	b0 0d       	add	r27, r0
    1f5a:	e1 1d       	adc	r30, r1
    1f5c:	f9 1f       	adc	r31, r25
    1f5e:	bd 01       	movw	r22, r26
    1f60:	cf 01       	movw	r24, r30
    1f62:	11 24       	eor	r1, r1
    1f64:	08 95       	ret

00001f66 <__udivmodsi4>:
    1f66:	a1 e2       	ldi	r26, 0x21	; 33
    1f68:	1a 2e       	mov	r1, r26
    1f6a:	aa 1b       	sub	r26, r26
    1f6c:	bb 1b       	sub	r27, r27
    1f6e:	fd 01       	movw	r30, r26
    1f70:	0d c0       	rjmp	.+26     	; 0x1f8c <__udivmodsi4_ep>

00001f72 <__udivmodsi4_loop>:
    1f72:	aa 1f       	adc	r26, r26
    1f74:	bb 1f       	adc	r27, r27
    1f76:	ee 1f       	adc	r30, r30
    1f78:	ff 1f       	adc	r31, r31
    1f7a:	a2 17       	cp	r26, r18
    1f7c:	b3 07       	cpc	r27, r19
    1f7e:	e4 07       	cpc	r30, r20
    1f80:	f5 07       	cpc	r31, r21
    1f82:	20 f0       	brcs	.+8      	; 0x1f8c <__udivmodsi4_ep>
    1f84:	a2 1b       	sub	r26, r18
    1f86:	b3 0b       	sbc	r27, r19
    1f88:	e4 0b       	sbc	r30, r20
    1f8a:	f5 0b       	sbc	r31, r21

00001f8c <__udivmodsi4_ep>:
    1f8c:	66 1f       	adc	r22, r22
    1f8e:	77 1f       	adc	r23, r23
    1f90:	88 1f       	adc	r24, r24
    1f92:	99 1f       	adc	r25, r25
    1f94:	1a 94       	dec	r1
    1f96:	69 f7       	brne	.-38     	; 0x1f72 <__udivmodsi4_loop>
    1f98:	60 95       	com	r22
    1f9a:	70 95       	com	r23
    1f9c:	80 95       	com	r24
    1f9e:	90 95       	com	r25
    1fa0:	9b 01       	movw	r18, r22
    1fa2:	ac 01       	movw	r20, r24
    1fa4:	bd 01       	movw	r22, r26
    1fa6:	cf 01       	movw	r24, r30
    1fa8:	08 95       	ret

00001faa <__prologue_saves__>:
    1faa:	2f 92       	push	r2
    1fac:	3f 92       	push	r3
    1fae:	4f 92       	push	r4
    1fb0:	5f 92       	push	r5
    1fb2:	6f 92       	push	r6
    1fb4:	7f 92       	push	r7
    1fb6:	8f 92       	push	r8
    1fb8:	9f 92       	push	r9
    1fba:	af 92       	push	r10
    1fbc:	bf 92       	push	r11
    1fbe:	cf 92       	push	r12
    1fc0:	df 92       	push	r13
    1fc2:	ef 92       	push	r14
    1fc4:	ff 92       	push	r15
    1fc6:	0f 93       	push	r16
    1fc8:	1f 93       	push	r17
    1fca:	cf 93       	push	r28
    1fcc:	df 93       	push	r29
    1fce:	cd b7       	in	r28, 0x3d	; 61
    1fd0:	de b7       	in	r29, 0x3e	; 62
    1fd2:	ca 1b       	sub	r28, r26
    1fd4:	db 0b       	sbc	r29, r27
    1fd6:	0f b6       	in	r0, 0x3f	; 63
    1fd8:	f8 94       	cli
    1fda:	de bf       	out	0x3e, r29	; 62
    1fdc:	0f be       	out	0x3f, r0	; 63
    1fde:	cd bf       	out	0x3d, r28	; 61
    1fe0:	09 94       	ijmp

00001fe2 <__epilogue_restores__>:
    1fe2:	2a 88       	ldd	r2, Y+18	; 0x12
    1fe4:	39 88       	ldd	r3, Y+17	; 0x11
    1fe6:	48 88       	ldd	r4, Y+16	; 0x10
    1fe8:	5f 84       	ldd	r5, Y+15	; 0x0f
    1fea:	6e 84       	ldd	r6, Y+14	; 0x0e
    1fec:	7d 84       	ldd	r7, Y+13	; 0x0d
    1fee:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ff0:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ff2:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ff4:	b9 84       	ldd	r11, Y+9	; 0x09
    1ff6:	c8 84       	ldd	r12, Y+8	; 0x08
    1ff8:	df 80       	ldd	r13, Y+7	; 0x07
    1ffa:	ee 80       	ldd	r14, Y+6	; 0x06
    1ffc:	fd 80       	ldd	r15, Y+5	; 0x05
    1ffe:	0c 81       	ldd	r16, Y+4	; 0x04
    2000:	1b 81       	ldd	r17, Y+3	; 0x03
    2002:	aa 81       	ldd	r26, Y+2	; 0x02
    2004:	b9 81       	ldd	r27, Y+1	; 0x01
    2006:	ce 0f       	add	r28, r30
    2008:	d1 1d       	adc	r29, r1
    200a:	0f b6       	in	r0, 0x3f	; 63
    200c:	f8 94       	cli
    200e:	de bf       	out	0x3e, r29	; 62
    2010:	0f be       	out	0x3f, r0	; 63
    2012:	cd bf       	out	0x3d, r28	; 61
    2014:	ed 01       	movw	r28, r26
    2016:	08 95       	ret

00002018 <_exit>:
    2018:	f8 94       	cli

0000201a <__stop_program>:
    201a:	ff cf       	rjmp	.-2      	; 0x201a <__stop_program>
